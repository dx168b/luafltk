/*
** Lua binding: fltk
** Generated automatically by tolua++-1.0.92 on 06/12/10 20:00:34.
*/

#ifndef __cplusplus
#include "stdlib.h"
#endif
#include "string.h"

#include "tolua++.h"

#ifdef __cplusplus
 extern "C" {
#endif
/* Exported function */
TOLUA_API int tolua_fltk_open (lua_State* tolua_S);
#ifdef __cplusplus
}
#endif


#include "tolua_base.h"
 
#include "fl_lua_misc.H" 
#include <FL/fl_types.h>
#include <FL/Enumerations.H>
#include <FL/Fl.H>
#include <FL/Fl_Adjuster.H>
#include <FL/Fl_BMP_Image.H>
#include <FL/Fl_Bitmap.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Browser_.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Chart.H>
#include <FL/Fl_Check_Browser.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Clock.H>
#include <FL/Fl_Color_Chooser.H>
#include <FL/Fl_Counter.H>
#include <FL/Fl_Device.H>
#include <FL/Fl_Dial.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Export.H>
#include <FL/Fl_File_Browser.H>
#include <FL/Fl_File_Chooser.H>
#include <FL/Fl_File_Icon.H>
#include <FL/Fl_File_Input.H>
#include <FL/Fl_Fill_Dial.H>
#include <FL/Fl_Fill_Slider.H>
#include <FL/Fl_Float_Input.H>
#include <FL/Fl_GIF_Image.H>
#include <FL/Fl_Gl_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Help_Dialog.H>
#include <FL/Fl_Help_View.H>
#include <FL/Fl_Hold_Browser.H>
#include <FL/Fl_Hor_Fill_Slider.H>
#include <FL/Fl_Hor_Nice_Slider.H>
#include <FL/Fl_Hor_Slider.H>
#include <FL/Fl_Hor_Value_Slider.H>
#include <FL/Fl_Image.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Input_.H>
#include <FL/Fl_Input_Choice.H>
#include <FL/Fl_Int_Input.H>
#include <FL/Fl_JPEG_Image.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Line_Dial.H>
#include <FL/Fl_Menu.H>
#include <FL/Fl_Menu_.H>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Menu_Button.H>
#include <FL/Fl_Menu_Item.H>
#include <FL/Fl_Menu_Window.H>
#include <FL/Fl_Multi_Browser.H>
#include <FL/Fl_Multi_Label.H>
#include <FL/Fl_Multiline_Input.H>
#include <FL/Fl_Multiline_Output.H>
#include <FL/Fl_Native_File_Chooser.H>
#include <FL/Fl_Nice_Slider.H>
#include <FL/Fl_Object.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Overlay_Window.H>
#include <FL/Fl_PNG_Image.H>
#include <FL/Fl_PNM_Image.H>
#include <FL/Fl_Pack.H>
#include <FL/Fl_Plugin.H>
#include <FL/Fl_Positioner.H>
#include <FL/Fl_Preferences.H>
#include <FL/Fl_Printer.H>
#include <FL/Fl_Progress.H>
#include <FL/Fl_RGB_Image.H>
#include <FL/Fl_Radio_Button.H>
#include <FL/Fl_Radio_Light_Button.H>
#include <FL/Fl_Radio_Round_Button.H>
#include <FL/Fl_Repeat_Button.H>
#include <FL/Fl_Return_Button.H>
#include <FL/Fl_Roller.H>
#include <FL/Fl_Round_Button.H>
#include <FL/Fl_Round_Clock.H>
#include <FL/Fl_Scroll.H>
#include <FL/Fl_Scrollbar.H>
#include <FL/Fl_Secret_Input.H>
#include <FL/Fl_Select_Browser.H>
#include <FL/Fl_Shared_Image.H>
#include <FL/Fl_Simple_Counter.H>
#include <FL/Fl_Single_Window.H>
#include <FL/Fl_Slider.H>
#include <FL/Fl_Spinner.H>
#include <FL/Fl_Sys_Menu_Bar.H>
#include <FL/Fl_Table.H>
#include <FL/Fl_Table_Row.H>
#include <FL/Fl_Tabs.H>
#include <FL/Fl_Text_Buffer.H>
#include <FL/Fl_Text_Display.H>
#include <FL/Fl_Text_Editor.H>
#include <FL/Fl_Tile.H>
#include <FL/Fl_Tiled_Image.H>
#include <FL/Fl_Toggle_Button.H>
#include <FL/Fl_Toggle_Light_Button.H>
#include <FL/Fl_Toggle_Round_Button.H>
#include <FL/Fl_Tooltip.H>
#include <FL/Fl_Tree.H>
#include <FL/Fl_Tree_Item.H>
#include <FL/Fl_Tree_Item_Array.H>
#include <FL/Fl_Tree_Prefs.H>
#include <FL/Fl_Valuator.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Widget.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Wizard.H>
#include <FL/Fl_XBM_Image.H>
#include <FL/Fl_XPM_Image.H>
#include <FL/dirent.h>
#include <FL/filename.H>
#include <FL/fl_ask.H>
#include <FL/fl_draw.H>
#include <FL/fl_message.H>
#include <FL/fl_show_colormap.H>
#include <FL/fl_show_input.H>
#include <FL/fl_utf8.h>
#include <FL/forms.H>
#include <FL/gl.h>
#include <FL/gl2opengl.h>
#include <FL/gl_draw.H>
#include <FL/glu.h>
#include <FL/glut.H>
#include <FL/math.h>
#include <FL/names.h>
#include <FL/Fl_Abstract_Printer.H>
#include <FL/Fl_PSfile_Device.H>

typedef int lua_Function;



#include <FL/Flv_Style.H>
#include <FL/Flv_List.H>
#include <FL/Flv_Table.H>
#include <FL/Flv_CStyle.H>
#include <FL/Flve_Input.H>
#include <FL/Flve_Check_Button.H>

#define step_int(i) step(i)
#define step_double_int(d, i) step(d, i)
#include "Fl_murgaLuaTimer.h"

/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Fl_Double_Window (lua_State* tolua_S)
{
 Fl_Double_Window* self = (Fl_Double_Window*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Radio_Button (lua_State* tolua_S)
{
 Fl_Radio_Button* self = (Fl_Radio_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Roller (lua_State* tolua_S)
{
 Fl_Roller* self = (Fl_Roller*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Line_Dial (lua_State* tolua_S)
{
 Fl_Line_Dial* self = (Fl_Line_Dial*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Repeat_Button (lua_State* tolua_S)
{
 Fl_Repeat_Button* self = (Fl_Repeat_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Input_Choice (lua_State* tolua_S)
{
 Fl_Input_Choice* self = (Fl_Input_Choice*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Round_Clock (lua_State* tolua_S)
{
 Fl_Round_Clock* self = (Fl_Round_Clock*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Image (lua_State* tolua_S)
{
 Fl_Image* self = (Fl_Image*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Flv_CStyle (lua_State* tolua_S)
{
 Flv_CStyle* self = (Flv_CStyle*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Round_Button (lua_State* tolua_S)
{
 Fl_Round_Button* self = (Fl_Round_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_JPEG_Image (lua_State* tolua_S)
{
 Fl_JPEG_Image* self = (Fl_JPEG_Image*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Tiled_Image (lua_State* tolua_S)
{
 Fl_Tiled_Image* self = (Fl_Tiled_Image*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Output (lua_State* tolua_S)
{
 Fl_Output* self = (Fl_Output*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Single_Window (lua_State* tolua_S)
{
 Fl_Single_Window* self = (Fl_Single_Window*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Text_Editor (lua_State* tolua_S)
{
 Fl_Text_Editor* self = (Fl_Text_Editor*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Value_Slider (lua_State* tolua_S)
{
 Fl_Value_Slider* self = (Fl_Value_Slider*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Fill_Slider (lua_State* tolua_S)
{
 Fl_Fill_Slider* self = (Fl_Fill_Slider*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Input (lua_State* tolua_S)
{
 Fl_Input* self = (Fl_Input*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Flve_Input (lua_State* tolua_S)
{
 Flve_Input* self = (Flve_Input*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Preferences (lua_State* tolua_S)
{
 Fl_Preferences* self = (Fl_Preferences*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Flve_Check_Button (lua_State* tolua_S)
{
 Flve_Check_Button* self = (Flve_Check_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Sys_Menu_Bar (lua_State* tolua_S)
{
 Fl_Sys_Menu_Bar* self = (Fl_Sys_Menu_Bar*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Flv_Table (lua_State* tolua_S)
{
 Flv_Table* self = (Flv_Table*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_File_Chooser (lua_State* tolua_S)
{
 Fl_File_Chooser* self = (Fl_File_Chooser*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Flv_Style (lua_State* tolua_S)
{
 Flv_Style* self = (Flv_Style*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Table (lua_State* tolua_S)
{
 Fl_Table* self = (Fl_Table*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Nice_Slider (lua_State* tolua_S)
{
 Fl_Nice_Slider* self = (Fl_Nice_Slider*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Scrollbar (lua_State* tolua_S)
{
 Fl_Scrollbar* self = (Fl_Scrollbar*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Flcc_HueBox (lua_State* tolua_S)
{
 Flcc_HueBox* self = (Flcc_HueBox*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Check_Button (lua_State* tolua_S)
{
 Fl_Check_Button* self = (Fl_Check_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Window (lua_State* tolua_S)
{
 Fl_Window* self = (Fl_Window*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Button (lua_State* tolua_S)
{
 Fl_Button* self = (Fl_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Bitmap (lua_State* tolua_S)
{
 Fl_Bitmap* self = (Fl_Bitmap*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Widget (lua_State* tolua_S)
{
 Fl_Widget* self = (Fl_Widget*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Help_Dialog (lua_State* tolua_S)
{
 Fl_Help_Dialog* self = (Fl_Help_Dialog*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_File_Input (lua_State* tolua_S)
{
 Fl_File_Input* self = (Fl_File_Input*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Flcc_ValueBox (lua_State* tolua_S)
{
 Flcc_ValueBox* self = (Flcc_ValueBox*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Radio_Light_Button (lua_State* tolua_S)
{
 Fl_Radio_Light_Button* self = (Fl_Radio_Light_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Menu_Button (lua_State* tolua_S)
{
 Fl_Menu_Button* self = (Fl_Menu_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Table_Row (lua_State* tolua_S)
{
 Fl_Table_Row* self = (Fl_Table_Row*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Clock_Output (lua_State* tolua_S)
{
 Fl_Clock_Output* self = (Fl_Clock_Output*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_File_Icon (lua_State* tolua_S)
{
 Fl_File_Icon* self = (Fl_File_Icon*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Region (lua_State* tolua_S)
{
 Fl_Region* self = (Fl_Region*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Menu_Window (lua_State* tolua_S)
{
 Fl_Menu_Window* self = (Fl_Menu_Window*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Fill_Dial (lua_State* tolua_S)
{
 Fl_Fill_Dial* self = (Fl_Fill_Dial*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_BMP_Image (lua_State* tolua_S)
{
 Fl_BMP_Image* self = (Fl_BMP_Image*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Select_Browser (lua_State* tolua_S)
{
 Fl_Select_Browser* self = (Fl_Select_Browser*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Hor_Value_Slider (lua_State* tolua_S)
{
 Fl_Hor_Value_Slider* self = (Fl_Hor_Value_Slider*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Pack (lua_State* tolua_S)
{
 Fl_Pack* self = (Fl_Pack*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Multiline_Output (lua_State* tolua_S)
{
 Fl_Multiline_Output* self = (Fl_Multiline_Output*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Hor_Nice_Slider (lua_State* tolua_S)
{
 Fl_Hor_Nice_Slider* self = (Fl_Hor_Nice_Slider*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Clock (lua_State* tolua_S)
{
 Fl_Clock* self = (Fl_Clock*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Hor_Slider (lua_State* tolua_S)
{
 Fl_Hor_Slider* self = (Fl_Hor_Slider*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Menu_Bar (lua_State* tolua_S)
{
 Fl_Menu_Bar* self = (Fl_Menu_Bar*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Spinner (lua_State* tolua_S)
{
 Fl_Spinner* self = (Fl_Spinner*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_GIF_Image (lua_State* tolua_S)
{
 Fl_GIF_Image* self = (Fl_GIF_Image*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Help_View (lua_State* tolua_S)
{
 Fl_Help_View* self = (Fl_Help_View*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Progress (lua_State* tolua_S)
{
 Fl_Progress* self = (Fl_Progress*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Hor_Fill_Slider (lua_State* tolua_S)
{
 Fl_Hor_Fill_Slider* self = (Fl_Hor_Fill_Slider*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Positioner (lua_State* tolua_S)
{
 Fl_Positioner* self = (Fl_Positioner*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Dial (lua_State* tolua_S)
{
 Fl_Dial* self = (Fl_Dial*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Slider (lua_State* tolua_S)
{
 Fl_Slider* self = (Fl_Slider*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Widget_Tracker (lua_State* tolua_S)
{
 Fl_Widget_Tracker* self = (Fl_Widget_Tracker*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Multiline_Input (lua_State* tolua_S)
{
 Fl_Multiline_Input* self = (Fl_Multiline_Input*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Box (lua_State* tolua_S)
{
 Fl_Box* self = (Fl_Box*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Tree_Item (lua_State* tolua_S)
{
 Fl_Tree_Item* self = (Fl_Tree_Item*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Int_Input (lua_State* tolua_S)
{
 Fl_Int_Input* self = (Fl_Int_Input*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Flcc_Value_Input (lua_State* tolua_S)
{
 Flcc_Value_Input* self = (Flcc_Value_Input*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_PNG_Image (lua_State* tolua_S)
{
 Fl_PNG_Image* self = (Fl_PNG_Image*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Check_Browser (lua_State* tolua_S)
{
 Fl_Check_Browser* self = (Fl_Check_Browser*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Value_Input (lua_State* tolua_S)
{
 Fl_Value_Input* self = (Fl_Value_Input*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Hold_Browser (lua_State* tolua_S)
{
 Fl_Hold_Browser* self = (Fl_Hold_Browser*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Radio_Round_Button (lua_State* tolua_S)
{
 Fl_Radio_Round_Button* self = (Fl_Radio_Round_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_PNM_Image (lua_State* tolua_S)
{
 Fl_PNM_Image* self = (Fl_PNM_Image*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Simple_Counter (lua_State* tolua_S)
{
 Fl_Simple_Counter* self = (Fl_Simple_Counter*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_PSfile_Device (lua_State* tolua_S)
{
 Fl_PSfile_Device* self = (Fl_PSfile_Device*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Wizard (lua_State* tolua_S)
{
 Fl_Wizard* self = (Fl_Wizard*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_XBM_Image (lua_State* tolua_S)
{
 Fl_XBM_Image* self = (Fl_XBM_Image*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_RGB_Image (lua_State* tolua_S)
{
 Fl_RGB_Image* self = (Fl_RGB_Image*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Counter (lua_State* tolua_S)
{
 Fl_Counter* self = (Fl_Counter*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Adjuster (lua_State* tolua_S)
{
 Fl_Adjuster* self = (Fl_Adjuster*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Tree_Prefs (lua_State* tolua_S)
{
 Fl_Tree_Prefs* self = (Fl_Tree_Prefs*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Return_Button (lua_State* tolua_S)
{
 Fl_Return_Button* self = (Fl_Return_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Tabs (lua_State* tolua_S)
{
 Fl_Tabs* self = (Fl_Tabs*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Scroll (lua_State* tolua_S)
{
 Fl_Scroll* self = (Fl_Scroll*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Tree_Item_Array (lua_State* tolua_S)
{
 Fl_Tree_Item_Array* self = (Fl_Tree_Item_Array*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Multi_Browser (lua_State* tolua_S)
{
 Fl_Multi_Browser* self = (Fl_Multi_Browser*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Tree (lua_State* tolua_S)
{
 Fl_Tree* self = (Fl_Tree*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Toggle_Button (lua_State* tolua_S)
{
 Fl_Toggle_Button* self = (Fl_Toggle_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Color_Chooser (lua_State* tolua_S)
{
 Fl_Color_Chooser* self = (Fl_Color_Chooser*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Printer (lua_State* tolua_S)
{
 Fl_Printer* self = (Fl_Printer*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Float_Input (lua_State* tolua_S)
{
 Fl_Float_Input* self = (Fl_Float_Input*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Tile (lua_State* tolua_S)
{
 Fl_Tile* self = (Fl_Tile*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Chart (lua_State* tolua_S)
{
 Fl_Chart* self = (Fl_Chart*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Light_Button (lua_State* tolua_S)
{
 Fl_Light_Button* self = (Fl_Light_Button*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Browser (lua_State* tolua_S)
{
 Fl_Browser* self = (Fl_Browser*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Value_Output (lua_State* tolua_S)
{
 Fl_Value_Output* self = (Fl_Value_Output*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Text_Buffer (lua_State* tolua_S)
{
 Fl_Text_Buffer* self = (Fl_Text_Buffer*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Secret_Input (lua_State* tolua_S)
{
 Fl_Secret_Input* self = (Fl_Secret_Input*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Group (lua_State* tolua_S)
{
 Fl_Group* self = (Fl_Group*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_File_Browser (lua_State* tolua_S)
{
 Fl_File_Browser* self = (Fl_File_Browser*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Flv_Style_List (lua_State* tolua_S)
{
 Flv_Style_List* self = (Flv_Style_List*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Text_Display (lua_State* tolua_S)
{
 Fl_Text_Display* self = (Fl_Text_Display*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_XPM_Image (lua_State* tolua_S)
{
 Fl_XPM_Image* self = (Fl_XPM_Image*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Flv_List (lua_State* tolua_S)
{
 Flv_List* self = (Flv_List*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}

static int tolua_collect_Fl_Choice (lua_State* tolua_S)
{
 Fl_Choice* self = (Fl_Choice*) tolua_tousertype(tolua_S,1,0);
 Mtolua_delete(self);
 return 0;
}
#endif


/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
 tolua_usertype(tolua_S,"Fl_Roller");
 tolua_usertype(tolua_S,"Fl_Line_Dial");
 tolua_usertype(tolua_S,"Fl_Hor_Value_Slider");
 tolua_usertype(tolua_S,"Lua__Fl_File_Input");
 tolua_usertype(tolua_S,"Lua__Fl_Light_Button");
 tolua_usertype(tolua_S,"Fl_Menu_Item");
 tolua_usertype(tolua_S,"Fl_RGB_Image");
 tolua_usertype(tolua_S,"Fl_JPEG_Image");
 tolua_usertype(tolua_S,"Lua__Fl_Abstract_Printer");
 tolua_usertype(tolua_S,"Lua__Fl_Dial");
 tolua_usertype(tolua_S,"Fl_Tiled_Image");
 tolua_usertype(tolua_S,"Fl_Output");
 tolua_usertype(tolua_S,"Fl_Single_Window");
 tolua_usertype(tolua_S,"Fl_Text_Modify_Cb");
 tolua_usertype(tolua_S,"Fl_Value_Slider");
 tolua_usertype(tolua_S,"Fl_Fill_Slider");
 tolua_usertype(tolua_S,"Fl_Pixmap");
 tolua_usertype(tolua_S,"Fl_Preferences");
 tolua_usertype(tolua_S,"Fl_Table");
 tolua_usertype(tolua_S,"Fl_Text_Predelete_Cb");
 tolua_usertype(tolua_S,"Fl_Idle_Handler");
 tolua_usertype(tolua_S,"Fl_Scrollbar");
 tolua_usertype(tolua_S,"Flcc_HueBox");
 tolua_usertype(tolua_S,"Fl_Check_Button");
 tolua_usertype(tolua_S,"Fl_Widget");
 tolua_usertype(tolua_S,"Fl_Help_Dialog");
 tolua_usertype(tolua_S,"Fl_Radio_Light_Button");
 tolua_usertype(tolua_S,"Fl_Hor_Fill_Slider");
 tolua_usertype(tolua_S,"Fl_Table_Row");
 tolua_usertype(tolua_S,"Fl_Fill_Dial");
 tolua_usertype(tolua_S,"Lua__Fl_Scrollbar");
 tolua_usertype(tolua_S,"Fl_Awake_Handler");
 tolua_usertype(tolua_S,"Fl_BMP_Image");
 tolua_usertype(tolua_S,"Fl_Tree");
 tolua_usertype(tolua_S,"Fl_Multiline_Output");
 tolua_usertype(tolua_S,"Lua__Fl_Image");
 tolua_usertype(tolua_S,"Fl_Clock");
 tolua_usertype(tolua_S,"Lua__Fl_Counter");
 tolua_usertype(tolua_S,"Fl_Menu_Bar");
 tolua_usertype(tolua_S,"Fl_Hor_Slider");
 tolua_usertype(tolua_S,"Fl_GIF_Image");
 tolua_usertype(tolua_S,"Flcc_Value_Input");
 tolua_usertype(tolua_S,"Fl_Light_Button");
 tolua_usertype(tolua_S,"Fl_Multiline_Input");
 tolua_usertype(tolua_S,"Fl_Box");
 tolua_usertype(tolua_S,"Lua__Fl_RGB_Image");
 tolua_usertype(tolua_S,"Lua__Fl_Pixmap");
 tolua_usertype(tolua_S,"Fl_Input_");
 tolua_usertype(tolua_S,"Fl_Radio_Round_Button");
 tolua_usertype(tolua_S,"Fl_PNM_Image");
 tolua_usertype(tolua_S,"Fl_Valuator");
 tolua_usertype(tolua_S,"Fl_PSfile_Device");
 tolua_usertype(tolua_S,"Lua__Fl_Value_Slider");
 tolua_usertype(tolua_S,"Lua__Fl_Table");
 tolua_usertype(tolua_S,"Fl_Tabs");
 tolua_usertype(tolua_S,"Fl_Scroll");
 tolua_usertype(tolua_S,"Fl_Device");
 tolua_usertype(tolua_S,"Lua__Flv_Table");
 tolua_usertype(tolua_S,"Fl_Display");
 tolua_usertype(tolua_S,"Fl_Text_Buffer");
 tolua_usertype(tolua_S,"Fl_Shared_Handler");
 tolua_usertype(tolua_S,"Fl_Float_Input");
 tolua_usertype(tolua_S,"Fl_Text_Selection");
 tolua_usertype(tolua_S,"Lua__Fl_Hold_Browser");
 tolua_usertype(tolua_S,"Fl_Browser");
 tolua_usertype(tolua_S,"Fl_Value_Output");
 tolua_usertype(tolua_S,"Fl_Shared_Image");
 tolua_usertype(tolua_S,"Fl_Secret_Input");
 tolua_usertype(tolua_S,"Lua__Fl_Text_Editor");
 tolua_usertype(tolua_S,"Lua__Fl_Multi_Browser");
 tolua_usertype(tolua_S,"Lua__Fl_Spinner");
 tolua_usertype(tolua_S,"Fl_Double_Window");
 tolua_usertype(tolua_S,"Fl_Radio_Button");
 tolua_usertype(tolua_S,"Fl_Gl_Window");
 tolua_usertype(tolua_S,"Fl_Repeat_Button");
 tolua_usertype(tolua_S,"Lua__Fl_Menu_Bar");
 tolua_usertype(tolua_S,"Fl_Round_Clock");
 tolua_usertype(tolua_S,"Lua__Fl_Float_Input");
 tolua_usertype(tolua_S,"Lua__Fl_Scroll");
 tolua_usertype(tolua_S,"const");
 tolua_usertype(tolua_S,"Fl_Group");
 tolua_usertype(tolua_S,"Lua__Fl_Value_Input");
 tolua_usertype(tolua_S,"Flve_Input");
 tolua_usertype(tolua_S,"Lua__Fl_Tree");
 tolua_usertype(tolua_S,"Flve_Check_Button");
 tolua_usertype(tolua_S,"Flv_Table");
 tolua_usertype(tolua_S,"Lua__Flv_List");
 tolua_usertype(tolua_S,"Fl_Atclose_Handler");
 tolua_usertype(tolua_S,"Lua__Fl_Device");
 tolua_usertype(tolua_S,"Flv_List");
 tolua_usertype(tolua_S,"Lua__Fl_Bitmap");
 tolua_usertype(tolua_S,"Fl_Draw_Image_Cb");
 tolua_usertype(tolua_S,"Fl_Menu_");
 tolua_usertype(tolua_S,"Flv_CStyle");
 tolua_usertype(tolua_S,"Fl_Input");
 tolua_usertype(tolua_S,"Flv_Style");
 tolua_usertype(tolua_S,"Fl_Label");
 tolua_usertype(tolua_S,"Fl_Chart");
 tolua_usertype(tolua_S,"wchar_t");
 tolua_usertype(tolua_S,"stat");
 tolua_usertype(tolua_S,"Fl_Region");
 tolua_usertype(tolua_S,"Fl_Image");
 tolua_usertype(tolua_S,"Lua__Fl_Positioner");
 tolua_usertype(tolua_S,"Fl_Nice_Slider");
 tolua_usertype(tolua_S,"Fl_Menu_Window");
 tolua_usertype(tolua_S,"Fl_Hor_Nice_Slider");
 tolua_usertype(tolua_S,"Lua__Fl_Slider");
 tolua_usertype(tolua_S,"Fl_Slider");
 tolua_usertype(tolua_S,"Lua__Fl_Double_Window");
 tolua_usertype(tolua_S,"Fl_Widget_Tracker");
 tolua_usertype(tolua_S,"Fl_Old_Idle_Handler");
 tolua_usertype(tolua_S,"Lua__Fl_Tiled_Image");
 tolua_usertype(tolua_S,"Fl_Button");
 tolua_usertype(tolua_S,"Fl_Bitmap");
 tolua_usertype(tolua_S,"Lua__Fl_Widget");
 tolua_usertype(tolua_S,"Fl_Abort_Handler");
 tolua_usertype(tolua_S,"Fl_File_Input");
 tolua_usertype(tolua_S,"Fl_Window");
 tolua_usertype(tolua_S,"Fl_FD_Handler");
 tolua_usertype(tolua_S,"Fl_Menu_Button");
 tolua_usertype(tolua_S,"Fl_Wizard");
 tolua_usertype(tolua_S,"Fl_Clock_Output");
 tolua_usertype(tolua_S,"Lua__Fl_Menu_Button");
 tolua_usertype(tolua_S,"Fl_Timeout_Handler");
 tolua_usertype(tolua_S,"Fl");
 tolua_usertype(tolua_S,"Flcc_ValueBox");
 tolua_usertype(tolua_S,"Fl_Round_Button");
 tolua_usertype(tolua_S,"Fl_Select_Browser");
 tolua_usertype(tolua_S,"Lua__Fl_Text_Display");
 tolua_usertype(tolua_S,"Fl_Pack");
 tolua_usertype(tolua_S,"Lua__Fl_Window");
 tolua_usertype(tolua_S,"Fl_Box_Draw_F");
 tolua_usertype(tolua_S,"Fl_Toggle_Button");
 tolua_usertype(tolua_S,"Fl_Browser_");
 tolua_usertype(tolua_S,"Fl_Value_Input");
 tolua_usertype(tolua_S,"Fl_Spinner");
 tolua_usertype(tolua_S,"FILE");
 tolua_usertype(tolua_S,"Fl_Help_View");
 tolua_usertype(tolua_S,"Fl_Progress");
 tolua_usertype(tolua_S,"Fl_Counter");
 tolua_usertype(tolua_S,"Fl_Positioner");
 tolua_usertype(tolua_S,"Fl_Dial");
 tolua_usertype(tolua_S,"Fl_Callback");
 tolua_usertype(tolua_S,"Fl_Adjuster");
 tolua_usertype(tolua_S,"Fl_Hold_Browser");
 tolua_usertype(tolua_S,"Fl_Tree_Prefs");
 tolua_usertype(tolua_S,"Fl_Tree_Item_Array");
 tolua_usertype(tolua_S,"Fl_Int_Input");
 tolua_usertype(tolua_S,"Fl_Tree_Item");
 tolua_usertype(tolua_S,"Fl_PNG_Image");
 tolua_usertype(tolua_S,"Fl_Tile");
 tolua_usertype(tolua_S,"Fl_Multi_Label");
 tolua_usertype(tolua_S,"Fl_File_Chooser");
 tolua_usertype(tolua_S,"Fl_Tooltip");
 tolua_usertype(tolua_S,"Lua__Fl_Button");
 tolua_usertype(tolua_S,"Lua__Fl_Int_Input");
 tolua_usertype(tolua_S,"Fl_Text_Editor");
 tolua_usertype(tolua_S,"Lua__Fl_Input");
 tolua_usertype(tolua_S,"Fl_XBM_Image");
 tolua_usertype(tolua_S,"Lua__Fl_Box");
 tolua_usertype(tolua_S,"Fl_Text_Display::Style_Table_Entry");
 tolua_usertype(tolua_S,"Fl_Input_Choice");
 tolua_usertype(tolua_S,"Lua__Fl_Table_Row");
 tolua_usertype(tolua_S,"Fl_Return_Button");
 tolua_usertype(tolua_S,"Fl_Abstract_Printer");
 tolua_usertype(tolua_S,"Lua__Fl_Group");
 tolua_usertype(tolua_S,"Fl_Choice");
 tolua_usertype(tolua_S,"Fl_Multi_Browser");
 tolua_usertype(tolua_S,"Fl_Sys_Menu_Bar");
 tolua_usertype(tolua_S,"Lua__Fl_Tabs");
 tolua_usertype(tolua_S,"Fl_Color_Chooser");
 tolua_usertype(tolua_S,"Lua__Fl_Shared_Image");
 tolua_usertype(tolua_S,"Lua__Fl_Choice");
 tolua_usertype(tolua_S,"Fl_File_Browser");
 tolua_usertype(tolua_S,"Fl_Simple_Counter");
 tolua_usertype(tolua_S,"Lua__Fl_Tile");
 tolua_usertype(tolua_S,"Fl_Check_Browser");
 tolua_usertype(tolua_S,"Lua__Fl_Multiline_Input");
 tolua_usertype(tolua_S,"Fl_File_Icon");
 tolua_usertype(tolua_S,"Fl_Printer");
 tolua_usertype(tolua_S,"Lua__Fl_Select_Browser");
 tolua_usertype(tolua_S,"Lua__Fl_Browser");
 tolua_usertype(tolua_S,"Flv_Style_List");
 tolua_usertype(tolua_S,"Fl_Text_Display");
 tolua_usertype(tolua_S,"Fl_XPM_Image");
 tolua_usertype(tolua_S,"Lua__Fl_Valuator");
 tolua_usertype(tolua_S,"Fl_Overlay_Window");
}

/* method: delete of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_delete00
static int tolua_fltk_fltk_Fl_Widget_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
 Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: activate of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_activate00
static int tolua_fltk_fltk_Fl_Widget_activate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'activate'", NULL);
#endif
 {
  self->activate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'activate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: active of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_active00
static int tolua_fltk_fltk_Fl_Widget_active00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'active'", NULL);
#endif
 {
  int tolua_ret = (int)  self->active();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'active'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: active_r of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_active_r00
static int tolua_fltk_fltk_Fl_Widget_active_r00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'active_r'", NULL);
#endif
 {
  int tolua_ret = (int)  self->active_r();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'active_r'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: align of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_align00
static int tolua_fltk_fltk_Fl_Widget_align00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'align'", NULL);
#endif
 {
 if(nparam < 2) {
   unsigned tolua_ret = (  unsigned)  self->align();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   unsigned opt = ((  unsigned)  tolua_tonumber(tolua_S,2,0));
 self->align(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'align'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: argument of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_argument00
static int tolua_fltk_fltk_Fl_Widget_argument00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'argument'", NULL);
#endif
 {
 if(nparam < 2) {
  long tolua_ret = (long)  self->argument();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  long opt = ((long)  tolua_tonumber(tolua_S,2,0));
 self->argument(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'argument'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: as_gl_window of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_as_gl_window00
static int tolua_fltk_fltk_Fl_Widget_as_gl_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'as_gl_window'", NULL);
#endif
 {
  Fl_Gl_Window* tolua_ret = (Fl_Gl_Window*)  self->as_gl_window();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Gl_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'as_gl_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: as_group of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_as_group00
static int tolua_fltk_fltk_Fl_Widget_as_group00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'as_group'", NULL);
#endif
 {
  Fl_Group* tolua_ret = (Fl_Group*)  self->as_group();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Group");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'as_group'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: as_window of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_as_window00
static int tolua_fltk_fltk_Fl_Widget_as_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'as_window'", NULL);
#endif
 {
  Fl_Window* tolua_ret = (Fl_Window*)  self->as_window();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'as_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: box of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_box00
static int tolua_fltk_fltk_Fl_Widget_box00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'box'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  self->box();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Boxtype opt = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 self->box(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'box'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_fltk_widget_callback of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_callback00
static int tolua_fltk_fltk_Fl_Widget_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,2,0));
  lua_Object data = ((lua_Object)  tolua_tovalue(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_fltk_widget_callback'", NULL);
#endif
 {
  set_fltk_widget_callback(self,L,luaFunc,data);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changed of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_changed00
static int tolua_fltk_fltk_Fl_Widget_changed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changed'", NULL);
#endif
 {
  int tolua_ret = (int)  self->changed();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_changed of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_clear_changed00
static int tolua_fltk_fltk_Fl_Widget_clear_changed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_changed'", NULL);
#endif
 {
  self->clear_changed();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_changed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_damage of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_clear_damage00
static int tolua_fltk_fltk_Fl_Widget_clear_damage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  unsigned char c = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_damage'", NULL);
#endif
 {
  self->clear_damage(c);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_damage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_output of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_clear_output00
static int tolua_fltk_fltk_Fl_Widget_clear_output00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_output'", NULL);
#endif
 {
  self->clear_output();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_output'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_visible of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_clear_visible00
static int tolua_fltk_fltk_Fl_Widget_clear_visible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_visible'", NULL);
#endif
 {
  self->clear_visible();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_visible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_visible_focus of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_clear_visible_focus00
static int tolua_fltk_fltk_Fl_Widget_clear_visible_focus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_visible_focus'", NULL);
#endif
 {
  self->clear_visible_focus();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_visible_focus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: color of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_color00
static int tolua_fltk_fltk_Fl_Widget_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'color'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: color of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_set_color_bg_sel00
static int tolua_fltk_fltk_Fl_Widget_set_color_bg_sel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  unsigned int bg = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned int sel = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'color'", NULL);
#endif
 {
  self->color(bg,sel);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_color_bg_sel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: contains of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_contains00
static int tolua_fltk_fltk_Fl_Widget_contains00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Widget* w = ((const Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'contains'", NULL);
#endif
 {
  int tolua_ret = (int)  self->contains(w);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'contains'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy_label of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_copy_label00
static int tolua_fltk_fltk_Fl_Widget_copy_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  const char* new_label = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy_label'", NULL);
#endif
 {
  self->copy_label(new_label);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy_label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: damage of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_damage00
static int tolua_fltk_fltk_Fl_Widget_damage00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'damage'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned char tolua_ret = ( unsigned char)  self->damage();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned char opt = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
 self->damage(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'damage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: damage of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_damage_rect00
static int tolua_fltk_fltk_Fl_Widget_damage_rect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  unsigned char c = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  int w = ((int)  tolua_tonumber(tolua_S,5,0));
  int h = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'damage'", NULL);
#endif
 {
  self->damage(c,x,y,w,h);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'damage_rect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: damage_resize of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_damage_resize00
static int tolua_fltk_fltk_Fl_Widget_damage_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_1 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_2 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_3 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_4 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'damage_resize'", NULL);
#endif
 {
  int tolua_ret = (int)  self->damage_resize(tolua_var_1,tolua_var_2,tolua_var_3,tolua_var_4);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'damage_resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deactivate of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_deactivate00
static int tolua_fltk_fltk_Fl_Widget_deactivate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deactivate'", NULL);
#endif
 {
  self->deactivate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deactivate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: default_callback of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_default_callback00
static int tolua_fltk_fltk_Fl_Widget_default_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* cb = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  void* d = ((void*)  tolua_touserdata(tolua_S,3,0));
 {
  Fl_Widget::default_callback(cb,d);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'default_callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deimage of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_deimage00
static int tolua_fltk_fltk_Fl_Widget_deimage00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deimage'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Image* tolua_ret = (Fl_Image*)  self->deimage();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Image* opt = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
 self->deimage(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deimage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: do_callback of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_do_callback00
static int tolua_fltk_fltk_Fl_Widget_do_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* o = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  void* arg = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'do_callback'", NULL);
#endif
 {
  self->do_callback(o,arg);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'do_callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: do_callback of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_do_callback01
static int tolua_fltk_fltk_Fl_Widget_do_callback01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'do_callback'", NULL);
#endif
 {
  self->do_callback();
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Widget_do_callback00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: do_callback of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_do_callback02
static int tolua_fltk_fltk_Fl_Widget_do_callback02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* o = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  long arg = ((long)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'do_callback'", NULL);
#endif
 {
  self->do_callback(o,arg);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Widget_do_callback01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_draw00
static int tolua_fltk_fltk_Fl_Widget_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw_label of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_draw_label00
static int tolua_fltk_fltk_Fl_Widget_draw_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_5 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_6 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_7 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_8 = ((int)  tolua_tonumber(tolua_S,5,0));
   unsigned tolua_var_9 = ((  unsigned)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw_label'", NULL);
#endif
 {
  self->draw_label(tolua_var_5,tolua_var_6,tolua_var_7,tolua_var_8,tolua_var_9);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw_label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: h of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_h00
static int tolua_fltk_fltk_Fl_Widget_h00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'h'", NULL);
#endif
 {
  int tolua_ret = (int)  self->h();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'h'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_handle00
static int tolua_fltk_fltk_Fl_Widget_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hide of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_hide00
static int tolua_fltk_fltk_Fl_Widget_hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hide'", NULL);
#endif
 {
  self->hide();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: image of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_image00
static int tolua_fltk_fltk_Fl_Widget_image00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'image'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Image* tolua_ret = (Fl_Image*)  self->image();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Image* opt = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
 self->image(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'image'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inside of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_inside00
static int tolua_fltk_fltk_Fl_Widget_inside00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Widget* w = ((const Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inside'", NULL);
#endif
 {
  int tolua_ret = (int)  self->inside(w);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inside'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_group of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_is_group00
static int tolua_fltk_fltk_Fl_Widget_is_group00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_group'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->is_group();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_group'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_window of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_is_window00
static int tolua_fltk_fltk_Fl_Widget_is_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_window'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->is_window();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_label00
static int tolua_fltk_fltk_Fl_Widget_label00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->label();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->label(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_set_labeltype_and_label00
static int tolua_fltk_fltk_Fl_Widget_set_labeltype_and_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  Fl_Labeltype a = ((Fl_Labeltype) (int)  tolua_tonumber(tolua_S,2,0));
  const char* b = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(a,b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_labeltype_and_label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label_shortcut of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_label_shortcut00
static int tolua_fltk_fltk_Fl_Widget_label_shortcut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  const char* t = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label_shortcut'", NULL);
#endif
 {
  int tolua_ret = (int)  self->label_shortcut(t);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label_shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelcolor of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_labelcolor00
static int tolua_fltk_fltk_Fl_Widget_labelcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->labelcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->labelcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelfont of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_labelfont00
static int tolua_fltk_fltk_Fl_Widget_labelfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->labelfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->labelfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelsize of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_labelsize00
static int tolua_fltk_fltk_Fl_Widget_labelsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->labelsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->labelsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labeltype of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_labeltype00
static int tolua_fltk_fltk_Fl_Widget_labeltype00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labeltype'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Labeltype tolua_ret = (Fl_Labeltype)  self->labeltype();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Labeltype opt = ((Fl_Labeltype) (int)  tolua_tonumber(tolua_S,2,0));
 self->labeltype(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labeltype'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: measure_label of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_measure_label00
static int tolua_fltk_fltk_Fl_Widget_measure_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  int ww = ((int)  tolua_tonumber(tolua_S,2,0));
  int hh = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'measure_label'", NULL);
#endif
 {
  self->measure_label(ww,hh);
 tolua_pushnumber(tolua_S,(lua_Number)ww);
 tolua_pushnumber(tolua_S,(lua_Number)hh);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'measure_label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: output of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_output00
static int tolua_fltk_fltk_Fl_Widget_output00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'output'", NULL);
#endif
 {
  int tolua_ret = (int)  self->output();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'output'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: parent of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_parent00
static int tolua_fltk_fltk_Fl_Widget_parent00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'parent'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Group* tolua_ret = (Fl_Group*)  self->parent();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Group");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Group",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Group* opt = ((Fl_Group*)  tolua_tousertype(tolua_S,2,0));
 self->parent(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: parent_root of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_parent_root00
static int tolua_fltk_fltk_Fl_Widget_parent_root00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'parent_root'", NULL);
#endif
 {
  Fl_Group* tolua_ret = (Fl_Group*)  self->parent_root();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Group");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'parent_root'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: position of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_position00
static int tolua_fltk_fltk_Fl_Widget_position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'position'", NULL);
#endif
 {
  self->position(X,Y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: redraw of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_redraw00
static int tolua_fltk_fltk_Fl_Widget_redraw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'redraw'", NULL);
#endif
 {
  self->redraw();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'redraw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: redraw_label of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_redraw_label00
static int tolua_fltk_fltk_Fl_Widget_redraw_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'redraw_label'", NULL);
#endif
 {
  self->redraw_label();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'redraw_label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_resize00
static int tolua_fltk_fltk_Fl_Widget_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(x,y,w,h);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selection_color of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_selection_color00
static int tolua_fltk_fltk_Fl_Widget_selection_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selection_color'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->selection_color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->selection_color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selection_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_changed of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_set_changed00
static int tolua_fltk_fltk_Fl_Widget_set_changed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_changed'", NULL);
#endif
 {
  self->set_changed();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_changed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_output of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_set_output00
static int tolua_fltk_fltk_Fl_Widget_set_output00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_output'", NULL);
#endif
 {
  self->set_output();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_output'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_visible of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_set_visible00
static int tolua_fltk_fltk_Fl_Widget_set_visible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_visible'", NULL);
#endif
 {
  self->set_visible();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_visible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_visible_focus of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_set_visible_focus00
static int tolua_fltk_fltk_Fl_Widget_set_visible_focus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_visible_focus'", NULL);
#endif
 {
  self->set_visible_focus();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_visible_focus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_show00
static int tolua_fltk_fltk_Fl_Widget_show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show'", NULL);
#endif
 {
  self->show();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_size00
static int tolua_fltk_fltk_Fl_Widget_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  self->size(W,H);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: take_focus of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_take_focus00
static int tolua_fltk_fltk_Fl_Widget_take_focus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'take_focus'", NULL);
#endif
 {
  int tolua_ret = (int)  self->take_focus();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'take_focus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: takesevents of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_takesevents00
static int tolua_fltk_fltk_Fl_Widget_takesevents00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'takesevents'", NULL);
#endif
 {
  int tolua_ret = (int)  self->takesevents();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'takesevents'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_textfont00
static int tolua_fltk_fltk_Fl_Widget_textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_textsize00
static int tolua_fltk_fltk_Fl_Widget_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tooltip of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_tooltip00
static int tolua_fltk_fltk_Fl_Widget_tooltip00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tooltip'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->tooltip();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->tooltip(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tooltip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: type of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_type00
static int tolua_fltk_fltk_Fl_Widget_type00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'type'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned char tolua_ret = ( unsigned char)  self->type();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned char opt = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
 self->type(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'type'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: user_data of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_user_data00
static int tolua_fltk_fltk_Fl_Widget_user_data00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'user_data'", NULL);
#endif
 {
 if(nparam < 2) {
  void* tolua_ret = (void*)  self->user_data();
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isuserdata(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  void* opt = ((void*)  tolua_touserdata(tolua_S,2,0));
 self->user_data(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'user_data'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visible of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_visible00
static int tolua_fltk_fltk_Fl_Widget_visible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visible'", NULL);
#endif
 {
  int tolua_ret = (int)  self->visible();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visible_focus of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_visible_focus00
static int tolua_fltk_fltk_Fl_Widget_visible_focus00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visible_focus'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->visible_focus();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->visible_focus(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visible_focus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visible_r of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_visible_r00
static int tolua_fltk_fltk_Fl_Widget_visible_r00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visible_r'", NULL);
#endif
 {
  int tolua_ret = (int)  self->visible_r();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visible_r'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: w of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_w00
static int tolua_fltk_fltk_Fl_Widget_w00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'w'", NULL);
#endif
 {
  int tolua_ret = (int)  self->w();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'w'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: when of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_when00
static int tolua_fltk_fltk_Fl_Widget_when00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'when'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_When tolua_ret = (Fl_When)  self->when();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_When opt = ((Fl_When) (int)  tolua_tonumber(tolua_S,2,0));
 self->when(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'when'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: window of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_window00
static int tolua_fltk_fltk_Fl_Widget_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'window'", NULL);
#endif
 {
  Fl_Window* tolua_ret = (Fl_Window*)  self->window();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: x of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_x00
static int tolua_fltk_fltk_Fl_Widget_x00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'x'", NULL);
#endif
 {
  int tolua_ret = (int)  self->x();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'x'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: y of class  Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_y00
static int tolua_fltk_fltk_Fl_Widget_y00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* self = (Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'y'", NULL);
#endif
 {
  int tolua_ret = (int)  self->y();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'y'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Widget : public Fl_Widget, public ToluaBase {
public:
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Widget:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Widget:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Widget:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Widget:: draw();
		};
	};
	 int  handle( int event) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Widget_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)event);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Widget:: handle(event);
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Widget:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Widget:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Widget:: show();
		};
	};

	 Fl_Group* Fl_Widget__as_group( void ) {
		return ( Fl_Group* )Fl_Widget::as_group();
	};
	 Fl_Window* Fl_Widget__as_window( void ) {
		return ( Fl_Window* )Fl_Widget::as_window();
	};
	 void Fl_Widget__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Widget::do_callback(o,arg);
	};
	 void Fl_Widget__draw( void ) {
		Fl_Widget::draw();
	};
	 int Fl_Widget__handle( int event) {
		return ( int )Fl_Widget::handle(event);
	};
	 void Fl_Widget__hide( void ) {
		Fl_Widget::hide();
	};
	 void Fl_Widget__resize( int x, int y, int w, int h) {
		Fl_Widget::resize(x,y,w,h);
	};
	 void Fl_Widget__show( void ) {
		Fl_Widget::show();
	};
	 Lua__Fl_Widget( int x, int y, int w, int h, const char* label = 0L): Fl_Widget(x,y,w,h,label){};
};

/* method: tolua__set_instance of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Widget_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Widget* self = (Lua__Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Widget__as_group of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__as_group00
static int tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__as_group00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Widget* self = (Lua__Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Widget__as_group'", NULL);
#endif
 {
  Fl_Group* tolua_ret = (Fl_Group*)  self->Fl_Widget__as_group();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Group");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Widget__as_group'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Widget__as_window of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__as_window00
static int tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__as_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Widget* self = (Lua__Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Widget__as_window'", NULL);
#endif
 {
  Fl_Window* tolua_ret = (Fl_Window*)  self->Fl_Widget__as_window();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Widget__as_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Widget__do_callback of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__do_callback00
static int tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__do_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Widget",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Widget* self = (Lua__Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* o = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  void* arg = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Widget__do_callback'", NULL);
#endif
 {
  self->Fl_Widget__do_callback(o,arg);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Widget__do_callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Widget__draw of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__draw00
static int tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Widget* self = (Lua__Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Widget__draw'", NULL);
#endif
 {
  self->Fl_Widget__draw();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Widget__draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Widget__handle of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__handle00
static int tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Widget* self = (Lua__Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Widget__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Widget__handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Widget__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Widget__hide of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__hide00
static int tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Widget* self = (Lua__Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Widget__hide'", NULL);
#endif
 {
  self->Fl_Widget__hide();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Widget__hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Widget__resize of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__resize00
static int tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Widget* self = (Lua__Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Widget__resize'", NULL);
#endif
 {
  self->Fl_Widget__resize(x,y,w,h);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Widget__resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Widget__show of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__show00
static int tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Widget* self = (Lua__Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Widget__show'", NULL);
#endif
 {
  self->Fl_Widget__show();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Widget__show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_new00
static int tolua_fltk_fltk_Lua__Fl_Widget_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* label = ((const char*)  tolua_tostring(tolua_S,6,0L));
 {
  Lua__Fl_Widget* tolua_ret = (Lua__Fl_Widget*)  Mtolua_new((Lua__Fl_Widget)(x,y,w,h,label));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_new00_local
static int tolua_fltk_fltk_Lua__Fl_Widget_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Widget_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Lua__Fl_Widget */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Widget_delete00
static int tolua_fltk_fltk_Lua__Fl_Widget_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Widget* self = (Lua__Fl_Widget*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
 Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Widget (lua_State* tolua_S)
{
 Lua__Fl_Widget* self = (Lua__Fl_Widget*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Box_new00
static int tolua_fltk_fltk_Fl_Box_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Box",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Box* tolua_ret = (Fl_Box*)  Mtolua_new((Fl_Box)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Box");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Box_new00_local
static int tolua_fltk_fltk_Fl_Box_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Box_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Box_new01
static int tolua_fltk_fltk_Fl_Box_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Box",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isstring(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Boxtype b = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
  int X = ((int)  tolua_tonumber(tolua_S,3,0));
  int Y = ((int)  tolua_tonumber(tolua_S,4,0));
  int W = ((int)  tolua_tonumber(tolua_S,5,0));
  int H = ((int)  tolua_tonumber(tolua_S,6,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,7,0));
 {
  Fl_Box* tolua_ret = (Fl_Box*)  Mtolua_new((Fl_Box)(b,X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Box");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Box_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Box_new01_local
static int tolua_fltk_fltk_Fl_Box_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Box_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Box_handle00
static int tolua_fltk_fltk_Fl_Box_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Box",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Box* self = (Fl_Box*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_10 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_10);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Box : public Fl_Box, public ToluaBase {
public:
	 int  handle( int tolua_var_10) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Box_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_10);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Box:: handle(tolua_var_10);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Box:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Box:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Box:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Box:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Box:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Box:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Box:: show();
		};
	};

	 int Fl_Box__handle( int tolua_var_10) {
		return ( int )Fl_Box::handle(tolua_var_10);
	};
	 Fl_Group* Fl_Box__as_group( void ) {
		return ( Fl_Group* )Fl_Box::as_group();
	};
	 Fl_Window* Fl_Box__as_window( void ) {
		return ( Fl_Window* )Fl_Box::as_window();
	};
	 void Fl_Box__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Box::do_callback(o,arg);
	};
	 void Fl_Box__draw( void ) {
		Fl_Box::draw();
	};
	 void Fl_Box__hide( void ) {
		Fl_Box::hide();
	};
	 void Fl_Box__resize( int x, int y, int w, int h) {
		Fl_Box::resize(x,y,w,h);
	};
	 void Fl_Box__show( void ) {
		Fl_Box::show();
	};
	 Lua__Fl_Box( int X, int Y, int W, int H, const char* l = 0): Fl_Box(X,Y,W,H,l){};
	 Lua__Fl_Box( Fl_Boxtype b, int X, int Y, int W, int H, const char* l): Fl_Box(b,X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Box_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Box_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Box",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Box* self = (Lua__Fl_Box*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Box__handle of class  Lua__Fl_Box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Box_Fl_Box__handle00
static int tolua_fltk_fltk_Lua__Fl_Box_Fl_Box__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Box",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Box* self = (Lua__Fl_Box*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_10 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Box__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Box__handle(tolua_var_10);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Box__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Box_new00
static int tolua_fltk_fltk_Lua__Fl_Box_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Box",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Box* tolua_ret = (Lua__Fl_Box*)  Mtolua_new((Lua__Fl_Box)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Box");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Box_new00_local
static int tolua_fltk_fltk_Lua__Fl_Box_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Box_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Box_new01
static int tolua_fltk_fltk_Lua__Fl_Box_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Box",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isstring(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Boxtype b = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
  int X = ((int)  tolua_tonumber(tolua_S,3,0));
  int Y = ((int)  tolua_tonumber(tolua_S,4,0));
  int W = ((int)  tolua_tonumber(tolua_S,5,0));
  int H = ((int)  tolua_tonumber(tolua_S,6,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,7,0));
 {
  Lua__Fl_Box* tolua_ret = (Lua__Fl_Box*)  Mtolua_new((Lua__Fl_Box)(b,X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Box");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Lua__Fl_Box_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Box_new01_local
static int tolua_fltk_fltk_Lua__Fl_Box_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Box_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Box (lua_State* tolua_S)
{
 Lua__Fl_Box* self = (Lua__Fl_Box*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_new00
static int tolua_fltk_fltk_Fl_Group_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_11 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_12 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_13 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_14 = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* tolua_var_15 = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Group* tolua_ret = (Fl_Group*)  Mtolua_new((Fl_Group)(tolua_var_11,tolua_var_12,tolua_var_13,tolua_var_14,tolua_var_15));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Group");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_new00_local
static int tolua_fltk_fltk_Fl_Group_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Group_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_add00
static int tolua_fltk_fltk_Fl_Group_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* o = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  self->add(o);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_resizable of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_add_resizable00
static int tolua_fltk_fltk_Fl_Group_add_resizable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* o = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add_resizable'", NULL);
#endif
 {
  self->add_resizable(*o);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_resizable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: as_group of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_as_group00
static int tolua_fltk_fltk_Fl_Group_as_group00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'as_group'", NULL);
#endif
 {
  Fl_Group* tolua_ret = (Fl_Group*)  self->as_group();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Group");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'as_group'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: begin of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_begin00
static int tolua_fltk_fltk_Fl_Group_begin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'begin'", NULL);
#endif
 {
  self->begin();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'begin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: child of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_child00
static int tolua_fltk_fltk_Fl_Group_child00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'child'", NULL);
#endif
 {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->child(n);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'child'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: children of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_children00
static int tolua_fltk_fltk_Fl_Group_children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'children'", NULL);
#endif
 {
  int tolua_ret = (int)  self->children();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_clear00
static int tolua_fltk_fltk_Fl_Group_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clip_children of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_clip_children00
static int tolua_fltk_fltk_Fl_Group_clip_children00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clip_children'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->clip_children();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->clip_children(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clip_children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: current of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_current00
static int tolua_fltk_fltk_Fl_Group_current00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Group",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  Fl_Group* tolua_ret = (Fl_Group*)  Fl_Group::current();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Group");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Group",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Group* opt = ((Fl_Group*)  tolua_tousertype(tolua_S,2,0));
 Fl_Group::current(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: end of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_endd00
static int tolua_fltk_fltk_Fl_Group_endd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end'", NULL);
#endif
 {
  self->end();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_find00
static int tolua_fltk_fltk_Fl_Group_find00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Widget* tolua_var_16 = ((const Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find'", NULL);
#endif
 {
  int tolua_ret = (int)  self->find(tolua_var_16);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: focus of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_focus00
static int tolua_fltk_fltk_Fl_Group_focus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* W = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'focus'", NULL);
#endif
 {
  self->focus(W);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'focus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_handle00
static int tolua_fltk_fltk_Fl_Group_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_17 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_17);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_fltk_fl_widget_user_handler of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_user_handler00
static int tolua_fltk_fltk_Fl_Group_user_handler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_fltk_fl_widget_user_handler'", NULL);
#endif
 {
  set_fltk_fl_widget_user_handler(self,L,luaFunc);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'user_handler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init_sizes of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_init_sizes00
static int tolua_fltk_fltk_Fl_Group_init_sizes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init_sizes'", NULL);
#endif
 {
  self->init_sizes();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init_sizes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_insert00
static int tolua_fltk_fltk_Fl_Group_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err)) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* tolua_var_18 = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int i = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  self->insert(*tolua_var_18,i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_insert01
static int tolua_fltk_fltk_Fl_Group_insert01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err)) ||
 !tolua_isusertype(tolua_S,3,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* o = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  Fl_Widget* before = ((Fl_Widget*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  self->insert(*o,before);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Group_insert00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_remove00
static int tolua_fltk_fltk_Fl_Group_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* o = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
 {
  self->remove(o);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resizable of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_resizable00
static int tolua_fltk_fltk_Fl_Group_resizable00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resizable'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->resizable();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Widget* opt = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 self->resizable(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resizable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_resize00
static int tolua_fltk_fltk_Fl_Group_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_19 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_20 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_21 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_22 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(tolua_var_19,tolua_var_20,tolua_var_21,tolua_var_22);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resizefont of class  Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Group_resizefont00
static int tolua_fltk_fltk_Fl_Group_resizefont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Group",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Group* self = (Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  float font_scale = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resizefont'", NULL);
#endif
 {
  self->resizefont(font_scale);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resizefont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Group : public Fl_Group, public ToluaBase {
public:
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Group:: as_group();
		};
	};
	 int  handle( int tolua_var_17) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Group_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_17);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Group:: handle(tolua_var_17);
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Group:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Group:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Group:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Group:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Group:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Group:: show();
		};
	};

	 Fl_Group* Fl_Group__as_group( void ) {
		return ( Fl_Group* )Fl_Group::as_group();
	};
	 int Fl_Group__handle( int tolua_var_17) {
		return ( int )Fl_Group::handle(tolua_var_17);
	};
	 Fl_Window* Fl_Group__as_window( void ) {
		return ( Fl_Window* )Fl_Group::as_window();
	};
	 void Fl_Group__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Group::do_callback(o,arg);
	};
	 void Fl_Group__draw( void ) {
		Fl_Group::draw();
	};
	 void Fl_Group__hide( void ) {
		Fl_Group::hide();
	};
	 void Fl_Group__resize( int x, int y, int w, int h) {
		Fl_Group::resize(x,y,w,h);
	};
	 void Fl_Group__show( void ) {
		Fl_Group::show();
	};
	 Lua__Fl_Group( int tolua_var_11, int tolua_var_12, int tolua_var_13, int tolua_var_14, const char* tolua_var_15 = 0): Fl_Group(tolua_var_11,tolua_var_12,tolua_var_13,tolua_var_14,tolua_var_15){};
};

/* method: tolua__set_instance of class  Lua__Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Group_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Group_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Group",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Group* self = (Lua__Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Group__as_group of class  Lua__Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Group_Fl_Group__as_group00
static int tolua_fltk_fltk_Lua__Fl_Group_Fl_Group__as_group00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Group",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Group* self = (Lua__Fl_Group*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Group__as_group'", NULL);
#endif
 {
  Fl_Group* tolua_ret = (Fl_Group*)  self->Fl_Group__as_group();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Group");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Group__as_group'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Group__handle of class  Lua__Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Group_Fl_Group__handle00
static int tolua_fltk_fltk_Lua__Fl_Group_Fl_Group__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Group",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Group* self = (Lua__Fl_Group*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_17 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Group__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Group__handle(tolua_var_17);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Group__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Group_new00
static int tolua_fltk_fltk_Lua__Fl_Group_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Group",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_11 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_12 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_13 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_14 = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* tolua_var_15 = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Group* tolua_ret = (Lua__Fl_Group*)  Mtolua_new((Lua__Fl_Group)(tolua_var_11,tolua_var_12,tolua_var_13,tolua_var_14,tolua_var_15));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Group");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Group */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Group_new00_local
static int tolua_fltk_fltk_Lua__Fl_Group_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Group_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Group (lua_State* tolua_S)
{
 Lua__Fl_Group* self = (Lua__Fl_Group*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: deselect of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__deselect00
static int tolua_fltk_fltk_Fl_Browser__deselect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
  int docallbacks = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deselect'", NULL);
#endif
 {
  int tolua_ret = (int)  self->deselect(docallbacks);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deselect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: display of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__display00
static int tolua_fltk_fltk_Fl_Browser__display00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
  void* item = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'display'", NULL);
#endif
 {
  self->display(item);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'display'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__handle00
static int tolua_fltk_fltk_Fl_Browser__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: has_scrollbar of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__has_scrollbar00
static int tolua_fltk_fltk_Fl_Browser__has_scrollbar00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'has_scrollbar'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned char tolua_ret = ( unsigned char)  self->has_scrollbar();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned char opt = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
 self->has_scrollbar(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'has_scrollbar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hposition of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__hposition00
static int tolua_fltk_fltk_Fl_Browser__hposition00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hposition'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->hposition();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->hposition(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hposition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: position of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__position00
static int tolua_fltk_fltk_Fl_Browser__position00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'position'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->position();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->position(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__resize00
static int tolua_fltk_fltk_Fl_Browser__resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(X,Y,W,H);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollbar_left of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__scrollbar_left00
static int tolua_fltk_fltk_Fl_Browser__scrollbar_left00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollbar_left'", NULL);
#endif
 {
  self->scrollbar_left();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollbar_left'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollbar_right of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__scrollbar_right00
static int tolua_fltk_fltk_Fl_Browser__scrollbar_right00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollbar_right'", NULL);
#endif
 {
  self->scrollbar_right();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollbar_right'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollbar_size of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__scrollbar_size00
static int tolua_fltk_fltk_Fl_Browser__scrollbar_size00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollbar_size'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->scrollbar_size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->scrollbar_size(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollbar_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollbar_width of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__scrollbar_width00
static int tolua_fltk_fltk_Fl_Browser__scrollbar_width00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollbar_width'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->scrollbar_width();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->scrollbar_width(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollbar_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__select00
static int tolua_fltk_fltk_Fl_Browser__select00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
  void* item = ((void*)  tolua_touserdata(tolua_S,2,0));
  int val = ((int)  tolua_tonumber(tolua_S,3,1));
  int docallbacks = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select'", NULL);
#endif
 {
  int tolua_ret = (int)  self->select(item,val,docallbacks);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_only of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__select_only00
static int tolua_fltk_fltk_Fl_Browser__select_only00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
  void* item = ((void*)  tolua_touserdata(tolua_S,2,0));
  int docallbacks = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_only'", NULL);
#endif
 {
  int tolua_ret = (int)  self->select_only(item,docallbacks);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_only'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sort of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__sort00
static int tolua_fltk_fltk_Fl_Browser__sort00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
  int flags = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sort'", NULL);
#endif
 {
  self->sort(flags);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sort'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__textcolor00
static int tolua_fltk_fltk_Fl_Browser__textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__textfont00
static int tolua_fltk_fltk_Fl_Browser__textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Browser_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser__textsize00
static int tolua_fltk_fltk_Fl_Browser__textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser_* self = (Fl_Browser_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_new00
static int tolua_fltk_fltk_Fl_Browser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Browser* tolua_ret = (Fl_Browser*)  Mtolua_new((Fl_Browser)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Browser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_new00_local
static int tolua_fltk_fltk_Fl_Browser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Browser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_add00
static int tolua_fltk_fltk_Fl_Browser_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  const char* newtext = ((const char*)  tolua_tostring(tolua_S,2,0));
  void* d = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  self->add(newtext,d);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bottomline of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_bottomline00
static int tolua_fltk_fltk_Fl_Browser_bottomline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bottomline'", NULL);
#endif
 {
  self->bottomline(line);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bottomline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_clear00
static int tolua_fltk_fltk_Fl_Browser_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: column_char of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_column_char00
static int tolua_fltk_fltk_Fl_Browser_column_char00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'column_char'", NULL);
#endif
 {
 if(nparam < 2) {
  char tolua_ret = (char)  self->column_char();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char opt = ((char)  tolua_tonumber(tolua_S,2,0));
 self->column_char(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'column_char'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_Fl_Browser_get_column_widths of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_get_column_widths00
static int tolua_fltk_fltk_Fl_Browser_get_column_widths00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fltk_Fl_Browser_get_column_widths'", NULL);
#endif
 {
  tolua_outside lua_Object tolua_ret = (tolua_outside lua_Object)  fltk_Fl_Browser_get_column_widths(self,L);
 tolua_pushvalue(tolua_S,(int)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_column_widths'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_Fl_Browser_set_column_widths of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_set_column_widths00
static int tolua_fltk_fltk_Fl_Browser_set_column_widths00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object tbl = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fltk_Fl_Browser_set_column_widths'", NULL);
#endif
 {
  fltk_Fl_Browser_set_column_widths(self,L,tbl);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_column_widths'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: data of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_data00
static int tolua_fltk_fltk_Fl_Browser_data00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'data'", NULL);
#endif
 {
  void* tolua_ret = (void*)  self->data(line);
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'data'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: data of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_data01
static int tolua_fltk_fltk_Fl_Browser_data01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
  void* d = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'data'", NULL);
#endif
 {
  self->data(line,d);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Browser_data00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: display of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_display00
static int tolua_fltk_fltk_Fl_Browser_display00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
  int val = ((int)  tolua_tonumber(tolua_S,3,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'display'", NULL);
#endif
 {
  self->display(line,val);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'display'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: displayed of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_displayed00
static int tolua_fltk_fltk_Fl_Browser_displayed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'displayed'", NULL);
#endif
 {
  int tolua_ret = (int)  self->displayed(line);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'displayed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: format_char of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_format_char00
static int tolua_fltk_fltk_Fl_Browser_format_char00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'format_char'", NULL);
#endif
 {
 if(nparam < 2) {
  char tolua_ret = (char)  self->format_char();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char opt = ((char)  tolua_tonumber(tolua_S,2,0));
 self->format_char(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'format_char'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hide of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_line_hide00
static int tolua_fltk_fltk_Fl_Browser_line_hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hide'", NULL);
#endif
 {
  self->hide(line);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'line_hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: icon of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_icon00
static int tolua_fltk_fltk_Fl_Browser_icon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Image* icon = ((Fl_Image*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'icon'", NULL);
#endif
 {
  self->icon(line,icon);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'icon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: icon of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_icon01
static int tolua_fltk_fltk_Fl_Browser_icon01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'icon'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->icon(line);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Browser_icon00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_insert00
static int tolua_fltk_fltk_Fl_Browser_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* newtext = ((const char*)  tolua_tostring(tolua_S,3,0));
  void* d = ((void*)  tolua_touserdata(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  self->insert(line,newtext,d);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: lineposition of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_lineposition00
static int tolua_fltk_fltk_Fl_Browser_lineposition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Browser::Fl_Line_Position pos = ((Fl_Browser::Fl_Line_Position) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'lineposition'", NULL);
#endif
 {
  self->lineposition(line,pos);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'lineposition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_load00
static int tolua_fltk_fltk_Fl_Browser_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
 {
  int tolua_ret = (int)  self->load(filename);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: make_visible of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_make_visible00
static int tolua_fltk_fltk_Fl_Browser_make_visible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'make_visible'", NULL);
#endif
 {
  self->make_visible(line);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'make_visible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: middleline of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_middleline00
static int tolua_fltk_fltk_Fl_Browser_middleline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'middleline'", NULL);
#endif
 {
  self->middleline(line);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'middleline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_move00
static int tolua_fltk_fltk_Fl_Browser_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int to = ((int)  tolua_tonumber(tolua_S,2,0));
  int from = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'", NULL);
#endif
 {
  self->move(to,from);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_remove00
static int tolua_fltk_fltk_Fl_Browser_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
 {
  self->remove(line);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_icon of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_remove_icon00
static int tolua_fltk_fltk_Fl_Browser_remove_icon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove_icon'", NULL);
#endif
 {
  self->remove_icon(line);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_icon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replace of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_replace00
static int tolua_fltk_fltk_Fl_Browser_replace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int a = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* b = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replace'", NULL);
#endif
 {
  self->replace(a,b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_select00
static int tolua_fltk_fltk_Fl_Browser_select00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
  int val = ((int)  tolua_tonumber(tolua_S,3,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select'", NULL);
#endif
 {
  int tolua_ret = (int)  self->select(line,val);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selected of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_selected00
static int tolua_fltk_fltk_Fl_Browser_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selected'", NULL);
#endif
 {
  int tolua_ret = (int)  self->selected(line);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_line_show00
static int tolua_fltk_fltk_Fl_Browser_line_show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show'", NULL);
#endif
 {
  self->show(line);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'line_show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_size00
static int tolua_fltk_fltk_Fl_Browser_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  int tolua_ret = (int)  self->size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_size01
static int tolua_fltk_fltk_Fl_Browser_size01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  self->size(W,H);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Browser_size00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: swap of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_swap00
static int tolua_fltk_fltk_Fl_Browser_swap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int a = ((int)  tolua_tonumber(tolua_S,2,0));
  int b = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'swap'", NULL);
#endif
 {
  self->swap(a,b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'swap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: text of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_text00
static int tolua_fltk_fltk_Fl_Browser_text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'text'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->text(line);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: text of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_text01
static int tolua_fltk_fltk_Fl_Browser_text01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* newtext = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'text'", NULL);
#endif
 {
  self->text(line,newtext);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Browser_text00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: topline of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_topline00
static int tolua_fltk_fltk_Fl_Browser_topline00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'topline'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->topline();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->topline(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'topline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_value00
static int tolua_fltk_fltk_Fl_Browser_value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visible of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_line_visible00
static int tolua_fltk_fltk_Fl_Browser_line_visible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int line = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visible'", NULL);
#endif
 {
  int tolua_ret = (int)  self->visible(line);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'line_visible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Browser_handle00
static int tolua_fltk_fltk_Fl_Browser_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Browser* self = (Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Browser : public Fl_Browser, public ToluaBase {
public:
	 int  handle( int event) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Browser_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)event);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Browser:: handle(event);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Browser:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Browser:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Browser:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Browser:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Browser:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Browser:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Browser:: show();
		};
	};

	 int Fl_Browser__handle( int event) {
		return ( int )Fl_Browser::handle(event);
	};
	 Fl_Group* Fl_Browser__as_group( void ) {
		return ( Fl_Group* )Fl_Browser::as_group();
	};
	 Fl_Window* Fl_Browser__as_window( void ) {
		return ( Fl_Window* )Fl_Browser::as_window();
	};
	 void Fl_Browser__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Browser::do_callback(o,arg);
	};
	 void Fl_Browser__draw( void ) {
		Fl_Browser::draw();
	};
	 void Fl_Browser__hide( void ) {
		Fl_Browser::hide();
	};
	 void Fl_Browser__resize( int x, int y, int w, int h) {
		Fl_Browser::resize(x,y,w,h);
	};
	 void Fl_Browser__show( void ) {
		Fl_Browser::show();
	};
	 Lua__Fl_Browser( int X, int Y, int W, int H, const char* L = 0): Fl_Browser(X,Y,W,H,L){};
};

/* method: tolua__set_instance of class  Lua__Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Browser_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Browser_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Browser* self = (Lua__Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Browser__handle of class  Lua__Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Browser_Fl_Browser__handle00
static int tolua_fltk_fltk_Lua__Fl_Browser_Fl_Browser__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Browser* self = (Lua__Fl_Browser*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Browser__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Browser__handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Browser__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Browser_new00
static int tolua_fltk_fltk_Lua__Fl_Browser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Browser* tolua_ret = (Lua__Fl_Browser*)  Mtolua_new((Lua__Fl_Browser)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Browser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Browser_new00_local
static int tolua_fltk_fltk_Lua__Fl_Browser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Browser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Browser (lua_State* tolua_S)
{
 Lua__Fl_Browser* self = (Lua__Fl_Browser*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_new00
static int tolua_fltk_fltk_Fl_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Button* tolua_ret = (Fl_Button*)  Mtolua_new((Fl_Button)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_new00_local
static int tolua_fltk_fltk_Fl_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_clear00
static int tolua_fltk_fltk_Fl_Button_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Button",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Button* self = (Fl_Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  int tolua_ret = (int)  self->clear();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: down_box of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_down_box00
static int tolua_fltk_fltk_Fl_Button_down_box00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Button",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Button* self = (Fl_Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'down_box'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  self->down_box();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Boxtype opt = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 self->down_box(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'down_box'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: down_color of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_down_color00
static int tolua_fltk_fltk_Fl_Button_down_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Button",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Button* self = (Fl_Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'down_color'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->down_color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->down_color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'down_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_handle00
static int tolua_fltk_fltk_Fl_Button_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Button* self = (Fl_Button*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_23 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_23);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_set00
static int tolua_fltk_fltk_Fl_Button_set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Button",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Button* self = (Fl_Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'", NULL);
#endif
 {
  int tolua_ret = (int)  self->set();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setonly of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_setonly00
static int tolua_fltk_fltk_Fl_Button_setonly00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Button",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Button* self = (Fl_Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setonly'", NULL);
#endif
 {
  self->setonly();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setonly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shortcut of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_shortcut00
static int tolua_fltk_fltk_Fl_Button_shortcut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Button",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Button* self = (Fl_Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shortcut'", NULL);
#endif
 {
  int tolua_ret = (int)  self->shortcut();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shortcut of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_shortcut01
static int tolua_fltk_fltk_Fl_Button_shortcut01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Button* self = (Fl_Button*)  tolua_tousertype(tolua_S,1,0);
  int s = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shortcut'", NULL);
#endif
 {
  self->shortcut(s);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Button_shortcut00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: shortcut of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_shortcut02
static int tolua_fltk_fltk_Fl_Button_shortcut02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Button",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Button* self = (Fl_Button*)  tolua_tousertype(tolua_S,1,0);
  const char* s = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shortcut'", NULL);
#endif
 {
  self->shortcut(s);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Button_shortcut01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Button_value00
static int tolua_fltk_fltk_Fl_Button_value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Button",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Button* self = (Fl_Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Button : public Fl_Button, public ToluaBase {
public:
	 void  draw( void ) {
		if (push_method("draw",  NULL)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Button:: draw();
		};
	};
	 int  handle( int tolua_var_23) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Button_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_23);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Button:: handle(tolua_var_23);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Button:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Button:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Button:: do_callback(o,arg);
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Button:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Button:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Button:: show();
		};
	};

	 void Fl_Button__draw( void ) {
		Fl_Button::draw();
	};
	 int Fl_Button__handle( int tolua_var_23) {
		return ( int )Fl_Button::handle(tolua_var_23);
	};
	 Fl_Group* Fl_Button__as_group( void ) {
		return ( Fl_Group* )Fl_Button::as_group();
	};
	 Fl_Window* Fl_Button__as_window( void ) {
		return ( Fl_Window* )Fl_Button::as_window();
	};
	 void Fl_Button__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Button::do_callback(o,arg);
	};
	 void Fl_Button__hide( void ) {
		Fl_Button::hide();
	};
	 void Fl_Button__resize( int x, int y, int w, int h) {
		Fl_Button::resize(x,y,w,h);
	};
	 void Fl_Button__show( void ) {
		Fl_Button::show();
	};
	 Lua__Fl_Button( int X, int Y, int W, int H, const char* L = 0): Fl_Button(X,Y,W,H,L){};
};

/* method: tolua__set_instance of class  Lua__Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Button_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Button_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Button",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Button* self = (Lua__Fl_Button*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Button__draw of class  Lua__Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Button_Fl_Button__draw00
static int tolua_fltk_fltk_Lua__Fl_Button_Fl_Button__draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Button",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Button* self = (Lua__Fl_Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Button__draw'", NULL);
#endif
 {
  self->Fl_Button__draw();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Button__draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Button__handle of class  Lua__Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Button_Fl_Button__handle00
static int tolua_fltk_fltk_Lua__Fl_Button_Fl_Button__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Button* self = (Lua__Fl_Button*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_23 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Button__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Button__handle(tolua_var_23);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Button__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Button_new00
static int tolua_fltk_fltk_Lua__Fl_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Button* tolua_ret = (Lua__Fl_Button*)  Mtolua_new((Lua__Fl_Button)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Button_new00_local
static int tolua_fltk_fltk_Lua__Fl_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Button (lua_State* tolua_S)
{
 Lua__Fl_Button* self = (Lua__Fl_Button*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_new00
static int tolua_fltk_fltk_Fl_Chart_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Chart",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Chart* tolua_ret = (Fl_Chart*)  Mtolua_new((Fl_Chart)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Chart");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_new00_local
static int tolua_fltk_fltk_Fl_Chart_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Chart_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_add00
static int tolua_fltk_fltk_Fl_Chart_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
  double val = ((double)  tolua_tonumber(tolua_S,2,0));
  const char* str = ((const char*)  tolua_tostring(tolua_S,3,0));
  unsigned col = ((unsigned)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  self->add(val,str,col);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: autosize of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_autosize00
static int tolua_fltk_fltk_Fl_Chart_autosize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'autosize'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned char tolua_ret = ( unsigned char)  self->autosize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned char opt = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
 self->autosize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'autosize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bounds of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_get_bounds00
static int tolua_fltk_fltk_Fl_Chart_get_bounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
  double a = ((double)  tolua_tonumber(tolua_S,2,0));
  double b = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bounds'", NULL);
#endif
 {
  self->bounds(&a,&b);
 tolua_pushnumber(tolua_S,(lua_Number)a);
 tolua_pushnumber(tolua_S,(lua_Number)b);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_bounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bounds of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_set_bounds00
static int tolua_fltk_fltk_Fl_Chart_set_bounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
  double a = ((double)  tolua_tonumber(tolua_S,2,0));
  double b = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bounds'", NULL);
#endif
 {
  self->bounds(a,b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_bounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_clear00
static int tolua_fltk_fltk_Fl_Chart_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_insert00
static int tolua_fltk_fltk_Fl_Chart_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
  int ind = ((int)  tolua_tonumber(tolua_S,2,0));
  double val = ((double)  tolua_tonumber(tolua_S,3,0));
  const char* str = ((const char*)  tolua_tostring(tolua_S,4,0));
  unsigned col = ((unsigned)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  self->insert(ind,val,str,col);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: maxsize of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_maxsize00
static int tolua_fltk_fltk_Fl_Chart_maxsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'maxsize'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->maxsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->maxsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'maxsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replace of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_replace00
static int tolua_fltk_fltk_Fl_Chart_replace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
  int ind = ((int)  tolua_tonumber(tolua_S,2,0));
  double val = ((double)  tolua_tonumber(tolua_S,3,0));
  const char* str = ((const char*)  tolua_tostring(tolua_S,4,0));
  unsigned col = ((unsigned)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replace'", NULL);
#endif
 {
  self->replace(ind,val,str,col);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_size00
static int tolua_fltk_fltk_Fl_Chart_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  int tolua_ret = (int)  self->size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_size01
static int tolua_fltk_fltk_Fl_Chart_size01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  self->size(W,H);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Chart_size00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_textcolor00
static int tolua_fltk_fltk_Fl_Chart_textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_textfont00
static int tolua_fltk_fltk_Fl_Chart_textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Chart */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Chart_textsize00
static int tolua_fltk_fltk_Fl_Chart_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Chart",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Chart* self = (Fl_Chart*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_new00
static int tolua_fltk_fltk_Fl_Check_Browser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Check_Browser* tolua_ret = (Fl_Check_Browser*)  Mtolua_new((Fl_Check_Browser)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Check_Browser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_new00_local
static int tolua_fltk_fltk_Fl_Check_Browser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Check_Browser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_add00
static int tolua_fltk_fltk_Fl_Check_Browser_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
  char* s = ((char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  int tolua_ret = (int)  self->add(s);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_add01
static int tolua_fltk_fltk_Fl_Check_Browser_add01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
  char* s = ((char*)  tolua_tostring(tolua_S,2,0));
  int b = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  int tolua_ret = (int)  self->add(s,b);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Check_Browser_add00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: check_all of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_check_all00
static int tolua_fltk_fltk_Fl_Check_Browser_check_all00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'check_all'", NULL);
#endif
 {
  self->check_all();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'check_all'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: check_none of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_check_none00
static int tolua_fltk_fltk_Fl_Check_Browser_check_none00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'check_none'", NULL);
#endif
 {
  self->check_none();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'check_none'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checked of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_checked00
static int tolua_fltk_fltk_Fl_Check_Browser_checked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
  int item = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checked'", NULL);
#endif
 {
  int tolua_ret = (int)  self->checked(item);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checked of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_checked01
static int tolua_fltk_fltk_Fl_Check_Browser_checked01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
  int item = ((int)  tolua_tonumber(tolua_S,2,0));
  int b = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checked'", NULL);
#endif
 {
  self->checked(item,b);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Check_Browser_checked00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_clear00
static int tolua_fltk_fltk_Fl_Check_Browser_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nchecked of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_nchecked00
static int tolua_fltk_fltk_Fl_Check_Browser_nchecked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'nchecked'", NULL);
#endif
 {
  int tolua_ret = (int)  self->nchecked();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nchecked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nitems of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_nitems00
static int tolua_fltk_fltk_Fl_Check_Browser_nitems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'nitems'", NULL);
#endif
 {
  int tolua_ret = (int)  self->nitems();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nitems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_remove00
static int tolua_fltk_fltk_Fl_Check_Browser_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
  int item = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
 {
  int tolua_ret = (int)  self->remove(item);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_checked of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_set_checked00
static int tolua_fltk_fltk_Fl_Check_Browser_set_checked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
  int item = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_checked'", NULL);
#endif
 {
  self->set_checked(item);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_checked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: text of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_text00
static int tolua_fltk_fltk_Fl_Check_Browser_text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
  int item = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'text'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->text(item);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Check_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Browser_value00
static int tolua_fltk_fltk_Fl_Check_Browser_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Check_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Check_Browser* self = (Fl_Check_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Clock_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_Output_new00
static int tolua_fltk_fltk_Fl_Clock_Output_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Clock_Output",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Clock_Output* tolua_ret = (Fl_Clock_Output*)  Mtolua_new((Fl_Clock_Output)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Clock_Output");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Clock_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_Output_new00_local
static int tolua_fltk_fltk_Fl_Clock_Output_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Clock_Output_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: hour of class  Fl_Clock_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_Output_hour00
static int tolua_fltk_fltk_Fl_Clock_Output_hour00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Clock_Output",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Clock_Output* self = (Fl_Clock_Output*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hour'", NULL);
#endif
 {
  int tolua_ret = (int)  self->hour();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hour'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: minute of class  Fl_Clock_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_Output_minute00
static int tolua_fltk_fltk_Fl_Clock_Output_minute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Clock_Output",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Clock_Output* self = (Fl_Clock_Output*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'minute'", NULL);
#endif
 {
  int tolua_ret = (int)  self->minute();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'minute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: second of class  Fl_Clock_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_Output_second00
static int tolua_fltk_fltk_Fl_Clock_Output_second00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Clock_Output",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Clock_Output* self = (Fl_Clock_Output*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'second'", NULL);
#endif
 {
  int tolua_ret = (int)  self->second();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'second'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Clock_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_Output_value00
static int tolua_fltk_fltk_Fl_Clock_Output_value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Clock_Output",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Clock_Output* self = (Fl_Clock_Output*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned long tolua_ret = ( unsigned long)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned long opt = (( unsigned long)  tolua_tonumber(tolua_S,2,0));
 self->value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Clock_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_Output_set_value_hms00
static int tolua_fltk_fltk_Fl_Clock_Output_set_value_hms00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Clock_Output",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Clock_Output* self = (Fl_Clock_Output*)  tolua_tousertype(tolua_S,1,0);
  int H = ((int)  tolua_tonumber(tolua_S,2,0));
  int m = ((int)  tolua_tonumber(tolua_S,3,0));
  int s = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  self->value(H,m,s);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_value_hms'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Clock */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_new00
static int tolua_fltk_fltk_Fl_Clock_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Clock",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Clock* tolua_ret = (Fl_Clock*)  Mtolua_new((Fl_Clock)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Clock");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Clock */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_new00_local
static int tolua_fltk_fltk_Fl_Clock_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Clock_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Clock */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_new01
static int tolua_fltk_fltk_Fl_Clock_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Clock",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isstring(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  unsigned char t = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
  int X = ((int)  tolua_tonumber(tolua_S,3,0));
  int Y = ((int)  tolua_tonumber(tolua_S,4,0));
  int W = ((int)  tolua_tonumber(tolua_S,5,0));
  int H = ((int)  tolua_tonumber(tolua_S,6,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,7,0));
 {
  Fl_Clock* tolua_ret = (Fl_Clock*)  Mtolua_new((Fl_Clock)(t,X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Clock");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Clock_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Clock */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_new01_local
static int tolua_fltk_fltk_Fl_Clock_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Clock_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Clock */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Clock_handle00
static int tolua_fltk_fltk_Fl_Clock_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Clock",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Clock* self = (Fl_Clock*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_24 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_24);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_new00
static int tolua_fltk_fltk_Fl_Color_Chooser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Color_Chooser* tolua_ret = (Fl_Color_Chooser*)  Mtolua_new((Fl_Color_Chooser)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Color_Chooser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_new00_local
static int tolua_fltk_fltk_Fl_Color_Chooser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Color_Chooser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: b of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_b00
static int tolua_fltk_fltk_Fl_Color_Chooser_b00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Color_Chooser* self = (Fl_Color_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'b'", NULL);
#endif
 {
  double tolua_ret = (double)  self->b();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: g of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_g00
static int tolua_fltk_fltk_Fl_Color_Chooser_g00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Color_Chooser* self = (Fl_Color_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'g'", NULL);
#endif
 {
  double tolua_ret = (double)  self->g();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'g'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hsv of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_hsv00
static int tolua_fltk_fltk_Fl_Color_Chooser_hsv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Color_Chooser* self = (Fl_Color_Chooser*)  tolua_tousertype(tolua_S,1,0);
  double H = ((double)  tolua_tonumber(tolua_S,2,0));
  double S = ((double)  tolua_tonumber(tolua_S,3,0));
  double V = ((double)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hsv'", NULL);
#endif
 {
  int tolua_ret = (int)  self->hsv(H,S,V);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hsv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hsv2rgb of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_hsv2rgb00
static int tolua_fltk_fltk_Fl_Color_Chooser_hsv2rgb00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double H = ((double)  tolua_tonumber(tolua_S,2,0));
  double S = ((double)  tolua_tonumber(tolua_S,3,0));
  double V = ((double)  tolua_tonumber(tolua_S,4,0));
  double R = ((double)  tolua_tonumber(tolua_S,5,0));
  double G = ((double)  tolua_tonumber(tolua_S,6,0));
  double B = ((double)  tolua_tonumber(tolua_S,7,0));
 {
  Fl_Color_Chooser::hsv2rgb(H,S,V,R,G,B);
 tolua_pushnumber(tolua_S,(lua_Number)R);
 tolua_pushnumber(tolua_S,(lua_Number)G);
 tolua_pushnumber(tolua_S,(lua_Number)B);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hsv2rgb'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hue of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_hue00
static int tolua_fltk_fltk_Fl_Color_Chooser_hue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Color_Chooser* self = (Fl_Color_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hue'", NULL);
#endif
 {
  double tolua_ret = (double)  self->hue();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: mode of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_mode00
static int tolua_fltk_fltk_Fl_Color_Chooser_mode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Color_Chooser* self = (Fl_Color_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'mode'", NULL);
#endif
 {
  int tolua_ret = (int)  self->mode();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'mode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: r of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_r00
static int tolua_fltk_fltk_Fl_Color_Chooser_r00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Color_Chooser* self = (Fl_Color_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'r'", NULL);
#endif
 {
  double tolua_ret = (double)  self->r();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'r'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rgb of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_rgb00
static int tolua_fltk_fltk_Fl_Color_Chooser_rgb00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Color_Chooser* self = (Fl_Color_Chooser*)  tolua_tousertype(tolua_S,1,0);
  double R = ((double)  tolua_tonumber(tolua_S,2,0));
  double G = ((double)  tolua_tonumber(tolua_S,3,0));
  double B = ((double)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rgb'", NULL);
#endif
 {
  int tolua_ret = (int)  self->rgb(R,G,B);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rgb'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rgb2hsv of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_rgb2hsv00
static int tolua_fltk_fltk_Fl_Color_Chooser_rgb2hsv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double R = ((double)  tolua_tonumber(tolua_S,2,0));
  double G = ((double)  tolua_tonumber(tolua_S,3,0));
  double B = ((double)  tolua_tonumber(tolua_S,4,0));
  double H = ((double)  tolua_tonumber(tolua_S,5,0));
  double S = ((double)  tolua_tonumber(tolua_S,6,0));
  double V = ((double)  tolua_tonumber(tolua_S,7,0));
 {
  Fl_Color_Chooser::rgb2hsv(R,G,B,H,S,V);
 tolua_pushnumber(tolua_S,(lua_Number)H);
 tolua_pushnumber(tolua_S,(lua_Number)S);
 tolua_pushnumber(tolua_S,(lua_Number)V);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rgb2hsv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: saturation of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_saturation00
static int tolua_fltk_fltk_Fl_Color_Chooser_saturation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Color_Chooser* self = (Fl_Color_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'saturation'", NULL);
#endif
 {
  double tolua_ret = (double)  self->saturation();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'saturation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Color_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Color_Chooser_value00
static int tolua_fltk_fltk_Fl_Color_Chooser_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Color_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Color_Chooser* self = (Fl_Color_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  double tolua_ret = (double)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_color_chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_color_chooser00
static int tolua_fltk_fltk_fl_color_chooser00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* name = ((const char*)  tolua_tostring(tolua_S,1,0));
  double r = ((double)  tolua_tonumber(tolua_S,2,0));
  double g = ((double)  tolua_tonumber(tolua_S,3,0));
  double b = ((double)  tolua_tonumber(tolua_S,4,0));
 {
  int tolua_ret = (int)  fl_color_chooser(name,r,g,b);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)r);
 tolua_pushnumber(tolua_S,(lua_Number)g);
 tolua_pushnumber(tolua_S,(lua_Number)b);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_color_chooser'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: current of class  Fl_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Device_current00
static int tolua_fltk_fltk_Fl_Device_current00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Device* tolua_ret = (Fl_Device*)  Fl_Device::current();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Device");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: display_device of class  Fl_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Device_display_device00
static int tolua_fltk_fltk_Fl_Device_display_device00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Display* tolua_ret = (Fl_Display*)  Fl_Device::display_device();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Display");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'display_device'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_current of class  Fl_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Device_set_current00
static int tolua_fltk_fltk_Fl_Device_set_current00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Device* self = (Fl_Device*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_current'", NULL);
#endif
 {
  Fl_Device* tolua_ret = (Fl_Device*)  self->set_current();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Device");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: type of class  Fl_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Device_type00
static int tolua_fltk_fltk_Fl_Device_type00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Device* self = (Fl_Device*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'type'", NULL);
#endif
 {
  int tolua_ret = (int)  self->type();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'type'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Device : public Fl_Device, public ToluaBase {
public:
	 Fl_Device*  set_current( void ) {
		if (push_method("set_current",  tolua_fltk_fltk_Fl_Device_set_current00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Device*  tolua_ret = ( Fl_Device* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Device* ) Fl_Device:: set_current();
		};
	};

	 Fl_Device* Fl_Device__set_current( void ) {
		return ( Fl_Device* )Fl_Device::set_current();
	};
};

/* method: tolua__set_instance of class  Lua__Fl_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Device_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Device_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Device* self = (Lua__Fl_Device*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Device__set_current of class  Lua__Fl_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Device_Fl_Device__set_current00
static int tolua_fltk_fltk_Lua__Fl_Device_Fl_Device__set_current00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Device* self = (Lua__Fl_Device*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Device__set_current'", NULL);
#endif
 {
  Fl_Device* tolua_ret = (Fl_Device*)  self->Fl_Device__set_current();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Device");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Device__set_current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: end_job of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_end_job00
static int tolua_fltk_fltk_Fl_Abstract_Printer_end_job00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end_job'", NULL);
#endif
 {
  self->end_job();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'end_job'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: end_page of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_end_page00
static int tolua_fltk_fltk_Fl_Abstract_Printer_end_page00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end_page'", NULL);
#endif
 {
  int tolua_ret = (int)  self->end_page();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'end_page'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: margins of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_margins00
static int tolua_fltk_fltk_Fl_Abstract_Printer_margins00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  int left = ((int)  tolua_tonumber(tolua_S,2,0));
  int top = ((int)  tolua_tonumber(tolua_S,3,0));
  int right = ((int)  tolua_tonumber(tolua_S,4,0));
  int bottom = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'margins'", NULL);
#endif
 {
  self->margins(&left,&top,&right,&bottom);
 tolua_pushnumber(tolua_S,(lua_Number)left);
 tolua_pushnumber(tolua_S,(lua_Number)top);
 tolua_pushnumber(tolua_S,(lua_Number)right);
 tolua_pushnumber(tolua_S,(lua_Number)bottom);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'margins'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: origin of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_origin00
static int tolua_fltk_fltk_Fl_Abstract_Printer_origin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'origin'", NULL);
#endif
 {
  self->origin(x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'origin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: print_widget of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_print_widget00
static int tolua_fltk_fltk_Fl_Abstract_Printer_print_widget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* widget = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int delta_x = ((int)  tolua_tonumber(tolua_S,3,0));
  int delta_y = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'print_widget'", NULL);
#endif
 {
  self->print_widget(widget,delta_x,delta_y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'print_widget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: print_window_part of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_print_window_part00
static int tolua_fltk_fltk_Fl_Abstract_Printer_print_window_part00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  Fl_Window* win = ((Fl_Window*)  tolua_tousertype(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  int w = ((int)  tolua_tonumber(tolua_S,5,0));
  int h = ((int)  tolua_tonumber(tolua_S,6,0));
  int delta_x = ((int)  tolua_tonumber(tolua_S,7,0));
  int delta_y = ((int)  tolua_tonumber(tolua_S,8,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'print_window_part'", NULL);
#endif
 {
  self->print_window_part(win,x,y,w,h,delta_x,delta_y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'print_window_part'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: printable_rect of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_printable_rect00
static int tolua_fltk_fltk_Fl_Abstract_Printer_printable_rect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'printable_rect'", NULL);
#endif
 {
  int tolua_ret = (int)  self->printable_rect(&w,&h);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)w);
 tolua_pushnumber(tolua_S,(lua_Number)h);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'printable_rect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rotate of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_rotate00
static int tolua_fltk_fltk_Fl_Abstract_Printer_rotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  float angle = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rotate'", NULL);
#endif
 {
  self->rotate(angle);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scale of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_scale00
static int tolua_fltk_fltk_Fl_Abstract_Printer_scale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  float scale_x = ((float)  tolua_tonumber(tolua_S,2,0));
  float scale_y = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scale'", NULL);
#endif
 {
  self->scale(scale_x,scale_y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_current of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_set_current00
static int tolua_fltk_fltk_Fl_Abstract_Printer_set_current00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_current'", NULL);
#endif
 {
  Fl_Device* tolua_ret = (Fl_Device*)  self->set_current();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Device");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: start_job of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_start_job00
static int tolua_fltk_fltk_Fl_Abstract_Printer_start_job00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  int pagecount = ((int)  tolua_tonumber(tolua_S,2,0));
  int frompage = ((int)  tolua_tonumber(tolua_S,3,NULL));
  int topage = ((int)  tolua_tonumber(tolua_S,4,NULL));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'start_job'", NULL);
#endif
 {
  int tolua_ret = (int)  self->start_job(pagecount,&frompage,&topage);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)frompage);
 tolua_pushnumber(tolua_S,(lua_Number)topage);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'start_job'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: start_page of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_start_page00
static int tolua_fltk_fltk_Fl_Abstract_Printer_start_page00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'start_page'", NULL);
#endif
 {
  int tolua_ret = (int)  self->start_page();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'start_page'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: translate of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_translate00
static int tolua_fltk_fltk_Fl_Abstract_Printer_translate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'translate'", NULL);
#endif
 {
  self->translate(x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'translate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: untranslate of class  Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Abstract_Printer_untranslate00
static int tolua_fltk_fltk_Fl_Abstract_Printer_untranslate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abstract_Printer* self = (Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'untranslate'", NULL);
#endif
 {
  self->untranslate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'untranslate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Abstract_Printer : public Fl_Abstract_Printer, public ToluaBase {
public:
	 void  end_job( void ) {
		if (push_method("end_job",  tolua_fltk_fltk_Fl_Abstract_Printer_end_job00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Abstract_Printer:: end_job();
		};
	};
	 int  end_page( void ) {
		if (push_method("end_page",  tolua_fltk_fltk_Fl_Abstract_Printer_end_page00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Abstract_Printer:: end_page();
		};
	};
	 void  margins( int* left = 0, int* top = 0, int* right = 0, int* bottom = 0) {
		if (push_method("margins",  tolua_fltk_fltk_Fl_Abstract_Printer_margins00)) {
			tolua_pushuserdata(lua_state, (void*)left);
			tolua_pushuserdata(lua_state, (void*)top);
			tolua_pushuserdata(lua_state, (void*)right);
			tolua_pushuserdata(lua_state, (void*)bottom);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Abstract_Printer:: margins(left,top,right,bottom);
		};
	};
	 void  origin( int x, int y) {
		if (push_method("origin",  tolua_fltk_fltk_Fl_Abstract_Printer_origin00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Abstract_Printer:: origin(x,y);
		};
	};
	 int  printable_rect( int* w = 0, int* h = 0) {
		if (push_method("printable_rect",  tolua_fltk_fltk_Fl_Abstract_Printer_printable_rect00)) {
			tolua_pushuserdata(lua_state, (void*)w);
			tolua_pushuserdata(lua_state, (void*)h);
			ToluaBase::dbcall(lua_state, 3, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Abstract_Printer:: printable_rect(w,h);
		};
	};
	 void  rotate( float angle) {
		if (push_method("rotate",  tolua_fltk_fltk_Fl_Abstract_Printer_rotate00)) {
			tolua_pushnumber(lua_state, (lua_Number)angle);
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Abstract_Printer:: rotate(angle);
		};
	};
	 void  scale( float scale_x, float scale_y) {
		if (push_method("scale",  tolua_fltk_fltk_Fl_Abstract_Printer_scale00)) {
			tolua_pushnumber(lua_state, (lua_Number)scale_x);
			tolua_pushnumber(lua_state, (lua_Number)scale_y);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Abstract_Printer:: scale(scale_x,scale_y);
		};
	};
	 int  start_job( int pagecount, int* frompage = NULL, int* topage = NULL) {
		if (push_method("start_job",  tolua_fltk_fltk_Fl_Abstract_Printer_start_job00)) {
			tolua_pushnumber(lua_state, (lua_Number)pagecount);
			tolua_pushuserdata(lua_state, (void*)frompage);
			tolua_pushuserdata(lua_state, (void*)topage);
			ToluaBase::dbcall(lua_state, 4, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Abstract_Printer:: start_job(pagecount,frompage,topage);
		};
	};
	 int  start_page( void ) {
		if (push_method("start_page",  tolua_fltk_fltk_Fl_Abstract_Printer_start_page00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Abstract_Printer:: start_page();
		};
	};
	 void  translate( int x, int y) {
		if (push_method("translate",  tolua_fltk_fltk_Fl_Abstract_Printer_translate00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Abstract_Printer:: translate(x,y);
		};
	};
	 void  untranslate( void ) {
		if (push_method("untranslate",  tolua_fltk_fltk_Fl_Abstract_Printer_untranslate00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Abstract_Printer:: untranslate();
		};
	};
	 Fl_Device*  set_current( void ) {
		if (push_method("set_current",  tolua_fltk_fltk_Fl_Device_set_current00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Device*  tolua_ret = ( Fl_Device* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Device* ) Fl_Abstract_Printer:: set_current();
		};
	};

	 void Fl_Abstract_Printer__end_job( void ) {
		Fl_Abstract_Printer::end_job();
	};
	 int Fl_Abstract_Printer__end_page( void ) {
		return ( int )Fl_Abstract_Printer::end_page();
	};
	 void Fl_Abstract_Printer__margins( int* left = 0, int* top = 0, int* right = 0, int* bottom = 0) {
		Fl_Abstract_Printer::margins(left,top,right,bottom);
	};
	 void Fl_Abstract_Printer__origin( int x, int y) {
		Fl_Abstract_Printer::origin(x,y);
	};
	 int Fl_Abstract_Printer__printable_rect( int* w = 0, int* h = 0) {
		return ( int )Fl_Abstract_Printer::printable_rect(w,h);
	};
	 void Fl_Abstract_Printer__rotate( float angle) {
		Fl_Abstract_Printer::rotate(angle);
	};
	 void Fl_Abstract_Printer__scale( float scale_x, float scale_y) {
		Fl_Abstract_Printer::scale(scale_x,scale_y);
	};
	 int Fl_Abstract_Printer__start_job( int pagecount, int* frompage = NULL, int* topage = NULL) {
		return ( int )Fl_Abstract_Printer::start_job(pagecount,frompage,topage);
	};
	 int Fl_Abstract_Printer__start_page( void ) {
		return ( int )Fl_Abstract_Printer::start_page();
	};
	 void Fl_Abstract_Printer__translate( int x, int y) {
		Fl_Abstract_Printer::translate(x,y);
	};
	 void Fl_Abstract_Printer__untranslate( void ) {
		Fl_Abstract_Printer::untranslate();
	};
	 Fl_Device* Fl_Abstract_Printer__set_current( void ) {
		return ( Fl_Device* )Fl_Abstract_Printer::set_current();
	};
};

/* method: tolua__set_instance of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Abstract_Printer__end_job of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__end_job00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__end_job00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Abstract_Printer__end_job'", NULL);
#endif
 {
  self->Fl_Abstract_Printer__end_job();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Abstract_Printer__end_job'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Abstract_Printer__end_page of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__end_page00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__end_page00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Abstract_Printer__end_page'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Abstract_Printer__end_page();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Abstract_Printer__end_page'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Abstract_Printer__margins of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__margins00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__margins00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  int left = ((int)  tolua_tonumber(tolua_S,2,0));
  int top = ((int)  tolua_tonumber(tolua_S,3,0));
  int right = ((int)  tolua_tonumber(tolua_S,4,0));
  int bottom = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Abstract_Printer__margins'", NULL);
#endif
 {
  self->Fl_Abstract_Printer__margins(&left,&top,&right,&bottom);
 tolua_pushnumber(tolua_S,(lua_Number)left);
 tolua_pushnumber(tolua_S,(lua_Number)top);
 tolua_pushnumber(tolua_S,(lua_Number)right);
 tolua_pushnumber(tolua_S,(lua_Number)bottom);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Abstract_Printer__margins'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Abstract_Printer__origin of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__origin00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__origin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Abstract_Printer__origin'", NULL);
#endif
 {
  self->Fl_Abstract_Printer__origin(x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Abstract_Printer__origin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Abstract_Printer__printable_rect of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__printable_rect00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__printable_rect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Abstract_Printer__printable_rect'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Abstract_Printer__printable_rect(&w,&h);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)w);
 tolua_pushnumber(tolua_S,(lua_Number)h);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Abstract_Printer__printable_rect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Abstract_Printer__rotate of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__rotate00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__rotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  float angle = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Abstract_Printer__rotate'", NULL);
#endif
 {
  self->Fl_Abstract_Printer__rotate(angle);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Abstract_Printer__rotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Abstract_Printer__scale of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__scale00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__scale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  float scale_x = ((float)  tolua_tonumber(tolua_S,2,0));
  float scale_y = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Abstract_Printer__scale'", NULL);
#endif
 {
  self->Fl_Abstract_Printer__scale(scale_x,scale_y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Abstract_Printer__scale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Abstract_Printer__start_job of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__start_job00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__start_job00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  int pagecount = ((int)  tolua_tonumber(tolua_S,2,0));
  int frompage = ((int)  tolua_tonumber(tolua_S,3,NULL));
  int topage = ((int)  tolua_tonumber(tolua_S,4,NULL));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Abstract_Printer__start_job'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Abstract_Printer__start_job(pagecount,&frompage,&topage);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)frompage);
 tolua_pushnumber(tolua_S,(lua_Number)topage);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Abstract_Printer__start_job'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Abstract_Printer__start_page of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__start_page00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__start_page00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Abstract_Printer__start_page'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Abstract_Printer__start_page();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Abstract_Printer__start_page'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Abstract_Printer__translate of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__translate00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__translate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Abstract_Printer__translate'", NULL);
#endif
 {
  self->Fl_Abstract_Printer__translate(x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Abstract_Printer__translate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Abstract_Printer__untranslate of class  Lua__Fl_Abstract_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__untranslate00
static int tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__untranslate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Abstract_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Abstract_Printer* self = (Lua__Fl_Abstract_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Abstract_Printer__untranslate'", NULL);
#endif
 {
  self->Fl_Abstract_Printer__untranslate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Abstract_Printer__untranslate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fl_End */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_End00
static int tolua_fltk_fltk_Fl_End00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_End();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_End'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_File_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Browser_new00
static int tolua_fltk_fltk_Fl_File_Browser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_File_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_25 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_26 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_27 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_28 = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* tolua_var_29 = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_File_Browser* tolua_ret = (Fl_File_Browser*)  Mtolua_new((Fl_File_Browser)(tolua_var_25,tolua_var_26,tolua_var_27,tolua_var_28,tolua_var_29));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_File_Browser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_File_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Browser_new00_local
static int tolua_fltk_fltk_Fl_File_Browser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_File_Browser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: filetype of class  Fl_File_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Browser_filetype00
static int tolua_fltk_fltk_Fl_File_Browser_filetype00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Browser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Browser* self = (Fl_File_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'filetype'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->filetype();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->filetype(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'filetype'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: filter of class  Fl_File_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Browser_filter00
static int tolua_fltk_fltk_Fl_File_Browser_filter00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Browser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Browser* self = (Fl_File_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'filter'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->filter();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->filter(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'filter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: iconsize of class  Fl_File_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Browser_iconsize00
static int tolua_fltk_fltk_Fl_File_Browser_iconsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Browser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Browser* self = (Fl_File_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'iconsize'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned char tolua_ret = ( unsigned char)  self->iconsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned char opt = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
 self->iconsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'iconsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  Fl_File_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Browser_load00
static int tolua_fltk_fltk_Fl_File_Browser_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Browser",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Browser* self = (Fl_File_Browser*)  tolua_tousertype(tolua_S,1,0);
  const char* directory = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
 {
  int tolua_ret = (int)  self->load(directory);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_File_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Browser_textsize00
static int tolua_fltk_fltk_Fl_File_Browser_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Browser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Browser* self = (Fl_File_Browser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_new00
static int tolua_fltk_fltk_Fl_File_Chooser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isstring(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* d = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* p = ((const char*)  tolua_tostring(tolua_S,3,0));
  int t = ((int)  tolua_tonumber(tolua_S,4,0));
  const char* title = ((const char*)  tolua_tostring(tolua_S,5,0));
 {
  Fl_File_Chooser* tolua_ret = (Fl_File_Chooser*)  Mtolua_new((Fl_File_Chooser)(d,p,t,title));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_File_Chooser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_new00_local
static int tolua_fltk_fltk_Fl_File_Chooser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_File_Chooser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_extra of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_add_extra00
static int tolua_fltk_fltk_Fl_File_Chooser_add_extra00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* gr = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add_extra'", NULL);
#endif
 {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->add_extra(gr);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_extra'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: browser of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_browser00
static int tolua_fltk_fltk_Fl_File_Chooser_browser00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'browser'", NULL);
#endif
 {
  Fl_File_Browser* tolua_ret = (Fl_File_Browser*)  self->browser();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_File_Browser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'browser'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: color of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_color00
static int tolua_fltk_fltk_Fl_File_Chooser_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'color'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: count of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_count00
static int tolua_fltk_fltk_Fl_File_Chooser_count00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count'", NULL);
#endif
 {
  int tolua_ret = (int)  self->count();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: directory of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_directory00
static int tolua_fltk_fltk_Fl_File_Chooser_directory00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'directory'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->directory();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->directory(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'directory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: filter of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_filter00
static int tolua_fltk_fltk_Fl_File_Chooser_filter00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'filter'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->filter();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->filter(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'filter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: filter_value of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_filter_value00
static int tolua_fltk_fltk_Fl_File_Chooser_filter_value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'filter_value'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->filter_value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->filter_value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'filter_value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hide of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_hide00
static int tolua_fltk_fltk_Fl_File_Chooser_hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hide'", NULL);
#endif
 {
  self->hide();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: iconsize of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_iconsize00
static int tolua_fltk_fltk_Fl_File_Chooser_iconsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'iconsize'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned char tolua_ret = ( unsigned char)  self->iconsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned char opt = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
 self->iconsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'iconsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_label00
static int tolua_fltk_fltk_Fl_File_Chooser_label00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->label();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->label(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ok_label of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_ok_label00
static int tolua_fltk_fltk_Fl_File_Chooser_ok_label00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ok_label'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->ok_label();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->ok_label(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ok_label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: preview of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_preview00
static int tolua_fltk_fltk_Fl_File_Chooser_preview00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'preview'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->preview();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->preview(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'preview'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rescan of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_rescan00
static int tolua_fltk_fltk_Fl_File_Chooser_rescan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rescan'", NULL);
#endif
 {
  self->rescan();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rescan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rescan_keep_filename of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_rescan_keep_filename00
static int tolua_fltk_fltk_Fl_File_Chooser_rescan_keep_filename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rescan_keep_filename'", NULL);
#endif
 {
  self->rescan_keep_filename();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rescan_keep_filename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_show00
static int tolua_fltk_fltk_Fl_File_Chooser_show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show'", NULL);
#endif
 {
  self->show();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shown of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_shown00
static int tolua_fltk_fltk_Fl_File_Chooser_shown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shown'", NULL);
#endif
 {
  int tolua_ret = (int)  self->shown();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_textcolor00
static int tolua_fltk_fltk_Fl_File_Chooser_textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_textfont00
static int tolua_fltk_fltk_Fl_File_Chooser_textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_textsize00
static int tolua_fltk_fltk_Fl_File_Chooser_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: type of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_type00
static int tolua_fltk_fltk_Fl_File_Chooser_type00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'type'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->type();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->type(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'type'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: user_data of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_user_data00
static int tolua_fltk_fltk_Fl_File_Chooser_user_data00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'user_data'", NULL);
#endif
 {
 if(nparam < 2) {
  void* tolua_ret = (void*)  self->user_data();
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isuserdata(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  void* opt = ((void*)  tolua_touserdata(tolua_S,2,0));
 self->user_data(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'user_data'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_value00
static int tolua_fltk_fltk_Fl_File_Chooser_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
  int f = ((int)  tolua_tonumber(tolua_S,2,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->value(f);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_value01
static int tolua_fltk_fltk_Fl_File_Chooser_value01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  self->value(filename);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_File_Chooser_value00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: visible of class  Fl_File_Chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Chooser_visible00
static int tolua_fltk_fltk_Fl_File_Chooser_visible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Chooser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Chooser* self = (Fl_File_Chooser*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visible'", NULL);
#endif
 {
  int tolua_ret = (int)  self->visible();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_dir_chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_dir_chooser00
static int tolua_fltk_fltk_fl_dir_chooser00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* message = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* fname = ((const char*)  tolua_tostring(tolua_S,2,0));
  int relative = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  char* tolua_ret = (char*)  fl_dir_chooser(message,fname,relative);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_dir_chooser'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_file_chooser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_file_chooser00
static int tolua_fltk_fltk_fl_file_chooser00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* message = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* pat = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* fname = ((const char*)  tolua_tostring(tolua_S,3,0));
  int relative = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  char* tolua_ret = (char*)  fl_file_chooser(message,pat,fname,relative);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_file_chooser'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_file_chooser_ok_label */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_file_chooser_ok_label00
static int tolua_fltk_fltk_fl_file_chooser_ok_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* l = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  fl_file_chooser_ok_label(l);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_file_chooser_ok_label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_open_uri */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_open_uri00
static int tolua_fltk_fltk_fl_open_uri00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* uri = ((const char*)  tolua_tostring(tolua_S,1,0));
  char* msg = ((char*)  tolua_tostring(tolua_S,2,0));
  int msglen = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  int tolua_ret = (int)  fl_open_uri(uri,msg,msglen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_open_uri'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_new00
static int tolua_fltk_fltk_Fl_File_Icon_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* p = ((const char*)  tolua_tostring(tolua_S,2,0));
  int t = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  Fl_File_Icon* tolua_ret = (Fl_File_Icon*)  Mtolua_new((Fl_File_Icon)(p,t));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_File_Icon");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_new00_local
static int tolua_fltk_fltk_Fl_File_Icon_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_File_Icon_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_add00
static int tolua_fltk_fltk_Fl_File_Icon_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
  short d = ((short)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  void* tolua_ret = (void*)  self->add(d);
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_color of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_add_color00
static int tolua_fltk_fltk_Fl_File_Icon_add_color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add_color'", NULL);
#endif
 {
  void* tolua_ret = (void*)  self->add_color(c);
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_vertex of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_add_vertex00
static int tolua_fltk_fltk_Fl_File_Icon_add_vertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add_vertex'", NULL);
#endif
 {
  void* tolua_ret = (void*)  self->add_vertex(x,y);
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_vertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_clear00
static int tolua_fltk_fltk_Fl_File_Icon_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_draw00
static int tolua_fltk_fltk_Fl_File_Icon_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  unsigned int ic = (( unsigned int)  tolua_tonumber(tolua_S,6,0));
  int active = ((int)  tolua_tonumber(tolua_S,7,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(x,y,w,h,ic,active);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_find00
static int tolua_fltk_fltk_Fl_File_Icon_find00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
  int filetype = ((int)  tolua_tonumber(tolua_S,3,Fl_File_Icon::ANY));
 {
  Fl_File_Icon* tolua_ret = (Fl_File_Icon*)  Fl_File_Icon::find(filename,filetype);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_File_Icon");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: first of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_first00
static int tolua_fltk_fltk_Fl_File_Icon_first00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_File_Icon* tolua_ret = (Fl_File_Icon*)  Fl_File_Icon::first();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_File_Icon");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'first'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_label00
static int tolua_fltk_fltk_Fl_File_Icon_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labeltype of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_labeltype00
static int tolua_fltk_fltk_Fl_File_Icon_labeltype00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Label",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const Fl_Label* o = ((const Fl_Label*)  tolua_tousertype(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  int w = ((int)  tolua_tonumber(tolua_S,5,0));
  int h = ((int)  tolua_tonumber(tolua_S,6,0));
   unsigned a = ((  unsigned)  tolua_tonumber(tolua_S,7,0));
 {
  Fl_File_Icon::labeltype(o,x,y,w,h,a);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labeltype'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_load00
static int tolua_fltk_fltk_Fl_File_Icon_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
  const char* f = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
 {
  self->load(f);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load_fti of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_load_fti00
static int tolua_fltk_fltk_Fl_File_Icon_load_fti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
  const char* fti = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load_fti'", NULL);
#endif
 {
  int tolua_ret = (int)  self->load_fti(fti);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load_fti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load_image of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_load_image00
static int tolua_fltk_fltk_Fl_File_Icon_load_image00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
  const char* i = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load_image'", NULL);
#endif
 {
  int tolua_ret = (int)  self->load_image(i);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load_image'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load_system_icons of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_load_system_icons00
static int tolua_fltk_fltk_Fl_File_Icon_load_system_icons00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_File_Icon::load_system_icons();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load_system_icons'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: next of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_next00
static int tolua_fltk_fltk_Fl_File_Icon_next00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'next'", NULL);
#endif
 {
  Fl_File_Icon* tolua_ret = (Fl_File_Icon*)  self->next();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_File_Icon");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'next'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pattern of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_pattern00
static int tolua_fltk_fltk_Fl_File_Icon_pattern00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pattern'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->pattern();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pattern'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_size00
static int tolua_fltk_fltk_Fl_File_Icon_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  int tolua_ret = (int)  self->size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: type of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_type00
static int tolua_fltk_fltk_Fl_File_Icon_type00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'type'", NULL);
#endif
 {
  int tolua_ret = (int)  self->type();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'type'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_File_Icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Icon_value00
static int tolua_fltk_fltk_Fl_File_Icon_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Icon",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Icon* self = (Fl_File_Icon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  void* tolua_ret = (void*)  self->value();
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_new00
static int tolua_fltk_fltk_Fl_Help_Dialog_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Help_Dialog* tolua_ret = (Fl_Help_Dialog*)  Mtolua_new((Fl_Help_Dialog)());
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Help_Dialog");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_new00_local
static int tolua_fltk_fltk_Fl_Help_Dialog_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Help_Dialog_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: h of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_h00
static int tolua_fltk_fltk_Fl_Help_Dialog_h00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'h'", NULL);
#endif
 {
  int tolua_ret = (int)  self->h();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'h'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hide of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_hide00
static int tolua_fltk_fltk_Fl_Help_Dialog_hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hide'", NULL);
#endif
 {
  self->hide();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_load00
static int tolua_fltk_fltk_Fl_Help_Dialog_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
  const char* f = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
 {
  self->load(f);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: position of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_position00
static int tolua_fltk_fltk_Fl_Help_Dialog_position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
  int xx = ((int)  tolua_tonumber(tolua_S,2,0));
  int yy = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'position'", NULL);
#endif
 {
  self->position(xx,yy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_resize00
static int tolua_fltk_fltk_Fl_Help_Dialog_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
  int xx = ((int)  tolua_tonumber(tolua_S,2,0));
  int yy = ((int)  tolua_tonumber(tolua_S,3,0));
  int ww = ((int)  tolua_tonumber(tolua_S,4,0));
  int hh = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(xx,yy,ww,hh);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_show00
static int tolua_fltk_fltk_Fl_Help_Dialog_show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show'", NULL);
#endif
 {
  self->show();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_show01
static int tolua_fltk_fltk_Fl_Help_Dialog_show01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
  int argc = ((int)  tolua_tonumber(tolua_S,2,0));
  char* argv = ((char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show'", NULL);
#endif
 {
  self->show(argc,&argv);
 tolua_pushstring(tolua_S,(const char*)argv);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Help_Dialog_show00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_textsize00
static int tolua_fltk_fltk_Fl_Help_Dialog_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: topline of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_topline00
static int tolua_fltk_fltk_Fl_Help_Dialog_topline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
  const char* n = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'topline'", NULL);
#endif
 {
  self->topline(n);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'topline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: topline of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_topline01
static int tolua_fltk_fltk_Fl_Help_Dialog_topline01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'topline'", NULL);
#endif
 {
  self->topline(n);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Help_Dialog_topline00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_value00
static int tolua_fltk_fltk_Fl_Help_Dialog_value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->value();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visible of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_visible00
static int tolua_fltk_fltk_Fl_Help_Dialog_visible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visible'", NULL);
#endif
 {
  int tolua_ret = (int)  self->visible();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: w of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_w00
static int tolua_fltk_fltk_Fl_Help_Dialog_w00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'w'", NULL);
#endif
 {
  int tolua_ret = (int)  self->w();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'w'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: x of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_x00
static int tolua_fltk_fltk_Fl_Help_Dialog_x00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'x'", NULL);
#endif
 {
  int tolua_ret = (int)  self->x();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'x'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: y of class  Fl_Help_Dialog */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_Dialog_y00
static int tolua_fltk_fltk_Fl_Help_Dialog_y00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_Dialog",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_Dialog* self = (Fl_Help_Dialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'y'", NULL);
#endif
 {
  int tolua_ret = (int)  self->y();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'y'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_new00
static int tolua_fltk_fltk_Fl_Help_View_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int xx = ((int)  tolua_tonumber(tolua_S,2,0));
  int yy = ((int)  tolua_tonumber(tolua_S,3,0));
  int ww = ((int)  tolua_tonumber(tolua_S,4,0));
  int hh = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Help_View* tolua_ret = (Fl_Help_View*)  Mtolua_new((Fl_Help_View)(xx,yy,ww,hh,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Help_View");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_new00_local
static int tolua_fltk_fltk_Fl_Help_View_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Help_View_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_delete00
static int tolua_fltk_fltk_Fl_Help_View_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
 Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_selection of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_clear_selection00
static int tolua_fltk_fltk_Fl_Help_View_clear_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_selection'", NULL);
#endif
 {
  self->clear_selection();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: directory of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_directory00
static int tolua_fltk_fltk_Fl_Help_View_directory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'directory'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->directory();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'directory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: filename of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_filename00
static int tolua_fltk_fltk_Fl_Help_View_filename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'filename'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->filename();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'filename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_find00
static int tolua_fltk_fltk_Fl_Help_View_find00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
  const char* s = ((const char*)  tolua_tostring(tolua_S,2,0));
  int p = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find'", NULL);
#endif
 {
  int tolua_ret = (int)  self->find(s,p);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: leftline of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_leftline00
static int tolua_fltk_fltk_Fl_Help_View_leftline00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'leftline'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->leftline();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->leftline(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'leftline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_fltk_help_view_link of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_link00
static int tolua_fltk_fltk_Fl_Help_View_link00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_fltk_help_view_link'", NULL);
#endif
 {
  set_fltk_help_view_link(self,L,luaFunc);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'link'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_load00
static int tolua_fltk_fltk_Fl_Help_View_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
  const char* f = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
 {
  int tolua_ret = (int)  self->load(f);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_resize00
static int tolua_fltk_fltk_Fl_Help_View_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_30 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_31 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_32 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_33 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(tolua_var_30,tolua_var_31,tolua_var_32,tolua_var_33);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollbar_size of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_scrollbar_size00
static int tolua_fltk_fltk_Fl_Help_View_scrollbar_size00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollbar_size'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->scrollbar_size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->scrollbar_size(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollbar_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_all of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_select_all00
static int tolua_fltk_fltk_Fl_Help_View_select_all00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_all'", NULL);
#endif
 {
  self->select_all();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_all'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_size00
static int tolua_fltk_fltk_Fl_Help_View_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  int tolua_ret = (int)  self->size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_size01
static int tolua_fltk_fltk_Fl_Help_View_size01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  self->size(W,H);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Help_View_size00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_textcolor00
static int tolua_fltk_fltk_Fl_Help_View_textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_textfont00
static int tolua_fltk_fltk_Fl_Help_View_textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_textsize00
static int tolua_fltk_fltk_Fl_Help_View_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: title of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_title00
static int tolua_fltk_fltk_Fl_Help_View_title00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'title'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->title();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'title'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: topline of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_topline_str00
static int tolua_fltk_fltk_Fl_Help_View_topline_str00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
  const char* n = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'topline'", NULL);
#endif
 {
  self->topline(n);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'topline_str'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: topline of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_topline00
static int tolua_fltk_fltk_Fl_Help_View_topline00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'topline'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->topline();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->topline(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'topline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_value00
static int tolua_fltk_fltk_Fl_Help_View_value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->value();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: font_increment of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_font_increment00
static int tolua_fltk_fltk_Fl_Help_View_font_increment00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'font_increment'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->font_increment();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->font_increment(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'font_increment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: td_top_gap of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_td_top_gap00
static int tolua_fltk_fltk_Fl_Help_View_td_top_gap00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'td_top_gap'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->td_top_gap();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->td_top_gap(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'td_top_gap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: td_bottom_gap of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_td_bottom_gap00
static int tolua_fltk_fltk_Fl_Help_View_td_bottom_gap00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'td_bottom_gap'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->td_bottom_gap();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->td_bottom_gap(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'td_bottom_gap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tr_gap of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_tr_gap00
static int tolua_fltk_fltk_Fl_Help_View_tr_gap00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tr_gap'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->tr_gap();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->tr_gap(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tr_gap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: line31 of class  Fl_Help_View */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Help_View_line3100
static int tolua_fltk_fltk_Fl_Help_View_line3100(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Help_View",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Help_View* self = (Fl_Help_View*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'line31'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->line31();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->line31(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'line31'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Hold_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Hold_Browser_new00
static int tolua_fltk_fltk_Fl_Hold_Browser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Hold_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Hold_Browser* tolua_ret = (Fl_Hold_Browser*)  Mtolua_new((Fl_Hold_Browser)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Hold_Browser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Hold_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Hold_Browser_new00_local
static int tolua_fltk_fltk_Fl_Hold_Browser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Hold_Browser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Hold_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Hold_Browser_handle00
static int tolua_fltk_fltk_Fl_Hold_Browser_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Hold_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Hold_Browser* self = (Fl_Hold_Browser*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Hold_Browser : public Fl_Hold_Browser, public ToluaBase {
public:
	 int  handle( int event) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Hold_Browser_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)event);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Hold_Browser:: handle(event);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Hold_Browser:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Hold_Browser:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Hold_Browser:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Hold_Browser:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Hold_Browser:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Hold_Browser:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Hold_Browser:: show();
		};
	};

	 int Fl_Hold_Browser__handle( int event) {
		return ( int )Fl_Hold_Browser::handle(event);
	};
	 Fl_Group* Fl_Hold_Browser__as_group( void ) {
		return ( Fl_Group* )Fl_Hold_Browser::as_group();
	};
	 Fl_Window* Fl_Hold_Browser__as_window( void ) {
		return ( Fl_Window* )Fl_Hold_Browser::as_window();
	};
	 void Fl_Hold_Browser__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Hold_Browser::do_callback(o,arg);
	};
	 void Fl_Hold_Browser__draw( void ) {
		Fl_Hold_Browser::draw();
	};
	 void Fl_Hold_Browser__hide( void ) {
		Fl_Hold_Browser::hide();
	};
	 void Fl_Hold_Browser__resize( int x, int y, int w, int h) {
		Fl_Hold_Browser::resize(x,y,w,h);
	};
	 void Fl_Hold_Browser__show( void ) {
		Fl_Hold_Browser::show();
	};
	 Lua__Fl_Hold_Browser( int X, int Y, int W, int H, const char* l = 0): Fl_Hold_Browser(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Hold_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Hold_Browser_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Hold_Browser_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Hold_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Hold_Browser* self = (Lua__Fl_Hold_Browser*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Hold_Browser__handle of class  Lua__Fl_Hold_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Hold_Browser_Fl_Hold_Browser__handle00
static int tolua_fltk_fltk_Lua__Fl_Hold_Browser_Fl_Hold_Browser__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Hold_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Hold_Browser* self = (Lua__Fl_Hold_Browser*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Hold_Browser__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Hold_Browser__handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Hold_Browser__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Hold_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Hold_Browser_new00
static int tolua_fltk_fltk_Lua__Fl_Hold_Browser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Hold_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Hold_Browser* tolua_ret = (Lua__Fl_Hold_Browser*)  Mtolua_new((Lua__Fl_Hold_Browser)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Hold_Browser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Hold_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Hold_Browser_new00_local
static int tolua_fltk_fltk_Lua__Fl_Hold_Browser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Hold_Browser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Hold_Browser (lua_State* tolua_S)
{
 Lua__Fl_Hold_Browser* self = (Lua__Fl_Hold_Browser*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_new00
static int tolua_fltk_fltk_Fl_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
  int D = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Fl_Image* tolua_ret = (Fl_Image*)  Mtolua_new((Fl_Image)(W,H,D));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_new00_local
static int tolua_fltk_fltk_Fl_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: color_average of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_color_average00
static int tolua_fltk_fltk_Fl_Image_color_average00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  float i = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'color_average'", NULL);
#endif
 {
  self->color_average(c,i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'color_average'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_copy00
static int tolua_fltk_fltk_Fl_Image_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_copy01
static int tolua_fltk_fltk_Fl_Image_copy01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Image_copy00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: count of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_count00
static int tolua_fltk_fltk_Fl_Image_count00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count'", NULL);
#endif
 {
  int tolua_ret = (int)  self->count();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: d of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_d00
static int tolua_fltk_fltk_Fl_Image_d00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'd'", NULL);
#endif
 {
  int tolua_ret = (int)  self->d();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: desaturate of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_desaturate00
static int tolua_fltk_fltk_Fl_Image_desaturate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'desaturate'", NULL);
#endif
 {
  self->desaturate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'desaturate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_draw00
static int tolua_fltk_fltk_Fl_Image_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_draw01
static int tolua_fltk_fltk_Fl_Image_draw01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Image_draw00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: h of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_h00
static int tolua_fltk_fltk_Fl_Image_h00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'h'", NULL);
#endif
 {
  int tolua_ret = (int)  self->h();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'h'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inactive of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_inactive00
static int tolua_fltk_fltk_Fl_Image_inactive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inactive'", NULL);
#endif
 {
  self->inactive();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inactive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_label00
static int tolua_fltk_fltk_Fl_Image_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_label01
static int tolua_fltk_fltk_Fl_Image_label01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  Fl_Menu_Item* m = ((Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(m);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Image_label00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ld of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_ld00
static int tolua_fltk_fltk_Fl_Image_ld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ld'", NULL);
#endif
 {
  int tolua_ret = (int)  self->ld();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: uncache of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_uncache00
static int tolua_fltk_fltk_Fl_Image_uncache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'uncache'", NULL);
#endif
 {
  self->uncache();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'uncache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: w of class  Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Image_w00
static int tolua_fltk_fltk_Fl_Image_w00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* self = (Fl_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'w'", NULL);
#endif
 {
  int tolua_ret = (int)  self->w();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'w'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Image : public Fl_Image, public ToluaBase {
public:
	 void  color_average( unsigned int c, float i) {
		if (push_method("color_average",  tolua_fltk_fltk_Fl_Image_color_average00)) {
			tolua_pushnumber(lua_state, (lua_Number)c);
			tolua_pushnumber(lua_state, (lua_Number)i);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Image:: color_average(c,i);
		};
	};
	 Fl_Image*  copy( int W, int H) {
		if (push_method("copy",  tolua_fltk_fltk_Fl_Image_copy00)) {
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			ToluaBase::dbcall(lua_state, 3, 1);
			 Fl_Image*  tolua_ret = ( Fl_Image* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Image* ) Fl_Image:: copy(W,H);
		};
	};
	 void  desaturate( void ) {
		if (push_method("desaturate",  tolua_fltk_fltk_Fl_Image_desaturate00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Image:: desaturate();
		};
	};
	 void  draw( int X, int Y, int W, int H, int cx = 0, int cy = 0) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Image_draw00)) {
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			tolua_pushnumber(lua_state, (lua_Number)cx);
			tolua_pushnumber(lua_state, (lua_Number)cy);
			ToluaBase::dbcall(lua_state, 7, 0);
		} else {
			 Fl_Image:: draw(X,Y,W,H,cx,cy);
		};
	};
	 void  label( Fl_Widget* w) {
		if (push_method("label",  tolua_fltk_fltk_Fl_Image_label00)) {
			tolua_pushusertype(lua_state, (void*)w, "Fl_Widget");
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Image:: label(w);
		};
	};
	 void  label( Fl_Menu_Item* m) {
		if (push_method("label",  tolua_fltk_fltk_Fl_Image_label01)) {
			tolua_pushusertype(lua_state, (void*)m, "Fl_Menu_Item");
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Image:: label(m);
		};
	};
	 void  uncache( void ) {
		if (push_method("uncache",  tolua_fltk_fltk_Fl_Image_uncache00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Image:: uncache();
		};
	};

	 void Fl_Image__color_average( unsigned int c, float i) {
		Fl_Image::color_average(c,i);
	};
	 Fl_Image* Fl_Image__copy( int W, int H) {
		return ( Fl_Image* )Fl_Image::copy(W,H);
	};
	 void Fl_Image__desaturate( void ) {
		Fl_Image::desaturate();
	};
	 void Fl_Image__draw( int X, int Y, int W, int H, int cx = 0, int cy = 0) {
		Fl_Image::draw(X,Y,W,H,cx,cy);
	};
	 void Fl_Image__label( Fl_Widget* w) {
		Fl_Image::label(w);
	};
	 void Fl_Image__label( Fl_Menu_Item* m) {
		Fl_Image::label(m);
	};
	 void Fl_Image__uncache( void ) {
		Fl_Image::uncache();
	};
	 Lua__Fl_Image( int W, int H, int D): Fl_Image(W,H,D){};
};

/* method: tolua__set_instance of class  Lua__Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Image_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Image_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Image* self = (Lua__Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Image__color_average of class  Lua__Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__color_average00
static int tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__color_average00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Image* self = (Lua__Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  float i = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Image__color_average'", NULL);
#endif
 {
  self->Fl_Image__color_average(c,i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Image__color_average'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Image__copy of class  Lua__Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__copy00
static int tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Image* self = (Lua__Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Image__copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->Fl_Image__copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Image__copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Image__desaturate of class  Lua__Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__desaturate00
static int tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__desaturate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Image* self = (Lua__Fl_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Image__desaturate'", NULL);
#endif
 {
  self->Fl_Image__desaturate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Image__desaturate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Image__draw of class  Lua__Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__draw00
static int tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Image* self = (Lua__Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Image__draw'", NULL);
#endif
 {
  self->Fl_Image__draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Image__draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Image__label of class  Lua__Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__label00
static int tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Image",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Image* self = (Lua__Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Image__label'", NULL);
#endif
 {
  self->Fl_Image__label(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Image__label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Image__label of class  Lua__Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__label01
static int tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__label01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Image",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Lua__Fl_Image* self = (Lua__Fl_Image*)  tolua_tousertype(tolua_S,1,0);
  Fl_Menu_Item* m = ((Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Image__label'", NULL);
#endif
 {
  self->Fl_Image__label(m);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__label00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Image__uncache of class  Lua__Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__uncache00
static int tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__uncache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Image* self = (Lua__Fl_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Image__uncache'", NULL);
#endif
 {
  self->Fl_Image__uncache();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Image__uncache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Image_new00
static int tolua_fltk_fltk_Lua__Fl_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
  int D = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Lua__Fl_Image* tolua_ret = (Lua__Fl_Image*)  Mtolua_new((Lua__Fl_Image)(W,H,D));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Image_new00_local
static int tolua_fltk_fltk_Lua__Fl_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Image (lua_State* tolua_S)
{
 Lua__Fl_Image* self = (Lua__Fl_Image*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new_fltk_Fl_Pixmap of class  Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pixmap_NewFromStrTable00
static int tolua_fltk_fltk_Fl_Pixmap_NewFromStrTable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  lua_Object tbl = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
 {
  tolua_outside Fl_Pixmap* tolua_ret = (tolua_outside Fl_Pixmap*)  new_fltk_Fl_Pixmap(L,tbl);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Pixmap");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'NewFromStrTable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: color_average of class  Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pixmap_color_average00
static int tolua_fltk_fltk_Fl_Pixmap_color_average00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Pixmap* self = (Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  float i = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'color_average'", NULL);
#endif
 {
  self->color_average(c,i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'color_average'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pixmap_copy00
static int tolua_fltk_fltk_Fl_Pixmap_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Pixmap* self = (Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pixmap_copy01
static int tolua_fltk_fltk_Fl_Pixmap_copy01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Pixmap* self = (Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Pixmap_copy00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: desaturate of class  Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pixmap_desaturate00
static int tolua_fltk_fltk_Fl_Pixmap_desaturate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Pixmap* self = (Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'desaturate'", NULL);
#endif
 {
  self->desaturate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'desaturate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pixmap_draw00
static int tolua_fltk_fltk_Fl_Pixmap_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Pixmap* self = (Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pixmap_draw01
static int tolua_fltk_fltk_Fl_Pixmap_draw01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Pixmap* self = (Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Pixmap_draw00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pixmap_label00
static int tolua_fltk_fltk_Fl_Pixmap_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pixmap",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Pixmap* self = (Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pixmap_label01
static int tolua_fltk_fltk_Fl_Pixmap_label01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pixmap",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Pixmap* self = (Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  Fl_Menu_Item* m = ((Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(m);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Pixmap_label00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: uncache of class  Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pixmap_uncache00
static int tolua_fltk_fltk_Fl_Pixmap_uncache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Pixmap* self = (Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'uncache'", NULL);
#endif
 {
  self->uncache();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'uncache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Pixmap : public Fl_Pixmap, public ToluaBase {
public:
	 void  color_average( unsigned int c, float i) {
		if (push_method("color_average",  tolua_fltk_fltk_Fl_Pixmap_color_average00)) {
			tolua_pushnumber(lua_state, (lua_Number)c);
			tolua_pushnumber(lua_state, (lua_Number)i);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Pixmap:: color_average(c,i);
		};
	};
	 Fl_Image*  copy( int W, int H) {
		if (push_method("copy",  tolua_fltk_fltk_Fl_Pixmap_copy00)) {
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			ToluaBase::dbcall(lua_state, 3, 1);
			 Fl_Image*  tolua_ret = ( Fl_Image* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Image* ) Fl_Pixmap:: copy(W,H);
		};
	};
	 void  desaturate( void ) {
		if (push_method("desaturate",  tolua_fltk_fltk_Fl_Pixmap_desaturate00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Pixmap:: desaturate();
		};
	};
	 void  draw( int X, int Y, int W, int H, int cx = 0, int cy = 0) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Pixmap_draw00)) {
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			tolua_pushnumber(lua_state, (lua_Number)cx);
			tolua_pushnumber(lua_state, (lua_Number)cy);
			ToluaBase::dbcall(lua_state, 7, 0);
		} else {
			 Fl_Pixmap:: draw(X,Y,W,H,cx,cy);
		};
	};
	 void  label( Fl_Widget* w) {
		if (push_method("label",  tolua_fltk_fltk_Fl_Pixmap_label00)) {
			tolua_pushusertype(lua_state, (void*)w, "Fl_Widget");
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Pixmap:: label(w);
		};
	};
	 void  label( Fl_Menu_Item* m) {
		if (push_method("label",  tolua_fltk_fltk_Fl_Pixmap_label01)) {
			tolua_pushusertype(lua_state, (void*)m, "Fl_Menu_Item");
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Pixmap:: label(m);
		};
	};
	 void  uncache( void ) {
		if (push_method("uncache",  tolua_fltk_fltk_Fl_Pixmap_uncache00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Pixmap:: uncache();
		};
	};

	 void Fl_Pixmap__color_average( unsigned int c, float i) {
		Fl_Pixmap::color_average(c,i);
	};
	 Fl_Image* Fl_Pixmap__copy( int W, int H) {
		return ( Fl_Image* )Fl_Pixmap::copy(W,H);
	};
	 void Fl_Pixmap__desaturate( void ) {
		Fl_Pixmap::desaturate();
	};
	 void Fl_Pixmap__draw( int X, int Y, int W, int H, int cx = 0, int cy = 0) {
		Fl_Pixmap::draw(X,Y,W,H,cx,cy);
	};
	 void Fl_Pixmap__label( Fl_Widget* w) {
		Fl_Pixmap::label(w);
	};
	 void Fl_Pixmap__label( Fl_Menu_Item* m) {
		Fl_Pixmap::label(m);
	};
	 void Fl_Pixmap__uncache( void ) {
		Fl_Pixmap::uncache();
	};
};

/* method: tolua__set_instance of class  Lua__Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Pixmap_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Pixmap_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Pixmap* self = (Lua__Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Pixmap__color_average of class  Lua__Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__color_average00
static int tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__color_average00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Pixmap* self = (Lua__Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  float i = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Pixmap__color_average'", NULL);
#endif
 {
  self->Fl_Pixmap__color_average(c,i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Pixmap__color_average'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Pixmap__copy of class  Lua__Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__copy00
static int tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Pixmap* self = (Lua__Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Pixmap__copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->Fl_Pixmap__copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Pixmap__copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Pixmap__desaturate of class  Lua__Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__desaturate00
static int tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__desaturate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Pixmap* self = (Lua__Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Pixmap__desaturate'", NULL);
#endif
 {
  self->Fl_Pixmap__desaturate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Pixmap__desaturate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Pixmap__draw of class  Lua__Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__draw00
static int tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Pixmap* self = (Lua__Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Pixmap__draw'", NULL);
#endif
 {
  self->Fl_Pixmap__draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Pixmap__draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Pixmap__label of class  Lua__Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__label00
static int tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Pixmap",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Pixmap* self = (Lua__Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Pixmap__label'", NULL);
#endif
 {
  self->Fl_Pixmap__label(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Pixmap__label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Pixmap__label of class  Lua__Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__label01
static int tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__label01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Pixmap",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Lua__Fl_Pixmap* self = (Lua__Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
  Fl_Menu_Item* m = ((Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Pixmap__label'", NULL);
#endif
 {
  self->Fl_Pixmap__label(m);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__label00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Pixmap__uncache of class  Lua__Fl_Pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__uncache00
static int tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__uncache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Pixmap",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Pixmap* self = (Lua__Fl_Pixmap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Pixmap__uncache'", NULL);
#endif
 {
  self->Fl_Pixmap__uncache();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Pixmap__uncache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_GIF_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_GIF_Image_new00
static int tolua_fltk_fltk_Fl_GIF_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_GIF_Image",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  Fl_GIF_Image* tolua_ret = (Fl_GIF_Image*)  Mtolua_new((Fl_GIF_Image)(filename));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_GIF_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_GIF_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_GIF_Image_new00_local
static int tolua_fltk_fltk_Fl_GIF_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_GIF_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__copy00
static int tolua_fltk_fltk_Fl_Input__copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
  int clipboard = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  int tolua_ret = (int)  self->copy(clipboard);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy_cuts of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__copy_cuts00
static int tolua_fltk_fltk_Fl_Input__copy_cuts00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy_cuts'", NULL);
#endif
 {
  int tolua_ret = (int)  self->copy_cuts();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy_cuts'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cursor_color of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__cursor_color00
static int tolua_fltk_fltk_Fl_Input__cursor_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cursor_color'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->cursor_color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->cursor_color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cursor_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cut of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__cut00
static int tolua_fltk_fltk_Fl_Input__cut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cut'", NULL);
#endif
 {
  int tolua_ret = (int)  self->cut();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cut of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__cut01
static int tolua_fltk_fltk_Fl_Input__cut01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cut'", NULL);
#endif
 {
  int tolua_ret = (int)  self->cut(n);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Input__cut00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: cut of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__cut02
static int tolua_fltk_fltk_Fl_Input__cut02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
  int a = ((int)  tolua_tonumber(tolua_S,2,0));
  int b = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cut'", NULL);
#endif
 {
  int tolua_ret = (int)  self->cut(a,b);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Input__cut01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: index of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__index00
static int tolua_fltk_fltk_Fl_Input__index00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'index'", NULL);
#endif
 {
  unsigned int tolua_ret = ( unsigned int)  self->index(i);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'index'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: input_type of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__input_type00
static int tolua_fltk_fltk_Fl_Input__input_type00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'input_type'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->input_type();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->input_type(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'input_type'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__insert00
static int tolua_fltk_fltk_Fl_Input__insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
  const char* t = ((const char*)  tolua_tostring(tolua_S,2,0));
  int l = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  int tolua_ret = (int)  self->insert(t,l);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: mark of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__mark00
static int tolua_fltk_fltk_Fl_Input__mark00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'mark'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->mark();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->mark(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'mark'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: maximum_size of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__maximum_size00
static int tolua_fltk_fltk_Fl_Input__maximum_size00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'maximum_size'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->maximum_size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->maximum_size(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'maximum_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: position of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__position00
static int tolua_fltk_fltk_Fl_Input__position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->position();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: position of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__position01
static int tolua_fltk_fltk_Fl_Input__position01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
  int p = ((int)  tolua_tonumber(tolua_S,2,0));
  int m = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->position(p,m);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Input__position00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: position of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__position02
static int tolua_fltk_fltk_Fl_Input__position02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
  int p = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->position(p);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Input__position01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: readonly of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__readonly00
static int tolua_fltk_fltk_Fl_Input__readonly00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'readonly'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->readonly();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->readonly(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readonly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replace of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__replace00
static int tolua_fltk_fltk_Fl_Input__replace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_34 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_35 = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* tolua_var_36 = ((const char*)  tolua_tostring(tolua_S,4,0));
  int tolua_var_37 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replace'", NULL);
#endif
 {
  int tolua_ret = (int)  self->replace(tolua_var_34,tolua_var_35,tolua_var_36,tolua_var_37);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__resize00
static int tolua_fltk_fltk_Fl_Input__resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_38 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_39 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_40 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_41 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(tolua_var_38,tolua_var_39,tolua_var_40,tolua_var_41);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shortcut of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__shortcut00
static int tolua_fltk_fltk_Fl_Input__shortcut00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shortcut'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->shortcut();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->shortcut(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__size00
static int tolua_fltk_fltk_Fl_Input__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  int tolua_ret = (int)  self->size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__size01
static int tolua_fltk_fltk_Fl_Input__size01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  self->size(W,H);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Input__size00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__textcolor00
static int tolua_fltk_fltk_Fl_Input__textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__textfont00
static int tolua_fltk_fltk_Fl_Input__textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__textsize00
static int tolua_fltk_fltk_Fl_Input__textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: undo of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__undo00
static int tolua_fltk_fltk_Fl_Input__undo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'undo'", NULL);
#endif
 {
  int tolua_ret = (int)  self->undo();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'undo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__value00
static int tolua_fltk_fltk_Fl_Input__value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->value();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__value_str_int00
static int tolua_fltk_fltk_Fl_Input__value_str_int00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
  const char* tolua_var_42 = ((const char*)  tolua_tostring(tolua_S,2,0));
  int tolua_var_43 = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value(tolua_var_42,tolua_var_43);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value_str_int'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: wrap of class  Fl_Input_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input__wrap00
static int tolua_fltk_fltk_Fl_Input__wrap00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_* self = (Fl_Input_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'wrap'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->wrap();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->wrap(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'wrap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_new00
static int tolua_fltk_fltk_Fl_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_44 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_45 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_46 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_47 = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* tolua_var_48 = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Input* tolua_ret = (Fl_Input*)  Mtolua_new((Fl_Input)(tolua_var_44,tolua_var_45,tolua_var_46,tolua_var_47,tolua_var_48));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_new00_local
static int tolua_fltk_fltk_Fl_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_handle00
static int tolua_fltk_fltk_Fl_Input_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input* self = (Fl_Input*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_49 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_49);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Input : public Fl_Input, public ToluaBase {
public:
	 int  handle( int tolua_var_49) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Input_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_49);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Input:: handle(tolua_var_49);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Input:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Input:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Input:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Input:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Input:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Input:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Input:: show();
		};
	};

	 int Fl_Input__handle( int tolua_var_49) {
		return ( int )Fl_Input::handle(tolua_var_49);
	};
	 Fl_Group* Fl_Input__as_group( void ) {
		return ( Fl_Group* )Fl_Input::as_group();
	};
	 Fl_Window* Fl_Input__as_window( void ) {
		return ( Fl_Window* )Fl_Input::as_window();
	};
	 void Fl_Input__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Input::do_callback(o,arg);
	};
	 void Fl_Input__draw( void ) {
		Fl_Input::draw();
	};
	 void Fl_Input__hide( void ) {
		Fl_Input::hide();
	};
	 void Fl_Input__resize( int x, int y, int w, int h) {
		Fl_Input::resize(x,y,w,h);
	};
	 void Fl_Input__show( void ) {
		Fl_Input::show();
	};
	 Lua__Fl_Input( int tolua_var_44, int tolua_var_45, int tolua_var_46, int tolua_var_47, const char* tolua_var_48 = 0): Fl_Input(tolua_var_44,tolua_var_45,tolua_var_46,tolua_var_47,tolua_var_48){};
};

/* method: tolua__set_instance of class  Lua__Fl_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Input_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Input_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Input",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Input* self = (Lua__Fl_Input*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Input__handle of class  Lua__Fl_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Input_Fl_Input__handle00
static int tolua_fltk_fltk_Lua__Fl_Input_Fl_Input__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Input* self = (Lua__Fl_Input*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_49 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Input__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Input__handle(tolua_var_49);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Input__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Input_new00
static int tolua_fltk_fltk_Lua__Fl_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_44 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_45 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_46 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_47 = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* tolua_var_48 = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Input* tolua_ret = (Lua__Fl_Input*)  Mtolua_new((Lua__Fl_Input)(tolua_var_44,tolua_var_45,tolua_var_46,tolua_var_47,tolua_var_48));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Input_new00_local
static int tolua_fltk_fltk_Lua__Fl_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Input (lua_State* tolua_S)
{
 Lua__Fl_Input* self = (Lua__Fl_Input*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Input_new00
static int tolua_fltk_fltk_Fl_File_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_File_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_File_Input* tolua_ret = (Fl_File_Input*)  Mtolua_new((Fl_File_Input)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_File_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Input_new00_local
static int tolua_fltk_fltk_Fl_File_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_File_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: down_box of class  Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Input_down_box00
static int tolua_fltk_fltk_Fl_File_Input_down_box00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Input",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Input* self = (Fl_File_Input*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'down_box'", NULL);
#endif
 {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  self->down_box();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'down_box'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: down_box of class  Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Input_down_box01
static int tolua_fltk_fltk_Fl_File_Input_down_box01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_File_Input* self = (Fl_File_Input*)  tolua_tousertype(tolua_S,1,0);
  Fl_Boxtype b = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'down_box'", NULL);
#endif
 {
  self->down_box(b);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_File_Input_down_box00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: errorcolor of class  Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Input_errorcolor00
static int tolua_fltk_fltk_Fl_File_Input_errorcolor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Input",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Input* self = (Fl_File_Input*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'errorcolor'", NULL);
#endif
 {
  unsigned int tolua_ret = ( unsigned int)  self->errorcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'errorcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: errorcolor of class  Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Input_errorcolor01
static int tolua_fltk_fltk_Fl_File_Input_errorcolor01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_File_Input* self = (Fl_File_Input*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'errorcolor'", NULL);
#endif
 {
  self->errorcolor(c);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_File_Input_errorcolor00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Input_handle00
static int tolua_fltk_fltk_Fl_File_Input_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Input* self = (Fl_File_Input*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Input_value00
static int tolua_fltk_fltk_Fl_File_Input_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Input",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_File_Input* self = (Fl_File_Input*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->value();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Input_value01
static int tolua_fltk_fltk_Fl_File_Input_value01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Input",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_File_Input* self = (Fl_File_Input*)  tolua_tousertype(tolua_S,1,0);
  const char* str = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value(str);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_File_Input_value00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_File_Input_value02
static int tolua_fltk_fltk_Fl_File_Input_value02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_File_Input",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_File_Input* self = (Fl_File_Input*)  tolua_tousertype(tolua_S,1,0);
  const char* str = ((const char*)  tolua_tostring(tolua_S,2,0));
  int len = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value(str,len);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_File_Input_value01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_File_Input : public Fl_File_Input, public ToluaBase {
public:
	 int  handle( int event) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_File_Input_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)event);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_File_Input:: handle(event);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_File_Input:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_File_Input:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_File_Input:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_File_Input:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_File_Input:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_File_Input:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_File_Input:: show();
		};
	};

	 int Fl_File_Input__handle( int event) {
		return ( int )Fl_File_Input::handle(event);
	};
	 Fl_Group* Fl_File_Input__as_group( void ) {
		return ( Fl_Group* )Fl_File_Input::as_group();
	};
	 Fl_Window* Fl_File_Input__as_window( void ) {
		return ( Fl_Window* )Fl_File_Input::as_window();
	};
	 void Fl_File_Input__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_File_Input::do_callback(o,arg);
	};
	 void Fl_File_Input__draw( void ) {
		Fl_File_Input::draw();
	};
	 void Fl_File_Input__hide( void ) {
		Fl_File_Input::hide();
	};
	 void Fl_File_Input__resize( int x, int y, int w, int h) {
		Fl_File_Input::resize(x,y,w,h);
	};
	 void Fl_File_Input__show( void ) {
		Fl_File_Input::show();
	};
	 Lua__Fl_File_Input( int X, int Y, int W, int H, const char* L = 0): Fl_File_Input(X,Y,W,H,L){};
};

/* method: tolua__set_instance of class  Lua__Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_File_Input_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_File_Input_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_File_Input",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_File_Input* self = (Lua__Fl_File_Input*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_File_Input__handle of class  Lua__Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_File_Input_Fl_File_Input__handle00
static int tolua_fltk_fltk_Lua__Fl_File_Input_Fl_File_Input__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_File_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_File_Input* self = (Lua__Fl_File_Input*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_File_Input__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_File_Input__handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_File_Input__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_File_Input_new00
static int tolua_fltk_fltk_Lua__Fl_File_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_File_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_File_Input* tolua_ret = (Lua__Fl_File_Input*)  Mtolua_new((Lua__Fl_File_Input)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_File_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_File_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_File_Input_new00_local
static int tolua_fltk_fltk_Lua__Fl_File_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_File_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_File_Input (lua_State* tolua_S)
{
 Lua__Fl_File_Input* self = (Lua__Fl_File_Input*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Float_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Float_Input_new00
static int tolua_fltk_fltk_Fl_Float_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Float_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Float_Input* tolua_ret = (Fl_Float_Input*)  Mtolua_new((Fl_Float_Input)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Float_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Float_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Float_Input_new00_local
static int tolua_fltk_fltk_Fl_Float_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Float_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Float_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Float_Input_handle00
static int tolua_fltk_fltk_Fl_Float_Input_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Float_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Float_Input* self = (Fl_Float_Input*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_50 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_50);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Float_Input : public Fl_Float_Input, public ToluaBase {
public:
	 int  handle( int tolua_var_50) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Float_Input_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_50);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Float_Input:: handle(tolua_var_50);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Float_Input:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Float_Input:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Float_Input:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Float_Input:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Float_Input:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Float_Input:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Float_Input:: show();
		};
	};

	 int Fl_Float_Input__handle( int tolua_var_50) {
		return ( int )Fl_Float_Input::handle(tolua_var_50);
	};
	 Fl_Group* Fl_Float_Input__as_group( void ) {
		return ( Fl_Group* )Fl_Float_Input::as_group();
	};
	 Fl_Window* Fl_Float_Input__as_window( void ) {
		return ( Fl_Window* )Fl_Float_Input::as_window();
	};
	 void Fl_Float_Input__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Float_Input::do_callback(o,arg);
	};
	 void Fl_Float_Input__draw( void ) {
		Fl_Float_Input::draw();
	};
	 void Fl_Float_Input__hide( void ) {
		Fl_Float_Input::hide();
	};
	 void Fl_Float_Input__resize( int x, int y, int w, int h) {
		Fl_Float_Input::resize(x,y,w,h);
	};
	 void Fl_Float_Input__show( void ) {
		Fl_Float_Input::show();
	};
	 Lua__Fl_Float_Input( int X, int Y, int W, int H, const char* l = 0): Fl_Float_Input(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Float_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Float_Input_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Float_Input_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Float_Input",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Float_Input* self = (Lua__Fl_Float_Input*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Float_Input__handle of class  Lua__Fl_Float_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Float_Input_Fl_Float_Input__handle00
static int tolua_fltk_fltk_Lua__Fl_Float_Input_Fl_Float_Input__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Float_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Float_Input* self = (Lua__Fl_Float_Input*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_50 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Float_Input__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Float_Input__handle(tolua_var_50);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Float_Input__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Float_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Float_Input_new00
static int tolua_fltk_fltk_Lua__Fl_Float_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Float_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Float_Input* tolua_ret = (Lua__Fl_Float_Input*)  Mtolua_new((Lua__Fl_Float_Input)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Float_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Float_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Float_Input_new00_local
static int tolua_fltk_fltk_Lua__Fl_Float_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Float_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Float_Input (lua_State* tolua_S)
{
 Lua__Fl_Float_Input* self = (Lua__Fl_Float_Input*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_new00
static int tolua_fltk_fltk_Fl_Input_Choice_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Input_Choice",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Input_Choice* tolua_ret = (Fl_Input_Choice*)  Mtolua_new((Fl_Input_Choice)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Input_Choice");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_new00_local
static int tolua_fltk_fltk_Fl_Input_Choice_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Input_Choice_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_add00
static int tolua_fltk_fltk_Fl_Input_Choice_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
  const char* s = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  self->add(s);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changed of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_changed00
static int tolua_fltk_fltk_Fl_Input_Choice_changed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changed'", NULL);
#endif
 {
  int tolua_ret = (int)  self->changed();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_clear00
static int tolua_fltk_fltk_Fl_Input_Choice_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_changed of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_clear_changed00
static int tolua_fltk_fltk_Fl_Input_Choice_clear_changed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_changed'", NULL);
#endif
 {
  self->clear_changed();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_changed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: down_box of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_down_box00
static int tolua_fltk_fltk_Fl_Input_Choice_down_box00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'down_box'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  self->down_box();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Boxtype opt = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 self->down_box(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'down_box'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: input of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_input00
static int tolua_fltk_fltk_Fl_Input_Choice_input00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'input'", NULL);
#endif
 {
  Fl_Input* tolua_ret = (Fl_Input*)  self->input();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'input'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: menu of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_menu00
static int tolua_fltk_fltk_Fl_Input_Choice_menu00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'menu'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->menu();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'menu'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: menu of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_menu01
static int tolua_fltk_fltk_Fl_Input_Choice_menu01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Menu_Item* m = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'menu'", NULL);
#endif
 {
  self->menu(m);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Input_Choice_menu00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: menubutton of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_menubutton00
static int tolua_fltk_fltk_Fl_Input_Choice_menubutton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'menubutton'", NULL);
#endif
 {
  Fl_Menu_Button* tolua_ret = (Fl_Menu_Button*)  self->menubutton();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'menubutton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_resize00
static int tolua_fltk_fltk_Fl_Input_Choice_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(X,Y,W,H);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_changed of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_set_changed00
static int tolua_fltk_fltk_Fl_Input_Choice_set_changed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_changed'", NULL);
#endif
 {
  self->set_changed();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_changed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_textcolor00
static int tolua_fltk_fltk_Fl_Input_Choice_textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_textfont00
static int tolua_fltk_fltk_Fl_Input_Choice_textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_textsize00
static int tolua_fltk_fltk_Fl_Input_Choice_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Input_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Input_Choice_value00
static int tolua_fltk_fltk_Fl_Input_Choice_value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Input_Choice",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Input_Choice* self = (Fl_Input_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->value();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Int_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Int_Input_new00
static int tolua_fltk_fltk_Fl_Int_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Int_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Int_Input* tolua_ret = (Fl_Int_Input*)  Mtolua_new((Fl_Int_Input)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Int_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Int_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Int_Input_new00_local
static int tolua_fltk_fltk_Fl_Int_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Int_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Int_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Int_Input_handle00
static int tolua_fltk_fltk_Fl_Int_Input_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Int_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Int_Input* self = (Fl_Int_Input*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_51 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_51);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Int_Input : public Fl_Int_Input, public ToluaBase {
public:
	 int  handle( int tolua_var_51) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Int_Input_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_51);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Int_Input:: handle(tolua_var_51);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Int_Input:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Int_Input:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Int_Input:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Int_Input:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Int_Input:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Int_Input:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Int_Input:: show();
		};
	};

	 int Fl_Int_Input__handle( int tolua_var_51) {
		return ( int )Fl_Int_Input::handle(tolua_var_51);
	};
	 Fl_Group* Fl_Int_Input__as_group( void ) {
		return ( Fl_Group* )Fl_Int_Input::as_group();
	};
	 Fl_Window* Fl_Int_Input__as_window( void ) {
		return ( Fl_Window* )Fl_Int_Input::as_window();
	};
	 void Fl_Int_Input__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Int_Input::do_callback(o,arg);
	};
	 void Fl_Int_Input__draw( void ) {
		Fl_Int_Input::draw();
	};
	 void Fl_Int_Input__hide( void ) {
		Fl_Int_Input::hide();
	};
	 void Fl_Int_Input__resize( int x, int y, int w, int h) {
		Fl_Int_Input::resize(x,y,w,h);
	};
	 void Fl_Int_Input__show( void ) {
		Fl_Int_Input::show();
	};
	 Lua__Fl_Int_Input( int X, int Y, int W, int H, const char* l = 0): Fl_Int_Input(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Int_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Int_Input_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Int_Input_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Int_Input",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Int_Input* self = (Lua__Fl_Int_Input*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Int_Input__handle of class  Lua__Fl_Int_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Int_Input_Fl_Int_Input__handle00
static int tolua_fltk_fltk_Lua__Fl_Int_Input_Fl_Int_Input__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Int_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Int_Input* self = (Lua__Fl_Int_Input*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_51 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Int_Input__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Int_Input__handle(tolua_var_51);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Int_Input__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Int_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Int_Input_new00
static int tolua_fltk_fltk_Lua__Fl_Int_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Int_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Int_Input* tolua_ret = (Lua__Fl_Int_Input*)  Mtolua_new((Lua__Fl_Int_Input)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Int_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Int_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Int_Input_new00_local
static int tolua_fltk_fltk_Lua__Fl_Int_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Int_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Int_Input (lua_State* tolua_S)
{
 Lua__Fl_Int_Input* self = (Lua__Fl_Int_Input*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: draw of class  Fl_Label */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Label_draw00
static int tolua_fltk_fltk_Fl_Label_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Label",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Label* self = (Fl_Label*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_52 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_53 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_54 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_55 = ((int)  tolua_tonumber(tolua_S,5,0));
   unsigned tolua_var_56 = ((  unsigned)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(tolua_var_52,tolua_var_53,tolua_var_54,tolua_var_55,tolua_var_56);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: measure of class  Fl_Label */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Label_measure00
static int tolua_fltk_fltk_Fl_Label_measure00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Label",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Label* self = (Fl_Label*)  tolua_tousertype(tolua_S,1,0);
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'measure'", NULL);
#endif
 {
  self->measure(w,h);
 tolua_pushnumber(tolua_S,(lua_Number)w);
 tolua_pushnumber(tolua_S,(lua_Number)h);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'measure'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Light_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Light_Button_new00
static int tolua_fltk_fltk_Fl_Light_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Light_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Light_Button* tolua_ret = (Fl_Light_Button*)  Mtolua_new((Fl_Light_Button)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Light_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Light_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Light_Button_new00_local
static int tolua_fltk_fltk_Fl_Light_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Light_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Light_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Light_Button_handle00
static int tolua_fltk_fltk_Fl_Light_Button_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Light_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Light_Button* self = (Fl_Light_Button*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_57 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_57);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Light_Button : public Fl_Light_Button, public ToluaBase {
public:
	 int  handle( int tolua_var_57) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Light_Button_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_57);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Light_Button:: handle(tolua_var_57);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  NULL)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Light_Button:: draw();
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Light_Button:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Light_Button:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Light_Button:: do_callback(o,arg);
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Light_Button:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Light_Button:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Light_Button:: show();
		};
	};

	 int Fl_Light_Button__handle( int tolua_var_57) {
		return ( int )Fl_Light_Button::handle(tolua_var_57);
	};
	 void Fl_Light_Button__draw( void ) {
		Fl_Light_Button::draw();
	};
	 Fl_Group* Fl_Light_Button__as_group( void ) {
		return ( Fl_Group* )Fl_Light_Button::as_group();
	};
	 Fl_Window* Fl_Light_Button__as_window( void ) {
		return ( Fl_Window* )Fl_Light_Button::as_window();
	};
	 void Fl_Light_Button__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Light_Button::do_callback(o,arg);
	};
	 void Fl_Light_Button__hide( void ) {
		Fl_Light_Button::hide();
	};
	 void Fl_Light_Button__resize( int x, int y, int w, int h) {
		Fl_Light_Button::resize(x,y,w,h);
	};
	 void Fl_Light_Button__show( void ) {
		Fl_Light_Button::show();
	};
	 Lua__Fl_Light_Button( int x, int y, int w, int h, const char* l = 0): Fl_Light_Button(x,y,w,h,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Light_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Light_Button_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Light_Button_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Light_Button",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Light_Button* self = (Lua__Fl_Light_Button*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Light_Button__handle of class  Lua__Fl_Light_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Light_Button_Fl_Light_Button__handle00
static int tolua_fltk_fltk_Lua__Fl_Light_Button_Fl_Light_Button__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Light_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Light_Button* self = (Lua__Fl_Light_Button*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_57 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Light_Button__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Light_Button__handle(tolua_var_57);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Light_Button__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Light_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Light_Button_new00
static int tolua_fltk_fltk_Lua__Fl_Light_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Light_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Light_Button* tolua_ret = (Lua__Fl_Light_Button*)  Mtolua_new((Lua__Fl_Light_Button)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Light_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Light_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Light_Button_new00_local
static int tolua_fltk_fltk_Lua__Fl_Light_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Light_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Light_Button (lua_State* tolua_S)
{
 Lua__Fl_Light_Button* self = (Lua__Fl_Light_Button*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Check_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Button_new00
static int tolua_fltk_fltk_Fl_Check_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Check_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Check_Button* tolua_ret = (Fl_Check_Button*)  Mtolua_new((Fl_Check_Button)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Check_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Check_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Check_Button_new00_local
static int tolua_fltk_fltk_Fl_Check_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Check_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: activate of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_activate00
static int tolua_fltk_fltk_Fl_Menu_Item_activate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'activate'", NULL);
#endif
 {
  self->activate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'activate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: active of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_active00
static int tolua_fltk_fltk_Fl_Menu_Item_active00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'active'", NULL);
#endif
 {
  int tolua_ret = (int)  self->active();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'active'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: activevisible of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_activevisible00
static int tolua_fltk_fltk_Fl_Menu_Item_activevisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'activevisible'", NULL);
#endif
 {
  int tolua_ret = (int)  self->activevisible();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'activevisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: menu_at of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_menu_at00
static int tolua_fltk_fltk_Fl_Menu_Item_menu_at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'menu_at'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->menu_at(index);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'menu_at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_fl_menu_item_add of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_add00
static int tolua_fltk_fltk_Fl_Menu_Item_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
  lua_Object shortcut = ((lua_Object)  tolua_tovalue(tolua_S,3,0));
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,4,0));
  lua_Object data = ((lua_Object)  tolua_tovalue(tolua_S,5,0));
  int flags = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fltk_fl_menu_item_add'", NULL);
#endif
 {
  tolua_outside int tolua_ret = (tolua_outside int)  fltk_fl_menu_item_add(self,L,label,shortcut,luaFunc,data,flags);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: argument of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_argument00
static int tolua_fltk_fltk_Fl_Menu_Item_argument00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'argument'", NULL);
#endif
 {
 if(nparam < 2) {
  long tolua_ret = (long)  self->argument();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  long opt = ((long)  tolua_tonumber(tolua_S,2,0));
 self->argument(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'argument'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_fltk_menu_item_callback of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_callback00
static int tolua_fltk_fltk_Fl_Menu_Item_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,2,0));
  lua_Object data = ((lua_Object)  tolua_tovalue(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_fltk_menu_item_callback'", NULL);
#endif
 {
  set_fltk_menu_item_callback(self,L,luaFunc,data);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: check of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_check00
static int tolua_fltk_fltk_Fl_Menu_Item_check00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'check'", NULL);
#endif
 {
  self->check();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'check'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkbox of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_checkbox00
static int tolua_fltk_fltk_Fl_Menu_Item_checkbox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkbox'", NULL);
#endif
 {
  int tolua_ret = (int)  self->checkbox();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkbox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checked of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_checked00
static int tolua_fltk_fltk_Fl_Menu_Item_checked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checked'", NULL);
#endif
 {
  int tolua_ret = (int)  self->checked();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_clear00
static int tolua_fltk_fltk_Fl_Menu_Item_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deactivate of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_deactivate00
static int tolua_fltk_fltk_Fl_Menu_Item_deactivate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deactivate'", NULL);
#endif
 {
  self->deactivate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deactivate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: do_callback of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_do_callback00
static int tolua_fltk_fltk_Fl_Menu_Item_do_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* o = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'do_callback'", NULL);
#endif
 {
  self->do_callback(o);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'do_callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: do_callback of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_do_callback01
static int tolua_fltk_fltk_Fl_Menu_Item_do_callback01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* o = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  long arg = ((long)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'do_callback'", NULL);
#endif
 {
  self->do_callback(o,arg);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu_Item_do_callback00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_draw00
static int tolua_fltk_fltk_Fl_Menu_Item_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,6,"const Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const Fl_Menu_* tolua_var_58 = ((const Fl_Menu_*)  tolua_tousertype(tolua_S,6,0));
  int t = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(x,y,w,h,tolua_var_58,t);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_shortcut of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_find_shortcut00
static int tolua_fltk_fltk_Fl_Menu_Item_find_shortcut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  int ip = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_shortcut'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->find_shortcut(&ip);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 tolua_pushnumber(tolua_S,(lua_Number)ip);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find_shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: first of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_first00
static int tolua_fltk_fltk_Fl_Menu_Item_first00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'first'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->first();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'first'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hide of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_hide00
static int tolua_fltk_fltk_Fl_Menu_Item_hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hide'", NULL);
#endif
 {
  self->hide();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: image of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_image00
static int tolua_fltk_fltk_Fl_Menu_Item_image00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  Fl_Image* a = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'image'", NULL);
#endif
 {
  self->image(a);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'image'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_fl_menu_item_insert of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_insert00
static int tolua_fltk_fltk_Fl_Menu_Item_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* label = ((const char*)  tolua_tostring(tolua_S,3,0));
  lua_Object shortcut = ((lua_Object)  tolua_tovalue(tolua_S,4,0));
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,5,0));
  lua_Object data = ((lua_Object)  tolua_tovalue(tolua_S,6,0));
  int flags = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fltk_fl_menu_item_insert'", NULL);
#endif
 {
  tolua_outside int tolua_ret = (tolua_outside int)  fltk_fl_menu_item_insert(self,L,index,label,shortcut,luaFunc,data,flags);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_label00
static int tolua_fltk_fltk_Fl_Menu_Item_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->label();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_label01
static int tolua_fltk_fltk_Fl_Menu_Item_label01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  const char* a = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(a);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu_Item_label00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_label02
static int tolua_fltk_fltk_Fl_Menu_Item_label02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  Fl_Labeltype a = ((Fl_Labeltype) (int)  tolua_tonumber(tolua_S,2,0));
  const char* b = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(a,b);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu_Item_label01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: labeltype of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_labeltype00
static int tolua_fltk_fltk_Fl_Menu_Item_labeltype00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labeltype'", NULL);
#endif
 {
  Fl_Labeltype tolua_ret = (Fl_Labeltype)  self->labeltype();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labeltype'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labeltype of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_labeltype01
static int tolua_fltk_fltk_Fl_Menu_Item_labeltype01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  Fl_Labeltype a = ((Fl_Labeltype) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labeltype'", NULL);
#endif
 {
  self->labeltype(a);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu_Item_labeltype00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: measure of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_measure00
static int tolua_fltk_fltk_Fl_Menu_Item_measure00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"const Fl_Menu_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  int h = ((int)  tolua_tonumber(tolua_S,2,0));
  const Fl_Menu_* tolua_var_59 = ((const Fl_Menu_*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'measure'", NULL);
#endif
 {
  int tolua_ret = (int)  self->measure(&h,tolua_var_59);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)h);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'measure'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: next of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_next00
static int tolua_fltk_fltk_Fl_Menu_Item_next00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'next'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->next(i);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'next'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: popup of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_popup00
static int tolua_fltk_fltk_Fl_Menu_Item_popup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,1,&tolua_err) ||
 !tolua_isusertype(tolua_S,5,"const Fl_Menu_Item",1,&tolua_err) ||
 !tolua_isusertype(tolua_S,6,"const Fl_Menu_",1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* title = ((const char*)  tolua_tostring(tolua_S,4,0));
  const Fl_Menu_Item* picked = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,5,0));
  const Fl_Menu_* tolua_var_60 = ((const Fl_Menu_*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'popup'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->popup(X,Y,title,picked,tolua_var_60);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'popup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pulldown of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_pulldown00
static int tolua_fltk_fltk_Fl_Menu_Item_pulldown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,6,"const Fl_Menu_Item",1,&tolua_err) ||
 !tolua_isusertype(tolua_S,7,"const Fl_Menu_",1,&tolua_err) ||
 !tolua_isusertype(tolua_S,8,"const Fl_Menu_Item",1,&tolua_err) ||
 !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const Fl_Menu_Item* picked = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,6,0));
  const Fl_Menu_* tolua_var_61 = ((const Fl_Menu_*)  tolua_tousertype(tolua_S,7,0));
  const Fl_Menu_Item* title = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,8,0));
  int menubar = ((int)  tolua_tonumber(tolua_S,9,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pulldown'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->pulldown(X,Y,W,H,picked,tolua_var_61,title,menubar);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pulldown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: radio of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_radio00
static int tolua_fltk_fltk_Fl_Menu_Item_radio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'radio'", NULL);
#endif
 {
  int tolua_ret = (int)  self->radio();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'radio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_set00
static int tolua_fltk_fltk_Fl_Menu_Item_set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'", NULL);
#endif
 {
  self->set();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setonly of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_setonly00
static int tolua_fltk_fltk_Fl_Menu_Item_setonly00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setonly'", NULL);
#endif
 {
  self->setonly();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setonly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shortcut of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_shortcut00
static int tolua_fltk_fltk_Fl_Menu_Item_shortcut00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shortcut'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->shortcut();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->shortcut(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_show00
static int tolua_fltk_fltk_Fl_Menu_Item_show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show'", NULL);
#endif
 {
  self->show();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_size00
static int tolua_fltk_fltk_Fl_Menu_Item_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  int tolua_ret = (int)  self->size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: submenu of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_submenu00
static int tolua_fltk_fltk_Fl_Menu_Item_submenu00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'submenu'", NULL);
#endif
 {
  int tolua_ret = (int)  self->submenu();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'submenu'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: test_shortcut of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_test_shortcut00
static int tolua_fltk_fltk_Fl_Menu_Item_test_shortcut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'test_shortcut'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->test_shortcut();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'test_shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: uncheck of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_uncheck00
static int tolua_fltk_fltk_Fl_Menu_Item_uncheck00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'uncheck'", NULL);
#endif
 {
  self->uncheck();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'uncheck'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: user_data of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_user_data00
static int tolua_fltk_fltk_Fl_Menu_Item_user_data00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'user_data'", NULL);
#endif
 {
 if(nparam < 2) {
  void* tolua_ret = (void*)  self->user_data();
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isuserdata(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  void* opt = ((void*)  tolua_touserdata(tolua_S,2,0));
 self->user_data(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'user_data'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_value00
static int tolua_fltk_fltk_Fl_Menu_Item_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visible of class  Fl_Menu_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Item_visible00
static int tolua_fltk_fltk_Fl_Menu_Item_visible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Item* self = (Fl_Menu_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visible'", NULL);
#endif
 {
  int tolua_ret = (int)  self->visible();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_fl_menu_add of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__add00
static int tolua_fltk_fltk_Fl_Menu__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
  lua_Object shortcut = ((lua_Object)  tolua_tovalue(tolua_S,3,0));
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,4,0));
  lua_Object data = ((lua_Object)  tolua_tovalue(tolua_S,5,0));
  int flags = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fltk_fl_menu_add'", NULL);
#endif
 {
  tolua_outside int tolua_ret = (tolua_outside int)  fltk_fl_menu_add(self,L,label,shortcut,luaFunc,data,flags);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__add01
static int tolua_fltk_fltk_Fl_Menu__add01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  const char* tolua_var_62 = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  int tolua_ret = (int)  self->add(tolua_var_62);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu__add00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__clear00
static int tolua_fltk_fltk_Fl_Menu__clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_submenu of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__clear_submenu00
static int tolua_fltk_fltk_Fl_Menu__clear_submenu00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_submenu'", NULL);
#endif
 {
  int tolua_ret = (int)  self->clear_submenu(index);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_submenu'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__copy00
static int tolua_fltk_fltk_Fl_Menu__copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Menu_Item* m = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
  void* user_data = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  self->copy(m,user_data);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: down_box of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__down_box00
static int tolua_fltk_fltk_Fl_Menu__down_box00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'down_box'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  self->down_box();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Boxtype opt = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 self->down_box(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'down_box'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: down_color of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__down_color00
static int tolua_fltk_fltk_Fl_Menu__down_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'down_color'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->down_color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->down_color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'down_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_index of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__find_index00
static int tolua_fltk_fltk_Fl_Menu__find_index00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_index'", NULL);
#endif
 {
  int tolua_ret = (int)  self->find_index(name);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find_index'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_index of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__find_index01
static int tolua_fltk_fltk_Fl_Menu__find_index01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Menu_Item* item = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_index'", NULL);
#endif
 {
  int tolua_ret = (int)  self->find_index(item);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu__find_index00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_index of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__find_index02
static int tolua_fltk_fltk_Fl_Menu__find_index02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Callback",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  Fl_Callback* cb = ((Fl_Callback*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_index'", NULL);
#endif
 {
  int tolua_ret = (int)  self->find_index(cb);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu__find_index01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_item of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__find_item00
static int tolua_fltk_fltk_Fl_Menu__find_item00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_item'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->find_item(name);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find_item'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_item of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__find_item01
static int tolua_fltk_fltk_Fl_Menu__find_item01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Callback",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  Fl_Callback* tolua_var_63 = ((Fl_Callback*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_item'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->find_item(tolua_var_63);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu__find_item00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: global of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__global00
static int tolua_fltk_fltk_Fl_Menu__global00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'global'", NULL);
#endif
 {
  self->global();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'global'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_fl_menu_insert of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__insert00
static int tolua_fltk_fltk_Fl_Menu__insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* label = ((const char*)  tolua_tostring(tolua_S,3,0));
  lua_Object shortcut = ((lua_Object)  tolua_tovalue(tolua_S,4,0));
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,5,0));
  lua_Object data = ((lua_Object)  tolua_tovalue(tolua_S,6,0));
  int flags = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fltk_fl_menu_insert'", NULL);
#endif
 {
  tolua_outside int tolua_ret = (tolua_outside int)  fltk_fl_menu_insert(self,L,index,label,shortcut,luaFunc,data,flags);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: item_pathname of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__item_pathname00
static int tolua_fltk_fltk_Fl_Menu__item_pathname00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,4,"const Fl_Menu_Item",1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  char* name = ((char*)  tolua_tostring(tolua_S,2,0));
  int namelen = ((int)  tolua_tonumber(tolua_S,3,0));
  const Fl_Menu_Item* finditem = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'item_pathname'", NULL);
#endif
 {
  int tolua_ret = (int)  self->item_pathname(name,namelen,finditem);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'item_pathname'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: menu of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__menu00
static int tolua_fltk_fltk_Fl_Menu__menu00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'menu'", NULL);
#endif
 {
  const Fl_Menu_Item* tolua_ret = (const Fl_Menu_Item*)  self->menu();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"const Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'menu'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: menu_at of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__menu_at00
static int tolua_fltk_fltk_Fl_Menu__menu_at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  int idx = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'menu_at'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->menu_at(idx);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'menu_at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: menu of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__menu01
static int tolua_fltk_fltk_Fl_Menu__menu01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Menu_Item* m = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'menu'", NULL);
#endif
 {
  self->menu(m);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu__menu00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: mode of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__mode00
static int tolua_fltk_fltk_Fl_Menu__mode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  int fl = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'mode'", NULL);
#endif
 {
  self->mode(i,fl);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'mode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: mode of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__mode01
static int tolua_fltk_fltk_Fl_Menu__mode01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'mode'", NULL);
#endif
 {
  int tolua_ret = (int)  self->mode(i);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu__mode00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: mvalue of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__mvalue00
static int tolua_fltk_fltk_Fl_Menu__mvalue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'mvalue'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->mvalue();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'mvalue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: picked of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__picked00
static int tolua_fltk_fltk_Fl_Menu__picked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Menu_Item* tolua_var_64 = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'picked'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->picked(tolua_var_64);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'picked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__remove00
static int tolua_fltk_fltk_Fl_Menu__remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_65 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
 {
  self->remove(tolua_var_65);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replace of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__replace00
static int tolua_fltk_fltk_Fl_Menu__replace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_66 = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* tolua_var_67 = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replace'", NULL);
#endif
 {
  self->replace(tolua_var_66,tolua_var_67);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shortcut of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__shortcut00
static int tolua_fltk_fltk_Fl_Menu__shortcut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  int s = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shortcut'", NULL);
#endif
 {
  self->shortcut(i,s);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__size00
static int tolua_fltk_fltk_Fl_Menu__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  int tolua_ret = (int)  self->size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__size01
static int tolua_fltk_fltk_Fl_Menu__size01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  self->size(W,H);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu__size00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: test_shortcut of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__test_shortcut00
static int tolua_fltk_fltk_Fl_Menu__test_shortcut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'test_shortcut'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->test_shortcut();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'test_shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: text of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__text00
static int tolua_fltk_fltk_Fl_Menu__text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'text'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->text();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: text of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__text01
static int tolua_fltk_fltk_Fl_Menu__text01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'text'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->text(i);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu__text00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__textcolor00
static int tolua_fltk_fltk_Fl_Menu__textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__textfont00
static int tolua_fltk_fltk_Fl_Menu__textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__textsize00
static int tolua_fltk_fltk_Fl_Menu__textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__value00
static int tolua_fltk_fltk_Fl_Menu__value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__value01
static int tolua_fltk_fltk_Fl_Menu__value01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Menu_Item* tolua_var_68 = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value(tolua_var_68);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu__value00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Menu_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu__value02
static int tolua_fltk_fltk_Fl_Menu__value02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Menu_* self = (Fl_Menu_*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value(i);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu__value01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Choice_new00
static int tolua_fltk_fltk_Fl_Choice_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Choice",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Choice* tolua_ret = (Fl_Choice*)  Mtolua_new((Fl_Choice)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Choice");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Choice_new00_local
static int tolua_fltk_fltk_Fl_Choice_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Choice_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Choice_handle00
static int tolua_fltk_fltk_Fl_Choice_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Choice",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Choice* self = (Fl_Choice*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_69 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_69);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Choice_value00
static int tolua_fltk_fltk_Fl_Choice_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Choice",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Choice* self = (Fl_Choice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Choice_value01
static int tolua_fltk_fltk_Fl_Choice_value01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Choice",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Choice* self = (Fl_Choice*)  tolua_tousertype(tolua_S,1,0);
  int v = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value(v);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Choice_value00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Choice_value02
static int tolua_fltk_fltk_Fl_Choice_value02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Choice",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Choice* self = (Fl_Choice*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Menu_Item* v = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value(v);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Choice_value01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Choice : public Fl_Choice, public ToluaBase {
public:
	 int  handle( int tolua_var_69) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Choice_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_69);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Choice:: handle(tolua_var_69);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Choice:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Choice:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Choice:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Choice:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Choice:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Choice:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Choice:: show();
		};
	};

	 int Fl_Choice__handle( int tolua_var_69) {
		return ( int )Fl_Choice::handle(tolua_var_69);
	};
	 Fl_Group* Fl_Choice__as_group( void ) {
		return ( Fl_Group* )Fl_Choice::as_group();
	};
	 Fl_Window* Fl_Choice__as_window( void ) {
		return ( Fl_Window* )Fl_Choice::as_window();
	};
	 void Fl_Choice__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Choice::do_callback(o,arg);
	};
	 void Fl_Choice__draw( void ) {
		Fl_Choice::draw();
	};
	 void Fl_Choice__hide( void ) {
		Fl_Choice::hide();
	};
	 void Fl_Choice__resize( int x, int y, int w, int h) {
		Fl_Choice::resize(x,y,w,h);
	};
	 void Fl_Choice__show( void ) {
		Fl_Choice::show();
	};
	 Lua__Fl_Choice( int X, int Y, int W, int H, const char* L = 0): Fl_Choice(X,Y,W,H,L){};
};

/* method: tolua__set_instance of class  Lua__Fl_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Choice_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Choice_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Choice",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Choice* self = (Lua__Fl_Choice*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Choice__handle of class  Lua__Fl_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Choice_Fl_Choice__handle00
static int tolua_fltk_fltk_Lua__Fl_Choice_Fl_Choice__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Choice",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Choice* self = (Lua__Fl_Choice*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_69 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Choice__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Choice__handle(tolua_var_69);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Choice__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Choice_new00
static int tolua_fltk_fltk_Lua__Fl_Choice_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Choice",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Choice* tolua_ret = (Lua__Fl_Choice*)  Mtolua_new((Lua__Fl_Choice)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Choice");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Choice_new00_local
static int tolua_fltk_fltk_Lua__Fl_Choice_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Choice_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Choice (lua_State* tolua_S)
{
 Lua__Fl_Choice* self = (Lua__Fl_Choice*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Bar_new00
static int tolua_fltk_fltk_Fl_Menu_Bar_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Menu_Bar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Menu_Bar* tolua_ret = (Fl_Menu_Bar*)  Mtolua_new((Fl_Menu_Bar)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Bar");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Bar_new00_local
static int tolua_fltk_fltk_Fl_Menu_Bar_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Menu_Bar_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Bar_handle00
static int tolua_fltk_fltk_Fl_Menu_Bar_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Bar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Bar* self = (Fl_Menu_Bar*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_70 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_70);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Menu_Bar : public Fl_Menu_Bar, public ToluaBase {
public:
	 int  handle( int tolua_var_70) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Menu_Bar_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_70);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Menu_Bar:: handle(tolua_var_70);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Menu_Bar:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Menu_Bar:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Menu_Bar:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Menu_Bar:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Menu_Bar:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Menu_Bar:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Menu_Bar:: show();
		};
	};

	 int Fl_Menu_Bar__handle( int tolua_var_70) {
		return ( int )Fl_Menu_Bar::handle(tolua_var_70);
	};
	 Fl_Group* Fl_Menu_Bar__as_group( void ) {
		return ( Fl_Group* )Fl_Menu_Bar::as_group();
	};
	 Fl_Window* Fl_Menu_Bar__as_window( void ) {
		return ( Fl_Window* )Fl_Menu_Bar::as_window();
	};
	 void Fl_Menu_Bar__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Menu_Bar::do_callback(o,arg);
	};
	 void Fl_Menu_Bar__draw( void ) {
		Fl_Menu_Bar::draw();
	};
	 void Fl_Menu_Bar__hide( void ) {
		Fl_Menu_Bar::hide();
	};
	 void Fl_Menu_Bar__resize( int x, int y, int w, int h) {
		Fl_Menu_Bar::resize(x,y,w,h);
	};
	 void Fl_Menu_Bar__show( void ) {
		Fl_Menu_Bar::show();
	};
	 Lua__Fl_Menu_Bar( int X, int Y, int W, int H, const char* l = 0): Fl_Menu_Bar(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Menu_Bar_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Menu_Bar_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Menu_Bar",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Menu_Bar* self = (Lua__Fl_Menu_Bar*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Menu_Bar__handle of class  Lua__Fl_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Menu_Bar_Fl_Menu_Bar__handle00
static int tolua_fltk_fltk_Lua__Fl_Menu_Bar_Fl_Menu_Bar__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Menu_Bar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Menu_Bar* self = (Lua__Fl_Menu_Bar*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_70 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Menu_Bar__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Menu_Bar__handle(tolua_var_70);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Menu_Bar__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Menu_Bar_new00
static int tolua_fltk_fltk_Lua__Fl_Menu_Bar_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Menu_Bar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Menu_Bar* tolua_ret = (Lua__Fl_Menu_Bar*)  Mtolua_new((Lua__Fl_Menu_Bar)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Menu_Bar");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Menu_Bar_new00_local
static int tolua_fltk_fltk_Lua__Fl_Menu_Bar_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Menu_Bar_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Menu_Bar (lua_State* tolua_S)
{
 Lua__Fl_Menu_Bar* self = (Lua__Fl_Menu_Bar*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Menu_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Button_new00
static int tolua_fltk_fltk_Fl_Menu_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Menu_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_71 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_72 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_73 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_74 = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* tolua_var_75 = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Menu_Button* tolua_ret = (Fl_Menu_Button*)  Mtolua_new((Fl_Menu_Button)(tolua_var_71,tolua_var_72,tolua_var_73,tolua_var_74,tolua_var_75));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Menu_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Button_new00_local
static int tolua_fltk_fltk_Fl_Menu_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Menu_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Menu_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Button_handle00
static int tolua_fltk_fltk_Fl_Menu_Button_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Button* self = (Fl_Menu_Button*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_76 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_76);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: popup of class  Fl_Menu_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Button_popup00
static int tolua_fltk_fltk_Fl_Menu_Button_popup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Button",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Button* self = (Fl_Menu_Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'popup'", NULL);
#endif
 {
  Fl_Menu_Item* tolua_ret = (Fl_Menu_Item*)  self->popup();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'popup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Menu_Button : public Fl_Menu_Button, public ToluaBase {
public:
	 int  handle( int tolua_var_76) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Menu_Button_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_76);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Menu_Button:: handle(tolua_var_76);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Menu_Button:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Menu_Button:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Menu_Button:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Menu_Button:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Menu_Button:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Menu_Button:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Menu_Button:: show();
		};
	};

	 int Fl_Menu_Button__handle( int tolua_var_76) {
		return ( int )Fl_Menu_Button::handle(tolua_var_76);
	};
	 Fl_Group* Fl_Menu_Button__as_group( void ) {
		return ( Fl_Group* )Fl_Menu_Button::as_group();
	};
	 Fl_Window* Fl_Menu_Button__as_window( void ) {
		return ( Fl_Window* )Fl_Menu_Button::as_window();
	};
	 void Fl_Menu_Button__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Menu_Button::do_callback(o,arg);
	};
	 void Fl_Menu_Button__draw( void ) {
		Fl_Menu_Button::draw();
	};
	 void Fl_Menu_Button__hide( void ) {
		Fl_Menu_Button::hide();
	};
	 void Fl_Menu_Button__resize( int x, int y, int w, int h) {
		Fl_Menu_Button::resize(x,y,w,h);
	};
	 void Fl_Menu_Button__show( void ) {
		Fl_Menu_Button::show();
	};
	 Lua__Fl_Menu_Button( int tolua_var_71, int tolua_var_72, int tolua_var_73, int tolua_var_74, const char* tolua_var_75 = 0): Fl_Menu_Button(tolua_var_71,tolua_var_72,tolua_var_73,tolua_var_74,tolua_var_75){};
};

/* method: tolua__set_instance of class  Lua__Fl_Menu_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Menu_Button_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Menu_Button_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Menu_Button",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Menu_Button* self = (Lua__Fl_Menu_Button*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Menu_Button__handle of class  Lua__Fl_Menu_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Menu_Button_Fl_Menu_Button__handle00
static int tolua_fltk_fltk_Lua__Fl_Menu_Button_Fl_Menu_Button__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Menu_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Menu_Button* self = (Lua__Fl_Menu_Button*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_76 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Menu_Button__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Menu_Button__handle(tolua_var_76);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Menu_Button__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Menu_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Menu_Button_new00
static int tolua_fltk_fltk_Lua__Fl_Menu_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Menu_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_71 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_72 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_73 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_74 = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* tolua_var_75 = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Menu_Button* tolua_ret = (Lua__Fl_Menu_Button*)  Mtolua_new((Lua__Fl_Menu_Button)(tolua_var_71,tolua_var_72,tolua_var_73,tolua_var_74,tolua_var_75));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Menu_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Menu_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Menu_Button_new00_local
static int tolua_fltk_fltk_Lua__Fl_Menu_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Menu_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Menu_Button (lua_State* tolua_S)
{
 Lua__Fl_Menu_Button* self = (Lua__Fl_Menu_Button*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Multi_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Multi_Browser_new00
static int tolua_fltk_fltk_Fl_Multi_Browser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Multi_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Multi_Browser* tolua_ret = (Fl_Multi_Browser*)  Mtolua_new((Fl_Multi_Browser)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Multi_Browser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Multi_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Multi_Browser_new00_local
static int tolua_fltk_fltk_Fl_Multi_Browser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Multi_Browser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Multi_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Multi_Browser_handle00
static int tolua_fltk_fltk_Fl_Multi_Browser_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Multi_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Multi_Browser* self = (Fl_Multi_Browser*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_77 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_77);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Multi_Browser : public Fl_Multi_Browser, public ToluaBase {
public:
	 int  handle( int tolua_var_77) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Multi_Browser_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_77);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Multi_Browser:: handle(tolua_var_77);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Multi_Browser:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Multi_Browser:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Multi_Browser:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Multi_Browser:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Multi_Browser:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Multi_Browser:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Multi_Browser:: show();
		};
	};

	 int Fl_Multi_Browser__handle( int tolua_var_77) {
		return ( int )Fl_Multi_Browser::handle(tolua_var_77);
	};
	 Fl_Group* Fl_Multi_Browser__as_group( void ) {
		return ( Fl_Group* )Fl_Multi_Browser::as_group();
	};
	 Fl_Window* Fl_Multi_Browser__as_window( void ) {
		return ( Fl_Window* )Fl_Multi_Browser::as_window();
	};
	 void Fl_Multi_Browser__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Multi_Browser::do_callback(o,arg);
	};
	 void Fl_Multi_Browser__draw( void ) {
		Fl_Multi_Browser::draw();
	};
	 void Fl_Multi_Browser__hide( void ) {
		Fl_Multi_Browser::hide();
	};
	 void Fl_Multi_Browser__resize( int x, int y, int w, int h) {
		Fl_Multi_Browser::resize(x,y,w,h);
	};
	 void Fl_Multi_Browser__show( void ) {
		Fl_Multi_Browser::show();
	};
	 Lua__Fl_Multi_Browser( int X, int Y, int W, int H, const char* L = 0): Fl_Multi_Browser(X,Y,W,H,L){};
};

/* method: tolua__set_instance of class  Lua__Fl_Multi_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Multi_Browser_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Multi_Browser_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Multi_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Multi_Browser* self = (Lua__Fl_Multi_Browser*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Multi_Browser__handle of class  Lua__Fl_Multi_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Multi_Browser_Fl_Multi_Browser__handle00
static int tolua_fltk_fltk_Lua__Fl_Multi_Browser_Fl_Multi_Browser__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Multi_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Multi_Browser* self = (Lua__Fl_Multi_Browser*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_77 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Multi_Browser__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Multi_Browser__handle(tolua_var_77);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Multi_Browser__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Multi_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Multi_Browser_new00
static int tolua_fltk_fltk_Lua__Fl_Multi_Browser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Multi_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Multi_Browser* tolua_ret = (Lua__Fl_Multi_Browser*)  Mtolua_new((Lua__Fl_Multi_Browser)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Multi_Browser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Multi_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Multi_Browser_new00_local
static int tolua_fltk_fltk_Lua__Fl_Multi_Browser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Multi_Browser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Multi_Browser (lua_State* tolua_S)
{
 Lua__Fl_Multi_Browser* self = (Lua__Fl_Multi_Browser*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: label of class  Fl_Multi_Label */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Multi_Label_label00
static int tolua_fltk_fltk_Fl_Multi_Label_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Multi_Label",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Multi_Label* self = (Fl_Multi_Label*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* tolua_var_78 = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(tolua_var_78);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Multi_Label */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Multi_Label_label01
static int tolua_fltk_fltk_Fl_Multi_Label_label01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Multi_Label",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Multi_Label* self = (Fl_Multi_Label*)  tolua_tousertype(tolua_S,1,0);
  Fl_Menu_Item* tolua_var_79 = ((Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(tolua_var_79);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Multi_Label_label00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Multiline_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Multiline_Input_new00
static int tolua_fltk_fltk_Fl_Multiline_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Multiline_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Multiline_Input* tolua_ret = (Fl_Multiline_Input*)  Mtolua_new((Fl_Multiline_Input)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Multiline_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Multiline_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Multiline_Input_new00_local
static int tolua_fltk_fltk_Fl_Multiline_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Multiline_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Multiline_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Multiline_Input_handle00
static int tolua_fltk_fltk_Fl_Multiline_Input_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Multiline_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Multiline_Input* self = (Fl_Multiline_Input*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_80 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_80);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Multiline_Input : public Fl_Multiline_Input, public ToluaBase {
public:
	 int  handle( int tolua_var_80) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Multiline_Input_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_80);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Multiline_Input:: handle(tolua_var_80);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Multiline_Input:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Multiline_Input:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Multiline_Input:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Multiline_Input:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Multiline_Input:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Multiline_Input:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Multiline_Input:: show();
		};
	};

	 int Fl_Multiline_Input__handle( int tolua_var_80) {
		return ( int )Fl_Multiline_Input::handle(tolua_var_80);
	};
	 Fl_Group* Fl_Multiline_Input__as_group( void ) {
		return ( Fl_Group* )Fl_Multiline_Input::as_group();
	};
	 Fl_Window* Fl_Multiline_Input__as_window( void ) {
		return ( Fl_Window* )Fl_Multiline_Input::as_window();
	};
	 void Fl_Multiline_Input__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Multiline_Input::do_callback(o,arg);
	};
	 void Fl_Multiline_Input__draw( void ) {
		Fl_Multiline_Input::draw();
	};
	 void Fl_Multiline_Input__hide( void ) {
		Fl_Multiline_Input::hide();
	};
	 void Fl_Multiline_Input__resize( int x, int y, int w, int h) {
		Fl_Multiline_Input::resize(x,y,w,h);
	};
	 void Fl_Multiline_Input__show( void ) {
		Fl_Multiline_Input::show();
	};
	 Lua__Fl_Multiline_Input( int X, int Y, int W, int H, const char* l = 0): Fl_Multiline_Input(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Multiline_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Multiline_Input_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Multiline_Input_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Multiline_Input",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Multiline_Input* self = (Lua__Fl_Multiline_Input*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Multiline_Input__handle of class  Lua__Fl_Multiline_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Multiline_Input_Fl_Multiline_Input__handle00
static int tolua_fltk_fltk_Lua__Fl_Multiline_Input_Fl_Multiline_Input__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Multiline_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Multiline_Input* self = (Lua__Fl_Multiline_Input*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_80 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Multiline_Input__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Multiline_Input__handle(tolua_var_80);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Multiline_Input__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Multiline_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Multiline_Input_new00
static int tolua_fltk_fltk_Lua__Fl_Multiline_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Multiline_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Multiline_Input* tolua_ret = (Lua__Fl_Multiline_Input*)  Mtolua_new((Lua__Fl_Multiline_Input)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Multiline_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Multiline_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Multiline_Input_new00_local
static int tolua_fltk_fltk_Lua__Fl_Multiline_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Multiline_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Multiline_Input (lua_State* tolua_S)
{
 Lua__Fl_Multiline_Input* self = (Lua__Fl_Multiline_Input*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Output_new00
static int tolua_fltk_fltk_Fl_Output_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Output",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Output* tolua_ret = (Fl_Output*)  Mtolua_new((Fl_Output)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Output");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Output_new00_local
static int tolua_fltk_fltk_Fl_Output_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Output_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Multiline_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Multiline_Output_new00
static int tolua_fltk_fltk_Fl_Multiline_Output_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Multiline_Output",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Multiline_Output* tolua_ret = (Fl_Multiline_Output*)  Mtolua_new((Fl_Multiline_Output)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Multiline_Output");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Multiline_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Multiline_Output_new00_local
static int tolua_fltk_fltk_Fl_Multiline_Output_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Multiline_Output_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_new00
static int tolua_fltk_fltk_Fl_PSfile_Device_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_PSfile_Device* tolua_ret = (Fl_PSfile_Device*)  Mtolua_new((Fl_PSfile_Device)());
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_PSfile_Device");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_new00_local
static int tolua_fltk_fltk_Fl_PSfile_Device_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_PSfile_Device_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: end_job of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_end_job00
static int tolua_fltk_fltk_Fl_PSfile_Device_end_job00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end_job'", NULL);
#endif
 {
  self->end_job();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'end_job'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: end_page of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_end_page00
static int tolua_fltk_fltk_Fl_PSfile_Device_end_page00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end_page'", NULL);
#endif
 {
  int tolua_ret = (int)  self->end_page();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'end_page'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: file of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_file00
static int tolua_fltk_fltk_Fl_PSfile_Device_file00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'file'", NULL);
#endif
 {
  FILE* tolua_ret = (FILE*)  self->file();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"FILE");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'file'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: interpolate of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_interpolate00
static int tolua_fltk_fltk_Fl_PSfile_Device_interpolate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'interpolate'", NULL);
#endif
 {
  self->interpolate(i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'interpolate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: interpolate of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_interpolate01
static int tolua_fltk_fltk_Fl_PSfile_Device_interpolate01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'interpolate'", NULL);
#endif
 {
  int tolua_ret = (int)  self->interpolate();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_PSfile_Device_interpolate00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: margins of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_margins00
static int tolua_fltk_fltk_Fl_PSfile_Device_margins00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
  int left = ((int)  tolua_tonumber(tolua_S,2,0));
  int top = ((int)  tolua_tonumber(tolua_S,3,0));
  int right = ((int)  tolua_tonumber(tolua_S,4,0));
  int bottom = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'margins'", NULL);
#endif
 {
  self->margins(&left,&top,&right,&bottom);
 tolua_pushnumber(tolua_S,(lua_Number)left);
 tolua_pushnumber(tolua_S,(lua_Number)top);
 tolua_pushnumber(tolua_S,(lua_Number)right);
 tolua_pushnumber(tolua_S,(lua_Number)bottom);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'margins'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: origin of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_origin00
static int tolua_fltk_fltk_Fl_PSfile_Device_origin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'origin'", NULL);
#endif
 {
  self->origin(x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'origin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: page of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_page00
static int tolua_fltk_fltk_Fl_PSfile_Device_page00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
  double pw = ((double)  tolua_tonumber(tolua_S,2,0));
  double ph = ((double)  tolua_tonumber(tolua_S,3,0));
  int media = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'page'", NULL);
#endif
 {
  self->page(pw,ph,media);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'page'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: page of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_page01
static int tolua_fltk_fltk_Fl_PSfile_Device_page01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
  int format = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'page'", NULL);
#endif
 {
  self->page(format);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_PSfile_Device_page00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: page_policy of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_page_policy00
static int tolua_fltk_fltk_Fl_PSfile_Device_page_policy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
  int p = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'page_policy'", NULL);
#endif
 {
  self->page_policy(p);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'page_policy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: page_policy of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_page_policy01
static int tolua_fltk_fltk_Fl_PSfile_Device_page_policy01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'page_policy'", NULL);
#endif
 {
  int tolua_ret = (int)  self->page_policy();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_PSfile_Device_page_policy00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: printable_rect of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_printable_rect00
static int tolua_fltk_fltk_Fl_PSfile_Device_printable_rect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'printable_rect'", NULL);
#endif
 {
  int tolua_ret = (int)  self->printable_rect(&w,&h);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)w);
 tolua_pushnumber(tolua_S,(lua_Number)h);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'printable_rect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rotate of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_rotate00
static int tolua_fltk_fltk_Fl_PSfile_Device_rotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
  float angle = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rotate'", NULL);
#endif
 {
  self->rotate(angle);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scale of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_scale00
static int tolua_fltk_fltk_Fl_PSfile_Device_scale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
  float scale_x = ((float)  tolua_tonumber(tolua_S,2,0));
  float scale_y = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scale'", NULL);
#endif
 {
  self->scale(scale_x,scale_y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: start_page of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_start_page00
static int tolua_fltk_fltk_Fl_PSfile_Device_start_page00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'start_page'", NULL);
#endif
 {
  int tolua_ret = (int)  self->start_page();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'start_page'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: translate of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_translate00
static int tolua_fltk_fltk_Fl_PSfile_Device_translate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'translate'", NULL);
#endif
 {
  self->translate(x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'translate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: untranslate of class  Fl_PSfile_Device */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PSfile_Device_untranslate00
static int tolua_fltk_fltk_Fl_PSfile_Device_untranslate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_PSfile_Device",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_PSfile_Device* self = (Fl_PSfile_Device*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'untranslate'", NULL);
#endif
 {
  self->untranslate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'untranslate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Pack */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pack_new00
static int tolua_fltk_fltk_Fl_Pack_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Pack",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Pack* tolua_ret = (Fl_Pack*)  Mtolua_new((Fl_Pack)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Pack");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Pack */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pack_new00_local
static int tolua_fltk_fltk_Fl_Pack_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Pack_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: horizontal of class  Fl_Pack */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pack_horizontal00
static int tolua_fltk_fltk_Fl_Pack_horizontal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pack",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Pack* self = (Fl_Pack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'horizontal'", NULL);
#endif
 {
  unsigned char tolua_ret = ( unsigned char)  self->horizontal();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'horizontal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: spacing of class  Fl_Pack */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pack_spacing00
static int tolua_fltk_fltk_Fl_Pack_spacing00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pack",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Pack* self = (Fl_Pack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'spacing'", NULL);
#endif
 {
  int tolua_ret = (int)  self->spacing();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'spacing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: spacing of class  Fl_Pack */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Pack_spacing01
static int tolua_fltk_fltk_Fl_Pack_spacing01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Pack",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Pack* self = (Fl_Pack*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'spacing'", NULL);
#endif
 {
  self->spacing(i);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Pack_spacing00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_new00
static int tolua_fltk_fltk_Fl_Positioner_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Positioner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Positioner* tolua_ret = (Fl_Positioner*)  Mtolua_new((Fl_Positioner)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Positioner");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_new00_local
static int tolua_fltk_fltk_Fl_Positioner_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Positioner_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_handle00
static int tolua_fltk_fltk_Fl_Positioner_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_81 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_81);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_value00
static int tolua_fltk_fltk_Fl_Positioner_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
  double tolua_var_82 = ((double)  tolua_tonumber(tolua_S,2,0));
  double tolua_var_83 = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value(tolua_var_82,tolua_var_83);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: xbounds of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_xbounds00
static int tolua_fltk_fltk_Fl_Positioner_xbounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
  double tolua_var_84 = ((double)  tolua_tonumber(tolua_S,2,0));
  double tolua_var_85 = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'xbounds'", NULL);
#endif
 {
  self->xbounds(tolua_var_84,tolua_var_85);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'xbounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: xmaximum of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_xmaximum00
static int tolua_fltk_fltk_Fl_Positioner_xmaximum00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'xmaximum'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->xmaximum();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->xmaximum(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'xmaximum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: xminimum of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_xminimum00
static int tolua_fltk_fltk_Fl_Positioner_xminimum00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'xminimum'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->xminimum();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->xminimum(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'xminimum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: xstep of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_xstep00
static int tolua_fltk_fltk_Fl_Positioner_xstep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
  double a = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'xstep'", NULL);
#endif
 {
  self->xstep(a);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'xstep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: xvalue of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_xvalue00
static int tolua_fltk_fltk_Fl_Positioner_xvalue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'xvalue'", NULL);
#endif
 {
  double tolua_ret = (double)  self->xvalue();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'xvalue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: xvalue of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_xvalue01
static int tolua_fltk_fltk_Fl_Positioner_xvalue01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
  double tolua_var_86 = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'xvalue'", NULL);
#endif
 {
  int tolua_ret = (int)  self->xvalue(tolua_var_86);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Positioner_xvalue00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ybounds of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_ybounds00
static int tolua_fltk_fltk_Fl_Positioner_ybounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
  double tolua_var_87 = ((double)  tolua_tonumber(tolua_S,2,0));
  double tolua_var_88 = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ybounds'", NULL);
#endif
 {
  self->ybounds(tolua_var_87,tolua_var_88);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ybounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ymaximum of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_ymaximum00
static int tolua_fltk_fltk_Fl_Positioner_ymaximum00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ymaximum'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->ymaximum();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->ymaximum(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ymaximum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: yminimum of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_yminimum00
static int tolua_fltk_fltk_Fl_Positioner_yminimum00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'yminimum'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->yminimum();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->yminimum(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'yminimum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ystep of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_ystep00
static int tolua_fltk_fltk_Fl_Positioner_ystep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
  double a = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ystep'", NULL);
#endif
 {
  self->ystep(a);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ystep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: yvalue of class  Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Positioner_yvalue00
static int tolua_fltk_fltk_Fl_Positioner_yvalue00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Positioner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Positioner* self = (Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'yvalue'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->yvalue();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->yvalue(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'yvalue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Positioner : public Fl_Positioner, public ToluaBase {
public:
	 int  handle( int tolua_var_81) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Positioner_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_81);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Positioner:: handle(tolua_var_81);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Positioner:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Positioner:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Positioner:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Positioner:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Positioner:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Positioner:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Positioner:: show();
		};
	};

	 int Fl_Positioner__handle( int tolua_var_81) {
		return ( int )Fl_Positioner::handle(tolua_var_81);
	};
	 Fl_Group* Fl_Positioner__as_group( void ) {
		return ( Fl_Group* )Fl_Positioner::as_group();
	};
	 Fl_Window* Fl_Positioner__as_window( void ) {
		return ( Fl_Window* )Fl_Positioner::as_window();
	};
	 void Fl_Positioner__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Positioner::do_callback(o,arg);
	};
	 void Fl_Positioner__draw( void ) {
		Fl_Positioner::draw();
	};
	 void Fl_Positioner__hide( void ) {
		Fl_Positioner::hide();
	};
	 void Fl_Positioner__resize( int x, int y, int w, int h) {
		Fl_Positioner::resize(x,y,w,h);
	};
	 void Fl_Positioner__show( void ) {
		Fl_Positioner::show();
	};
	 Lua__Fl_Positioner( int x, int y, int w, int h, const char* l = 0): Fl_Positioner(x,y,w,h,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Positioner_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Positioner_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Positioner",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Positioner* self = (Lua__Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Positioner__handle of class  Lua__Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Positioner_Fl_Positioner__handle00
static int tolua_fltk_fltk_Lua__Fl_Positioner_Fl_Positioner__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Positioner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Positioner* self = (Lua__Fl_Positioner*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_81 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Positioner__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Positioner__handle(tolua_var_81);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Positioner__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Positioner_new00
static int tolua_fltk_fltk_Lua__Fl_Positioner_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Positioner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Positioner* tolua_ret = (Lua__Fl_Positioner*)  Mtolua_new((Lua__Fl_Positioner)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Positioner");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Positioner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Positioner_new00_local
static int tolua_fltk_fltk_Lua__Fl_Positioner_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Positioner_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Positioner (lua_State* tolua_S)
{
 Lua__Fl_Positioner* self = (Lua__Fl_Positioner*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_new00
static int tolua_fltk_fltk_Fl_Preferences_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences::Root root = ((Fl_Preferences::Root) (int)  tolua_tonumber(tolua_S,2,0));
  const char* vendor = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* application = ((const char*)  tolua_tostring(tolua_S,4,0));
 {
  Fl_Preferences* tolua_ret = (Fl_Preferences*)  Mtolua_new((Fl_Preferences)(root,vendor,application));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Preferences");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_new00_local
static int tolua_fltk_fltk_Fl_Preferences_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Preferences_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_new01
static int tolua_fltk_fltk_Fl_Preferences_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* path = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* vendor = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* application = ((const char*)  tolua_tostring(tolua_S,4,0));
 {
  Fl_Preferences* tolua_ret = (Fl_Preferences*)  Mtolua_new((Fl_Preferences)(path,vendor,application));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Preferences");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Preferences_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_new01_local
static int tolua_fltk_fltk_Fl_Preferences_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Preferences_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_new02
static int tolua_fltk_fltk_Fl_Preferences_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Preferences* parent = ((Fl_Preferences*)  tolua_tousertype(tolua_S,2,0));
  const char* group = ((const char*)  tolua_tostring(tolua_S,3,0));
 {
  Fl_Preferences* tolua_ret = (Fl_Preferences*)  Mtolua_new((Fl_Preferences)(parent,group));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Preferences");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Preferences_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_new02_local
static int tolua_fltk_fltk_Fl_Preferences_new02_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Preferences_new02(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_new03
static int tolua_fltk_fltk_Fl_Preferences_new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Preferences* parent = ((Fl_Preferences*)  tolua_tousertype(tolua_S,2,0));
  int groupIndex = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  Fl_Preferences* tolua_ret = (Fl_Preferences*)  Mtolua_new((Fl_Preferences)(parent,groupIndex));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Preferences");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Preferences_new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_new03_local
static int tolua_fltk_fltk_Fl_Preferences_new03_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Preferences_new03(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_new04
static int tolua_fltk_fltk_Fl_Preferences_new04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Fl_Preferences",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const Fl_Preferences* tolua_var_89 = ((const Fl_Preferences*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl_Preferences* tolua_ret = (Fl_Preferences*)  Mtolua_new((Fl_Preferences)(*tolua_var_89));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Preferences");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Preferences_new03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_new04_local
static int tolua_fltk_fltk_Fl_Preferences_new04_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Preferences_new04(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_clear00
static int tolua_fltk_fltk_Fl_Preferences_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  char tolua_ret = (char)  self->clear();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyTo of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_copyTo00
static int tolua_fltk_fltk_Fl_Preferences_copyTo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  class Fl_Tree* tolua_var_90 = ((class Fl_Tree*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyTo'", NULL);
#endif
 {
  char tolua_ret = (char)  self->copyTo(tolua_var_90);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyTo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deleteAllEntries of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_deleteAllEntries00
static int tolua_fltk_fltk_Fl_Preferences_deleteAllEntries00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deleteAllEntries'", NULL);
#endif
 {
  char tolua_ret = (char)  self->deleteAllEntries();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deleteAllEntries'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deleteAllGroups of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_deleteAllGroups00
static int tolua_fltk_fltk_Fl_Preferences_deleteAllGroups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deleteAllGroups'", NULL);
#endif
 {
  char tolua_ret = (char)  self->deleteAllGroups();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deleteAllGroups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deleteEntry of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_deleteEntry00
static int tolua_fltk_fltk_Fl_Preferences_deleteEntry00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* entry = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deleteEntry'", NULL);
#endif
 {
  char tolua_ret = (char)  self->deleteEntry(entry);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deleteEntry'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deleteGroup of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_deleteGroup00
static int tolua_fltk_fltk_Fl_Preferences_deleteGroup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* group = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deleteGroup'", NULL);
#endif
 {
  char tolua_ret = (char)  self->deleteGroup(group);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deleteGroup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: entries of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_entries00
static int tolua_fltk_fltk_Fl_Preferences_entries00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'entries'", NULL);
#endif
 {
  int tolua_ret = (int)  self->entries();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'entries'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: entry of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_entry00
static int tolua_fltk_fltk_Fl_Preferences_entry00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'entry'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->entry(index);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'entry'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: entryExists of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_entryExists00
static int tolua_fltk_fltk_Fl_Preferences_entryExists00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* key = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'entryExists'", NULL);
#endif
 {
  char tolua_ret = (char)  self->entryExists(key);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'entryExists'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: flush of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_flush00
static int tolua_fltk_fltk_Fl_Preferences_flush00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'flush'", NULL);
#endif
 {
  self->flush();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'flush'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_get00
static int tolua_fltk_fltk_Fl_Preferences_get00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* entry = ((const char*)  tolua_tostring(tolua_S,2,0));
  double value = ((double)  tolua_tonumber(tolua_S,3,0));
  double defaultValue = ((double)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get'", NULL);
#endif
 {
  char tolua_ret = (char)  self->get(entry,value,defaultValue);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)value);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_get01
static int tolua_fltk_fltk_Fl_Preferences_get01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* entry = ((const char*)  tolua_tostring(tolua_S,2,0));
  char* value = ((char*)  tolua_tostring(tolua_S,3,0));
  const char* defaultValue = ((const char*)  tolua_tostring(tolua_S,4,0));
  int maxSize = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get'", NULL);
#endif
 {
  char tolua_ret = (char)  self->get(entry,value,defaultValue,maxSize);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Preferences_get00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: get of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_get02
static int tolua_fltk_fltk_Fl_Preferences_get02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* entry = ((const char*)  tolua_tostring(tolua_S,2,0));
  void* value = ((void*)  tolua_touserdata(tolua_S,3,0));
  const void* defaultValue = ((const void*)  tolua_touserdata(tolua_S,4,0));
  int defaultSize = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get'", NULL);
#endif
 {
  char tolua_ret = (char)  self->get(entry,value,defaultValue,defaultSize);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushuserdata(tolua_S,(void*)value);
 }
 }
 return 2;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Preferences_get01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: get of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_get03
static int tolua_fltk_fltk_Fl_Preferences_get03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* entry = ((const char*)  tolua_tostring(tolua_S,2,0));
  void* value = ((void*)  tolua_touserdata(tolua_S,3,0));
  const void* defaultValue = ((const void*)  tolua_touserdata(tolua_S,4,0));
  int defaultSize = ((int)  tolua_tonumber(tolua_S,5,0));
  int maxSize = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get'", NULL);
#endif
 {
  char tolua_ret = (char)  self->get(entry,value,defaultValue,defaultSize,maxSize);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Preferences_get02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUserdataPath of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_getUserdataPath00
static int tolua_fltk_fltk_Fl_Preferences_getUserdataPath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  char* path = ((char*)  tolua_tostring(tolua_S,2,0));
  int pathlen = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUserdataPath'", NULL);
#endif
 {
  char tolua_ret = (char)  self->getUserdataPath(path,pathlen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUserdataPath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: group of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_group00
static int tolua_fltk_fltk_Fl_Preferences_group00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  int num_group = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'group'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->group(num_group);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'group'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: groupExists of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_groupExists00
static int tolua_fltk_fltk_Fl_Preferences_groupExists00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* key = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'groupExists'", NULL);
#endif
 {
  char tolua_ret = (char)  self->groupExists(key);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'groupExists'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: groups of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_groups00
static int tolua_fltk_fltk_Fl_Preferences_groups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'groups'", NULL);
#endif
 {
  int tolua_ret = (int)  self->groups();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'groups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: name of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_name00
static int tolua_fltk_fltk_Fl_Preferences_name00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'name'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->name();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'name'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: newUUID of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_newUUID00
static int tolua_fltk_fltk_Fl_Preferences_newUUID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  char* tolua_ret = (char*)  Fl_Preferences::newUUID();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'newUUID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: path of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_path00
static int tolua_fltk_fltk_Fl_Preferences_path00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'path'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->path();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'path'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_set00
static int tolua_fltk_fltk_Fl_Preferences_set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* entry = ((const char*)  tolua_tostring(tolua_S,2,0));
  double value = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'", NULL);
#endif
 {
  char tolua_ret = (char)  self->set(entry,value);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_set01
static int tolua_fltk_fltk_Fl_Preferences_set01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* entry = ((const char*)  tolua_tostring(tolua_S,2,0));
  double value = ((double)  tolua_tonumber(tolua_S,3,0));
  int precision = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'", NULL);
#endif
 {
  char tolua_ret = (char)  self->set(entry,value,precision);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Preferences_set00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_set02
static int tolua_fltk_fltk_Fl_Preferences_set02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* entry = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* value = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'", NULL);
#endif
 {
  char tolua_ret = (char)  self->set(entry,value);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Preferences_set01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_set03
static int tolua_fltk_fltk_Fl_Preferences_set03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* entry = ((const char*)  tolua_tostring(tolua_S,2,0));
  const void* value = ((const void*)  tolua_touserdata(tolua_S,3,0));
  int size = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'", NULL);
#endif
 {
  char tolua_ret = (char)  self->set(entry,value,size);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Preferences_set02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Preferences */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Preferences_size00
static int tolua_fltk_fltk_Fl_Preferences_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Preferences",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Preferences* self = (Fl_Preferences*)  tolua_tousertype(tolua_S,1,0);
  const char* entry = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
 {
  int tolua_ret = (int)  self->size(entry);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_new00
static int tolua_fltk_fltk_Fl_Printer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Printer* tolua_ret = (Fl_Printer*)  Mtolua_new((Fl_Printer)());
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Printer");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_new00_local
static int tolua_fltk_fltk_Fl_Printer_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Printer_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: end_job of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_end_job00
static int tolua_fltk_fltk_Fl_Printer_end_job00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end_job'", NULL);
#endif
 {
  self->end_job();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'end_job'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: end_page of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_end_page00
static int tolua_fltk_fltk_Fl_Printer_end_page00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end_page'", NULL);
#endif
 {
  int tolua_ret = (int)  self->end_page();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'end_page'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: margins of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_margins00
static int tolua_fltk_fltk_Fl_Printer_margins00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
  int left = ((int)  tolua_tonumber(tolua_S,2,0));
  int top = ((int)  tolua_tonumber(tolua_S,3,0));
  int right = ((int)  tolua_tonumber(tolua_S,4,0));
  int bottom = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'margins'", NULL);
#endif
 {
  self->margins(&left,&top,&right,&bottom);
 tolua_pushnumber(tolua_S,(lua_Number)left);
 tolua_pushnumber(tolua_S,(lua_Number)top);
 tolua_pushnumber(tolua_S,(lua_Number)right);
 tolua_pushnumber(tolua_S,(lua_Number)bottom);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'margins'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: origin of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_origin00
static int tolua_fltk_fltk_Fl_Printer_origin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'origin'", NULL);
#endif
 {
  self->origin(x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'origin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: printable_rect of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_printable_rect00
static int tolua_fltk_fltk_Fl_Printer_printable_rect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'printable_rect'", NULL);
#endif
 {
  int tolua_ret = (int)  self->printable_rect(&w,&h);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)w);
 tolua_pushnumber(tolua_S,(lua_Number)h);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'printable_rect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rotate of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_rotate00
static int tolua_fltk_fltk_Fl_Printer_rotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
  float angle = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rotate'", NULL);
#endif
 {
  self->rotate(angle);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scale of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_scale00
static int tolua_fltk_fltk_Fl_Printer_scale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
  float scale_x = ((float)  tolua_tonumber(tolua_S,2,0));
  float scale_y = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scale'", NULL);
#endif
 {
  self->scale(scale_x,scale_y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: start_job of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_start_job00
static int tolua_fltk_fltk_Fl_Printer_start_job00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
  int pagecount = ((int)  tolua_tonumber(tolua_S,2,0));
  int frompage = ((int)  tolua_tonumber(tolua_S,3,NULL));
  int topage = ((int)  tolua_tonumber(tolua_S,4,NULL));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'start_job'", NULL);
#endif
 {
  int tolua_ret = (int)  self->start_job(pagecount,&frompage,&topage);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)frompage);
 tolua_pushnumber(tolua_S,(lua_Number)topage);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'start_job'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: start_page of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_start_page00
static int tolua_fltk_fltk_Fl_Printer_start_page00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'start_page'", NULL);
#endif
 {
  int tolua_ret = (int)  self->start_page();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'start_page'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: translate of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_translate00
static int tolua_fltk_fltk_Fl_Printer_translate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'translate'", NULL);
#endif
 {
  self->translate(x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'translate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: untranslate of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_untranslate00
static int tolua_fltk_fltk_Fl_Printer_untranslate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'untranslate'", NULL);
#endif
 {
  self->untranslate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'untranslate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ask_for_printer of class  Fl_Printer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Printer_ask_for_printer00
static int tolua_fltk_fltk_Fl_Printer_ask_for_printer00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Printer",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Printer* self = (Fl_Printer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ask_for_printer'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->ask_for_printer();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->ask_for_printer(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ask_for_printer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Progress */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Progress_new00
static int tolua_fltk_fltk_Fl_Progress_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Progress",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Progress* tolua_ret = (Fl_Progress*)  Mtolua_new((Fl_Progress)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Progress");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Progress */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Progress_new00_local
static int tolua_fltk_fltk_Fl_Progress_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Progress_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: maximum of class  Fl_Progress */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Progress_maximum00
static int tolua_fltk_fltk_Fl_Progress_maximum00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Progress",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Progress* self = (Fl_Progress*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'maximum'", NULL);
#endif
 {
 if(nparam < 2) {
  float tolua_ret = (float)  self->maximum();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  float opt = ((float)  tolua_tonumber(tolua_S,2,0));
 self->maximum(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'maximum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: minimum of class  Fl_Progress */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Progress_minimum00
static int tolua_fltk_fltk_Fl_Progress_minimum00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Progress",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Progress* self = (Fl_Progress*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'minimum'", NULL);
#endif
 {
 if(nparam < 2) {
  float tolua_ret = (float)  self->minimum();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  float opt = ((float)  tolua_tonumber(tolua_S,2,0));
 self->minimum(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'minimum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Progress */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Progress_value00
static int tolua_fltk_fltk_Fl_Progress_value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Progress",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Progress* self = (Fl_Progress*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
 if(nparam < 2) {
  float tolua_ret = (float)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  float opt = ((float)  tolua_tonumber(tolua_S,2,0));
 self->value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_RGB_Image_new00
static int tolua_fltk_fltk_Fl_RGB_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned const char bits = ((unsigned const char)  tolua_tonumber(tolua_S,2,0));
  int W = ((int)  tolua_tonumber(tolua_S,3,0));
  int H = ((int)  tolua_tonumber(tolua_S,4,0));
  int D = ((int)  tolua_tonumber(tolua_S,5,3));
  int LD = ((int)  tolua_tonumber(tolua_S,6,0));
 {
  Fl_RGB_Image* tolua_ret = (Fl_RGB_Image*)  Mtolua_new((Fl_RGB_Image)(&bits,W,H,D,LD));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_RGB_Image");
 tolua_pushnumber(tolua_S,(lua_Number)bits);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_RGB_Image_new00_local
static int tolua_fltk_fltk_Fl_RGB_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_RGB_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: color_average of class  Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_RGB_Image_color_average00
static int tolua_fltk_fltk_Fl_RGB_Image_color_average00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_RGB_Image* self = (Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  float i = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'color_average'", NULL);
#endif
 {
  self->color_average(c,i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'color_average'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_RGB_Image_copy00
static int tolua_fltk_fltk_Fl_RGB_Image_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_RGB_Image* self = (Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_RGB_Image_copy01
static int tolua_fltk_fltk_Fl_RGB_Image_copy01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_RGB_Image* self = (Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_RGB_Image_copy00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: desaturate of class  Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_RGB_Image_desaturate00
static int tolua_fltk_fltk_Fl_RGB_Image_desaturate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_RGB_Image* self = (Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'desaturate'", NULL);
#endif
 {
  self->desaturate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'desaturate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_RGB_Image_draw00
static int tolua_fltk_fltk_Fl_RGB_Image_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_RGB_Image* self = (Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_RGB_Image_draw01
static int tolua_fltk_fltk_Fl_RGB_Image_draw01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_RGB_Image* self = (Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_RGB_Image_draw00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_RGB_Image_label00
static int tolua_fltk_fltk_Fl_RGB_Image_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_RGB_Image* self = (Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_RGB_Image_label01
static int tolua_fltk_fltk_Fl_RGB_Image_label01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_RGB_Image* self = (Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  Fl_Menu_Item* m = ((Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(m);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_RGB_Image_label00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: uncache of class  Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_RGB_Image_uncache00
static int tolua_fltk_fltk_Fl_RGB_Image_uncache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_RGB_Image* self = (Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'uncache'", NULL);
#endif
 {
  self->uncache();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'uncache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_RGB_Image : public Fl_RGB_Image, public ToluaBase {
public:
	 void  color_average( unsigned int c, float i) {
		if (push_method("color_average",  tolua_fltk_fltk_Fl_RGB_Image_color_average00)) {
			tolua_pushnumber(lua_state, (lua_Number)c);
			tolua_pushnumber(lua_state, (lua_Number)i);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_RGB_Image:: color_average(c,i);
		};
	};
	 Fl_Image*  copy( int W, int H) {
		if (push_method("copy",  tolua_fltk_fltk_Fl_RGB_Image_copy00)) {
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			ToluaBase::dbcall(lua_state, 3, 1);
			 Fl_Image*  tolua_ret = ( Fl_Image* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Image* ) Fl_RGB_Image:: copy(W,H);
		};
	};
	 void  desaturate( void ) {
		if (push_method("desaturate",  tolua_fltk_fltk_Fl_RGB_Image_desaturate00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_RGB_Image:: desaturate();
		};
	};
	 void  draw( int X, int Y, int W, int H, int cx = 0, int cy = 0) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_RGB_Image_draw00)) {
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			tolua_pushnumber(lua_state, (lua_Number)cx);
			tolua_pushnumber(lua_state, (lua_Number)cy);
			ToluaBase::dbcall(lua_state, 7, 0);
		} else {
			 Fl_RGB_Image:: draw(X,Y,W,H,cx,cy);
		};
	};
	 void  label( Fl_Widget* w) {
		if (push_method("label",  tolua_fltk_fltk_Fl_RGB_Image_label00)) {
			tolua_pushusertype(lua_state, (void*)w, "Fl_Widget");
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_RGB_Image:: label(w);
		};
	};
	 void  label( Fl_Menu_Item* m) {
		if (push_method("label",  tolua_fltk_fltk_Fl_RGB_Image_label01)) {
			tolua_pushusertype(lua_state, (void*)m, "Fl_Menu_Item");
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_RGB_Image:: label(m);
		};
	};
	 void  uncache( void ) {
		if (push_method("uncache",  tolua_fltk_fltk_Fl_RGB_Image_uncache00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_RGB_Image:: uncache();
		};
	};

	 void Fl_RGB_Image__color_average( unsigned int c, float i) {
		Fl_RGB_Image::color_average(c,i);
	};
	 Fl_Image* Fl_RGB_Image__copy( int W, int H) {
		return ( Fl_Image* )Fl_RGB_Image::copy(W,H);
	};
	 void Fl_RGB_Image__desaturate( void ) {
		Fl_RGB_Image::desaturate();
	};
	 void Fl_RGB_Image__draw( int X, int Y, int W, int H, int cx = 0, int cy = 0) {
		Fl_RGB_Image::draw(X,Y,W,H,cx,cy);
	};
	 void Fl_RGB_Image__label( Fl_Widget* w) {
		Fl_RGB_Image::label(w);
	};
	 void Fl_RGB_Image__label( Fl_Menu_Item* m) {
		Fl_RGB_Image::label(m);
	};
	 void Fl_RGB_Image__uncache( void ) {
		Fl_RGB_Image::uncache();
	};
	 Lua__Fl_RGB_Image(unsigned const char* bits, int W, int H, int D = 3, int LD = 0): Fl_RGB_Image(bits,W,H,D,LD){};
};

/* method: tolua__set_instance of class  Lua__Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_RGB_Image_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_RGB_Image_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_RGB_Image* self = (Lua__Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_RGB_Image__color_average of class  Lua__Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__color_average00
static int tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__color_average00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_RGB_Image* self = (Lua__Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  float i = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_RGB_Image__color_average'", NULL);
#endif
 {
  self->Fl_RGB_Image__color_average(c,i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_RGB_Image__color_average'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_RGB_Image__copy of class  Lua__Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__copy00
static int tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_RGB_Image* self = (Lua__Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_RGB_Image__copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->Fl_RGB_Image__copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_RGB_Image__copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_RGB_Image__desaturate of class  Lua__Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__desaturate00
static int tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__desaturate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_RGB_Image* self = (Lua__Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_RGB_Image__desaturate'", NULL);
#endif
 {
  self->Fl_RGB_Image__desaturate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_RGB_Image__desaturate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_RGB_Image__draw of class  Lua__Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__draw00
static int tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_RGB_Image* self = (Lua__Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_RGB_Image__draw'", NULL);
#endif
 {
  self->Fl_RGB_Image__draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_RGB_Image__draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_RGB_Image__label of class  Lua__Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__label00
static int tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_RGB_Image* self = (Lua__Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_RGB_Image__label'", NULL);
#endif
 {
  self->Fl_RGB_Image__label(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_RGB_Image__label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_RGB_Image__label of class  Lua__Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__label01
static int tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__label01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Lua__Fl_RGB_Image* self = (Lua__Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
  Fl_Menu_Item* m = ((Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_RGB_Image__label'", NULL);
#endif
 {
  self->Fl_RGB_Image__label(m);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__label00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_RGB_Image__uncache of class  Lua__Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__uncache00
static int tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__uncache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_RGB_Image* self = (Lua__Fl_RGB_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_RGB_Image__uncache'", NULL);
#endif
 {
  self->Fl_RGB_Image__uncache();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_RGB_Image__uncache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_RGB_Image_new00
static int tolua_fltk_fltk_Lua__Fl_RGB_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_RGB_Image",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned const char* bits = ((unsigned const char*)  tolua_tostring(tolua_S,2,0));
  int W = ((int)  tolua_tonumber(tolua_S,3,0));
  int H = ((int)  tolua_tonumber(tolua_S,4,0));
  int D = ((int)  tolua_tonumber(tolua_S,5,3));
  int LD = ((int)  tolua_tonumber(tolua_S,6,0));
 {
  Lua__Fl_RGB_Image* tolua_ret = (Lua__Fl_RGB_Image*)  Mtolua_new((Lua__Fl_RGB_Image)(bits,W,H,D,LD));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_RGB_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_RGB_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_RGB_Image_new00_local
static int tolua_fltk_fltk_Lua__Fl_RGB_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_RGB_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_RGB_Image (lua_State* tolua_S)
{
 Lua__Fl_RGB_Image* self = (Lua__Fl_RGB_Image*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_BMP_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_BMP_Image_new00
static int tolua_fltk_fltk_Fl_BMP_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_BMP_Image",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  Fl_BMP_Image* tolua_ret = (Fl_BMP_Image*)  Mtolua_new((Fl_BMP_Image)(filename));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_BMP_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_BMP_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_BMP_Image_new00_local
static int tolua_fltk_fltk_Fl_BMP_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_BMP_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Bitmap_new00
static int tolua_fltk_fltk_Fl_Bitmap_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Bitmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned const char bits = ((unsigned const char)  tolua_tonumber(tolua_S,2,0));
  int W = ((int)  tolua_tonumber(tolua_S,3,0));
  int H = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Fl_Bitmap* tolua_ret = (Fl_Bitmap*)  Mtolua_new((Fl_Bitmap)(&bits,W,H));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Bitmap");
 tolua_pushnumber(tolua_S,(lua_Number)bits);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Bitmap_new00_local
static int tolua_fltk_fltk_Fl_Bitmap_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Bitmap_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Bitmap_new01
static int tolua_fltk_fltk_Fl_Bitmap_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Bitmap",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* bits = ((const char*)  tolua_tostring(tolua_S,2,0));
  int W = ((int)  tolua_tonumber(tolua_S,3,0));
  int H = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Fl_Bitmap* tolua_ret = (Fl_Bitmap*)  Mtolua_new((Fl_Bitmap)(bits,W,H));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Bitmap");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Bitmap_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Bitmap_new01_local
static int tolua_fltk_fltk_Fl_Bitmap_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Bitmap_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Bitmap_copy00
static int tolua_fltk_fltk_Fl_Bitmap_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Bitmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Bitmap* self = (Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Bitmap_copy01
static int tolua_fltk_fltk_Fl_Bitmap_copy01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Bitmap",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Bitmap* self = (Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Bitmap_copy00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Bitmap_draw00
static int tolua_fltk_fltk_Fl_Bitmap_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Bitmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Bitmap* self = (Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Bitmap_draw01
static int tolua_fltk_fltk_Fl_Bitmap_draw01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Bitmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Bitmap* self = (Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Bitmap_draw00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Bitmap_label00
static int tolua_fltk_fltk_Fl_Bitmap_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Bitmap",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Bitmap* self = (Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Bitmap_label01
static int tolua_fltk_fltk_Fl_Bitmap_label01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Bitmap",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Bitmap* self = (Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
  Fl_Menu_Item* m = ((Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
  self->label(m);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Bitmap_label00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: uncache of class  Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Bitmap_uncache00
static int tolua_fltk_fltk_Fl_Bitmap_uncache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Bitmap",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Bitmap* self = (Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'uncache'", NULL);
#endif
 {
  self->uncache();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'uncache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Bitmap : public Fl_Bitmap, public ToluaBase {
public:
	 Fl_Image*  copy( int W, int H) {
		if (push_method("copy",  tolua_fltk_fltk_Fl_Bitmap_copy00)) {
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			ToluaBase::dbcall(lua_state, 3, 1);
			 Fl_Image*  tolua_ret = ( Fl_Image* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Image* ) Fl_Bitmap:: copy(W,H);
		};
	};
	 void  draw( int X, int Y, int W, int H, int cx = 0, int cy = 0) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Bitmap_draw00)) {
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			tolua_pushnumber(lua_state, (lua_Number)cx);
			tolua_pushnumber(lua_state, (lua_Number)cy);
			ToluaBase::dbcall(lua_state, 7, 0);
		} else {
			 Fl_Bitmap:: draw(X,Y,W,H,cx,cy);
		};
	};
	 void  label( Fl_Widget* w) {
		if (push_method("label",  tolua_fltk_fltk_Fl_Bitmap_label00)) {
			tolua_pushusertype(lua_state, (void*)w, "Fl_Widget");
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Bitmap:: label(w);
		};
	};
	 void  label( Fl_Menu_Item* m) {
		if (push_method("label",  tolua_fltk_fltk_Fl_Bitmap_label01)) {
			tolua_pushusertype(lua_state, (void*)m, "Fl_Menu_Item");
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Bitmap:: label(m);
		};
	};
	 void  uncache( void ) {
		if (push_method("uncache",  tolua_fltk_fltk_Fl_Bitmap_uncache00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Bitmap:: uncache();
		};
	};
	 void  color_average( unsigned int c, float i) {
		if (push_method("color_average",  tolua_fltk_fltk_Fl_Image_color_average00)) {
			tolua_pushnumber(lua_state, (lua_Number)c);
			tolua_pushnumber(lua_state, (lua_Number)i);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Bitmap:: color_average(c,i);
		};
	};
	 void  desaturate( void ) {
		if (push_method("desaturate",  tolua_fltk_fltk_Fl_Image_desaturate00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Bitmap:: desaturate();
		};
	};

	 Fl_Image* Fl_Bitmap__copy( int W, int H) {
		return ( Fl_Image* )Fl_Bitmap::copy(W,H);
	};
	 void Fl_Bitmap__draw( int X, int Y, int W, int H, int cx = 0, int cy = 0) {
		Fl_Bitmap::draw(X,Y,W,H,cx,cy);
	};
	 void Fl_Bitmap__label( Fl_Widget* w) {
		Fl_Bitmap::label(w);
	};
	 void Fl_Bitmap__label( Fl_Menu_Item* m) {
		Fl_Bitmap::label(m);
	};
	 void Fl_Bitmap__uncache( void ) {
		Fl_Bitmap::uncache();
	};
	 void Fl_Bitmap__color_average( unsigned int c, float i) {
		Fl_Bitmap::color_average(c,i);
	};
	 void Fl_Bitmap__desaturate( void ) {
		Fl_Bitmap::desaturate();
	};
	 Lua__Fl_Bitmap(unsigned const char* bits, int W, int H): Fl_Bitmap(bits,W,H){};
	 Lua__Fl_Bitmap( const char* bits, int W, int H): Fl_Bitmap(bits,W,H){};
};

/* method: tolua__set_instance of class  Lua__Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Bitmap_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Bitmap_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Bitmap",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Bitmap* self = (Lua__Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Bitmap__copy of class  Lua__Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__copy00
static int tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Bitmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Bitmap* self = (Lua__Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Bitmap__copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->Fl_Bitmap__copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Bitmap__copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Bitmap__draw of class  Lua__Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__draw00
static int tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Bitmap",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Bitmap* self = (Lua__Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Bitmap__draw'", NULL);
#endif
 {
  self->Fl_Bitmap__draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Bitmap__draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Bitmap__label of class  Lua__Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__label00
static int tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Bitmap",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Bitmap* self = (Lua__Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Bitmap__label'", NULL);
#endif
 {
  self->Fl_Bitmap__label(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Bitmap__label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Bitmap__label of class  Lua__Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__label01
static int tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__label01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Bitmap",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Lua__Fl_Bitmap* self = (Lua__Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
  Fl_Menu_Item* m = ((Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Bitmap__label'", NULL);
#endif
 {
  self->Fl_Bitmap__label(m);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__label00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Bitmap__uncache of class  Lua__Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__uncache00
static int tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__uncache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Bitmap",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Bitmap* self = (Lua__Fl_Bitmap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Bitmap__uncache'", NULL);
#endif
 {
  self->Fl_Bitmap__uncache();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Bitmap__uncache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Bitmap_new00
static int tolua_fltk_fltk_Lua__Fl_Bitmap_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Bitmap",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned const char* bits = ((unsigned const char*)  tolua_tostring(tolua_S,2,0));
  int W = ((int)  tolua_tonumber(tolua_S,3,0));
  int H = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Lua__Fl_Bitmap* tolua_ret = (Lua__Fl_Bitmap*)  Mtolua_new((Lua__Fl_Bitmap)(bits,W,H));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Bitmap");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Bitmap_new00_local
static int tolua_fltk_fltk_Lua__Fl_Bitmap_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Bitmap_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Bitmap_new01
static int tolua_fltk_fltk_Lua__Fl_Bitmap_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Bitmap",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* bits = ((const char*)  tolua_tostring(tolua_S,2,0));
  int W = ((int)  tolua_tonumber(tolua_S,3,0));
  int H = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Lua__Fl_Bitmap* tolua_ret = (Lua__Fl_Bitmap*)  Mtolua_new((Lua__Fl_Bitmap)(bits,W,H));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Bitmap");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Lua__Fl_Bitmap_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Bitmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Bitmap_new01_local
static int tolua_fltk_fltk_Lua__Fl_Bitmap_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Bitmap_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Bitmap (lua_State* tolua_S)
{
 Lua__Fl_Bitmap* self = (Lua__Fl_Bitmap*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_JPEG_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_JPEG_Image_new00
static int tolua_fltk_fltk_Fl_JPEG_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_JPEG_Image",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  Fl_JPEG_Image* tolua_ret = (Fl_JPEG_Image*)  Mtolua_new((Fl_JPEG_Image)(filename));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_JPEG_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_JPEG_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_JPEG_Image_new00_local
static int tolua_fltk_fltk_Fl_JPEG_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_JPEG_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_JPEG_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_JPEG_Image_new01
static int tolua_fltk_fltk_Fl_JPEG_Image_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_JPEG_Image",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
  unsigned const char* data = ((unsigned const char*)  tolua_tostring(tolua_S,3,0));
 {
  Fl_JPEG_Image* tolua_ret = (Fl_JPEG_Image*)  Mtolua_new((Fl_JPEG_Image)(name,data));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_JPEG_Image");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_JPEG_Image_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_JPEG_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_JPEG_Image_new01_local
static int tolua_fltk_fltk_Fl_JPEG_Image_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_JPEG_Image_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Radio_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Radio_Button_new00
static int tolua_fltk_fltk_Fl_Radio_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Radio_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Radio_Button* tolua_ret = (Fl_Radio_Button*)  Mtolua_new((Fl_Radio_Button)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Radio_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Radio_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Radio_Button_new00_local
static int tolua_fltk_fltk_Fl_Radio_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Radio_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Radio_Light_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Radio_Light_Button_new00
static int tolua_fltk_fltk_Fl_Radio_Light_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Radio_Light_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Radio_Light_Button* tolua_ret = (Fl_Radio_Light_Button*)  Mtolua_new((Fl_Radio_Light_Button)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Radio_Light_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Radio_Light_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Radio_Light_Button_new00_local
static int tolua_fltk_fltk_Fl_Radio_Light_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Radio_Light_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Repeat_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Repeat_Button_new00
static int tolua_fltk_fltk_Fl_Repeat_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Repeat_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Repeat_Button* tolua_ret = (Fl_Repeat_Button*)  Mtolua_new((Fl_Repeat_Button)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Repeat_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Repeat_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Repeat_Button_new00_local
static int tolua_fltk_fltk_Fl_Repeat_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Repeat_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: deactivate of class  Fl_Repeat_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Repeat_Button_deactivate00
static int tolua_fltk_fltk_Fl_Repeat_Button_deactivate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Repeat_Button",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Repeat_Button* self = (Fl_Repeat_Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deactivate'", NULL);
#endif
 {
  self->deactivate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deactivate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Repeat_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Repeat_Button_handle00
static int tolua_fltk_fltk_Fl_Repeat_Button_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Repeat_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Repeat_Button* self = (Fl_Repeat_Button*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_91 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_91);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Return_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Return_Button_new00
static int tolua_fltk_fltk_Fl_Return_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Return_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Return_Button* tolua_ret = (Fl_Return_Button*)  Mtolua_new((Fl_Return_Button)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Return_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Return_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Return_Button_new00_local
static int tolua_fltk_fltk_Fl_Return_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Return_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Return_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Return_Button_handle00
static int tolua_fltk_fltk_Fl_Return_Button_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Return_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Return_Button* self = (Fl_Return_Button*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_92 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_92);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Round_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Round_Button_new00
static int tolua_fltk_fltk_Fl_Round_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Round_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Round_Button* tolua_ret = (Fl_Round_Button*)  Mtolua_new((Fl_Round_Button)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Round_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Round_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Round_Button_new00_local
static int tolua_fltk_fltk_Fl_Round_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Round_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Radio_Round_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Radio_Round_Button_new00
static int tolua_fltk_fltk_Fl_Radio_Round_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Radio_Round_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Radio_Round_Button* tolua_ret = (Fl_Radio_Round_Button*)  Mtolua_new((Fl_Radio_Round_Button)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Radio_Round_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Radio_Round_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Radio_Round_Button_new00_local
static int tolua_fltk_fltk_Fl_Radio_Round_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Radio_Round_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Round_Clock */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Round_Clock_new00
static int tolua_fltk_fltk_Fl_Round_Clock_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Round_Clock",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Round_Clock* tolua_ret = (Fl_Round_Clock*)  Mtolua_new((Fl_Round_Clock)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Round_Clock");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Round_Clock */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Round_Clock_new00_local
static int tolua_fltk_fltk_Fl_Round_Clock_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Round_Clock_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scroll_new00
static int tolua_fltk_fltk_Fl_Scroll_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Scroll",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Scroll* tolua_ret = (Fl_Scroll*)  Mtolua_new((Fl_Scroll)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Scroll");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scroll_new00_local
static int tolua_fltk_fltk_Fl_Scroll_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Scroll_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scroll_clear00
static int tolua_fltk_fltk_Fl_Scroll_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scroll",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Scroll* self = (Fl_Scroll*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scroll_handle00
static int tolua_fltk_fltk_Fl_Scroll_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scroll",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Scroll* self = (Fl_Scroll*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_93 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_93);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scroll_resize00
static int tolua_fltk_fltk_Fl_Scroll_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scroll",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Scroll* self = (Fl_Scroll*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_94 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_95 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_96 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_97 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(tolua_var_94,tolua_var_95,tolua_var_96,tolua_var_97);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scroll_to of class  Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scroll_scroll_to00
static int tolua_fltk_fltk_Fl_Scroll_scroll_to00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scroll",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Scroll* self = (Fl_Scroll*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_98 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_99 = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scroll_to'", NULL);
#endif
 {
  self->scroll_to(tolua_var_98,tolua_var_99);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scroll_to'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollbar_size of class  Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scroll_scrollbar_size00
static int tolua_fltk_fltk_Fl_Scroll_scrollbar_size00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scroll",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Scroll* self = (Fl_Scroll*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollbar_size'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->scrollbar_size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->scrollbar_size(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollbar_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: xposition of class  Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scroll_xposition00
static int tolua_fltk_fltk_Fl_Scroll_xposition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scroll",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Scroll* self = (Fl_Scroll*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'xposition'", NULL);
#endif
 {
  int tolua_ret = (int)  self->xposition();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'xposition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: yposition of class  Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scroll_yposition00
static int tolua_fltk_fltk_Fl_Scroll_yposition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scroll",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Scroll* self = (Fl_Scroll*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'yposition'", NULL);
#endif
 {
  int tolua_ret = (int)  self->yposition();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'yposition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Scroll : public Fl_Scroll, public ToluaBase {
public:
	 int  handle( int tolua_var_93) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Scroll_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_93);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Scroll:: handle(tolua_var_93);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Scroll:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Scroll:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Scroll:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Scroll:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Scroll:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Scroll:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Scroll:: show();
		};
	};

	 int Fl_Scroll__handle( int tolua_var_93) {
		return ( int )Fl_Scroll::handle(tolua_var_93);
	};
	 Fl_Group* Fl_Scroll__as_group( void ) {
		return ( Fl_Group* )Fl_Scroll::as_group();
	};
	 Fl_Window* Fl_Scroll__as_window( void ) {
		return ( Fl_Window* )Fl_Scroll::as_window();
	};
	 void Fl_Scroll__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Scroll::do_callback(o,arg);
	};
	 void Fl_Scroll__draw( void ) {
		Fl_Scroll::draw();
	};
	 void Fl_Scroll__hide( void ) {
		Fl_Scroll::hide();
	};
	 void Fl_Scroll__resize( int x, int y, int w, int h) {
		Fl_Scroll::resize(x,y,w,h);
	};
	 void Fl_Scroll__show( void ) {
		Fl_Scroll::show();
	};
	 Lua__Fl_Scroll( int X, int Y, int W, int H, const char* l = 0): Fl_Scroll(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Scroll_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Scroll_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Scroll",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Scroll* self = (Lua__Fl_Scroll*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Scroll__handle of class  Lua__Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Scroll_Fl_Scroll__handle00
static int tolua_fltk_fltk_Lua__Fl_Scroll_Fl_Scroll__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Scroll",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Scroll* self = (Lua__Fl_Scroll*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_93 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Scroll__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Scroll__handle(tolua_var_93);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Scroll__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Scroll_new00
static int tolua_fltk_fltk_Lua__Fl_Scroll_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Scroll",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Scroll* tolua_ret = (Lua__Fl_Scroll*)  Mtolua_new((Lua__Fl_Scroll)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Scroll");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Scroll */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Scroll_new00_local
static int tolua_fltk_fltk_Lua__Fl_Scroll_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Scroll_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Scroll (lua_State* tolua_S)
{
 Lua__Fl_Scroll* self = (Lua__Fl_Scroll*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Secret_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Secret_Input_new00
static int tolua_fltk_fltk_Fl_Secret_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Secret_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Secret_Input* tolua_ret = (Fl_Secret_Input*)  Mtolua_new((Fl_Secret_Input)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Secret_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Secret_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Secret_Input_new00_local
static int tolua_fltk_fltk_Fl_Secret_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Secret_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Select_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Select_Browser_new00
static int tolua_fltk_fltk_Fl_Select_Browser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Select_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Select_Browser* tolua_ret = (Fl_Select_Browser*)  Mtolua_new((Fl_Select_Browser)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Select_Browser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Select_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Select_Browser_new00_local
static int tolua_fltk_fltk_Fl_Select_Browser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Select_Browser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Select_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Select_Browser_handle00
static int tolua_fltk_fltk_Fl_Select_Browser_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Select_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Select_Browser* self = (Fl_Select_Browser*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_100 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_100);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Select_Browser : public Fl_Select_Browser, public ToluaBase {
public:
	 int  handle( int tolua_var_100) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Select_Browser_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_100);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Select_Browser:: handle(tolua_var_100);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Select_Browser:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Select_Browser:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Select_Browser:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Select_Browser:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Select_Browser:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Select_Browser:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Select_Browser:: show();
		};
	};

	 int Fl_Select_Browser__handle( int tolua_var_100) {
		return ( int )Fl_Select_Browser::handle(tolua_var_100);
	};
	 Fl_Group* Fl_Select_Browser__as_group( void ) {
		return ( Fl_Group* )Fl_Select_Browser::as_group();
	};
	 Fl_Window* Fl_Select_Browser__as_window( void ) {
		return ( Fl_Window* )Fl_Select_Browser::as_window();
	};
	 void Fl_Select_Browser__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Select_Browser::do_callback(o,arg);
	};
	 void Fl_Select_Browser__draw( void ) {
		Fl_Select_Browser::draw();
	};
	 void Fl_Select_Browser__hide( void ) {
		Fl_Select_Browser::hide();
	};
	 void Fl_Select_Browser__resize( int x, int y, int w, int h) {
		Fl_Select_Browser::resize(x,y,w,h);
	};
	 void Fl_Select_Browser__show( void ) {
		Fl_Select_Browser::show();
	};
	 Lua__Fl_Select_Browser( int X, int Y, int W, int H, const char* l = 0): Fl_Select_Browser(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Select_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Select_Browser_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Select_Browser_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Select_Browser",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Select_Browser* self = (Lua__Fl_Select_Browser*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Select_Browser__handle of class  Lua__Fl_Select_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Select_Browser_Fl_Select_Browser__handle00
static int tolua_fltk_fltk_Lua__Fl_Select_Browser_Fl_Select_Browser__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Select_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Select_Browser* self = (Lua__Fl_Select_Browser*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_100 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Select_Browser__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Select_Browser__handle(tolua_var_100);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Select_Browser__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Select_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Select_Browser_new00
static int tolua_fltk_fltk_Lua__Fl_Select_Browser_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Select_Browser",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Select_Browser* tolua_ret = (Lua__Fl_Select_Browser*)  Mtolua_new((Lua__Fl_Select_Browser)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Select_Browser");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Select_Browser */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Select_Browser_new00_local
static int tolua_fltk_fltk_Lua__Fl_Select_Browser_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Select_Browser_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Select_Browser (lua_State* tolua_S)
{
 Lua__Fl_Select_Browser* self = (Lua__Fl_Select_Browser*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: add_handler of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_add_handler00
static int tolua_fltk_fltk_Fl_Shared_Image_add_handler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Shared_Handler",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Shared_Handler f = *((Fl_Shared_Handler*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl_Shared_Image::add_handler(f);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_handler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: color_average of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_color_average00
static int tolua_fltk_fltk_Fl_Shared_Image_color_average00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Shared_Image* self = (Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  float i = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'color_average'", NULL);
#endif
 {
  self->color_average(c,i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'color_average'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_copy00
static int tolua_fltk_fltk_Fl_Shared_Image_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Shared_Image* self = (Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_copy01
static int tolua_fltk_fltk_Fl_Shared_Image_copy01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Shared_Image* self = (Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Shared_Image_copy00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: desaturate of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_desaturate00
static int tolua_fltk_fltk_Fl_Shared_Image_desaturate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Shared_Image* self = (Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'desaturate'", NULL);
#endif
 {
  self->desaturate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'desaturate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_draw00
static int tolua_fltk_fltk_Fl_Shared_Image_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Shared_Image* self = (Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_draw01
static int tolua_fltk_fltk_Fl_Shared_Image_draw01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Shared_Image* self = (Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Shared_Image_draw00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: find of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_find00
static int tolua_fltk_fltk_Fl_Shared_Image_find00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* n = ((const char*)  tolua_tostring(tolua_S,2,0));
  int W = ((int)  tolua_tonumber(tolua_S,3,0));
  int H = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Fl_Shared_Image* tolua_ret = (Fl_Shared_Image*)  Fl_Shared_Image::find(n,W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Shared_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_get00
static int tolua_fltk_fltk_Fl_Shared_Image_get00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* n = ((const char*)  tolua_tostring(tolua_S,2,0));
  int W = ((int)  tolua_tonumber(tolua_S,3,0));
  int H = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Fl_Shared_Image* tolua_ret = (Fl_Shared_Image*)  Fl_Shared_Image::get(n,W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Shared_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: name of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_name00
static int tolua_fltk_fltk_Fl_Shared_Image_name00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Shared_Image* self = (Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'name'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->name();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'name'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: num_images of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_num_images00
static int tolua_fltk_fltk_Fl_Shared_Image_num_images00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl_Shared_Image::num_images();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'num_images'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: refcount of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_refcount00
static int tolua_fltk_fltk_Fl_Shared_Image_refcount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Shared_Image* self = (Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'refcount'", NULL);
#endif
 {
  int tolua_ret = (int)  self->refcount();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'refcount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: release of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_release00
static int tolua_fltk_fltk_Fl_Shared_Image_release00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Shared_Image* self = (Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'release'", NULL);
#endif
 {
  self->release();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'release'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reload of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_reload00
static int tolua_fltk_fltk_Fl_Shared_Image_reload00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Shared_Image* self = (Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reload'", NULL);
#endif
 {
  self->reload();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reload'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_handler of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_remove_handler00
static int tolua_fltk_fltk_Fl_Shared_Image_remove_handler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Shared_Handler",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Shared_Handler f = *((Fl_Shared_Handler*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl_Shared_Image::remove_handler(f);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_handler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: uncache of class  Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Shared_Image_uncache00
static int tolua_fltk_fltk_Fl_Shared_Image_uncache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Shared_Image* self = (Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'uncache'", NULL);
#endif
 {
  self->uncache();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'uncache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Shared_Image : public Fl_Shared_Image, public ToluaBase {
public:
	 void  color_average( unsigned int c, float i) {
		if (push_method("color_average",  tolua_fltk_fltk_Fl_Shared_Image_color_average00)) {
			tolua_pushnumber(lua_state, (lua_Number)c);
			tolua_pushnumber(lua_state, (lua_Number)i);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Shared_Image:: color_average(c,i);
		};
	};
	 Fl_Image*  copy( int W, int H) {
		if (push_method("copy",  tolua_fltk_fltk_Fl_Shared_Image_copy00)) {
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			ToluaBase::dbcall(lua_state, 3, 1);
			 Fl_Image*  tolua_ret = ( Fl_Image* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Image* ) Fl_Shared_Image:: copy(W,H);
		};
	};
	 void  desaturate( void ) {
		if (push_method("desaturate",  tolua_fltk_fltk_Fl_Shared_Image_desaturate00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Shared_Image:: desaturate();
		};
	};
	 void  draw( int X, int Y, int W, int H, int cx, int cy) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Shared_Image_draw00)) {
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			tolua_pushnumber(lua_state, (lua_Number)cx);
			tolua_pushnumber(lua_state, (lua_Number)cy);
			ToluaBase::dbcall(lua_state, 7, 0);
		} else {
			 Fl_Shared_Image:: draw(X,Y,W,H,cx,cy);
		};
	};
	 void  uncache( void ) {
		if (push_method("uncache",  tolua_fltk_fltk_Fl_Shared_Image_uncache00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Shared_Image:: uncache();
		};
	};
	 void  label( Fl_Widget* w) {
		if (push_method("label",  tolua_fltk_fltk_Fl_Image_label00)) {
			tolua_pushusertype(lua_state, (void*)w, "Fl_Widget");
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Shared_Image:: label(w);
		};
	};

	 void Fl_Shared_Image__color_average( unsigned int c, float i) {
		Fl_Shared_Image::color_average(c,i);
	};
	 Fl_Image* Fl_Shared_Image__copy( int W, int H) {
		return ( Fl_Image* )Fl_Shared_Image::copy(W,H);
	};
	 void Fl_Shared_Image__desaturate( void ) {
		Fl_Shared_Image::desaturate();
	};
	 void Fl_Shared_Image__draw( int X, int Y, int W, int H, int cx, int cy) {
		Fl_Shared_Image::draw(X,Y,W,H,cx,cy);
	};
	 void Fl_Shared_Image__uncache( void ) {
		Fl_Shared_Image::uncache();
	};
	 void Fl_Shared_Image__label( Fl_Widget* w) {
		Fl_Shared_Image::label(w);
	};
};

/* method: tolua__set_instance of class  Lua__Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Shared_Image_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Shared_Image_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Shared_Image* self = (Lua__Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Shared_Image__color_average of class  Lua__Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__color_average00
static int tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__color_average00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Shared_Image* self = (Lua__Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  float i = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Shared_Image__color_average'", NULL);
#endif
 {
  self->Fl_Shared_Image__color_average(c,i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Shared_Image__color_average'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Shared_Image__copy of class  Lua__Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__copy00
static int tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Shared_Image* self = (Lua__Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Shared_Image__copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->Fl_Shared_Image__copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Shared_Image__copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Shared_Image__desaturate of class  Lua__Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__desaturate00
static int tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__desaturate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Shared_Image* self = (Lua__Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Shared_Image__desaturate'", NULL);
#endif
 {
  self->Fl_Shared_Image__desaturate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Shared_Image__desaturate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Shared_Image__draw of class  Lua__Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__draw00
static int tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Shared_Image* self = (Lua__Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Shared_Image__draw'", NULL);
#endif
 {
  self->Fl_Shared_Image__draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Shared_Image__draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Shared_Image__uncache of class  Lua__Fl_Shared_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__uncache00
static int tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__uncache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Shared_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Shared_Image* self = (Lua__Fl_Shared_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Shared_Image__uncache'", NULL);
#endif
 {
  self->Fl_Shared_Image__uncache();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Shared_Image__uncache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_register_images */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_register_images00
static int tolua_fltk_fltk_fl_register_images00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_register_images();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_register_images'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Simple_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Simple_Counter_new00
static int tolua_fltk_fltk_Fl_Simple_Counter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Simple_Counter",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Simple_Counter* tolua_ret = (Fl_Simple_Counter*)  Mtolua_new((Fl_Simple_Counter)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Simple_Counter");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Simple_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Simple_Counter_new00_local
static int tolua_fltk_fltk_Fl_Simple_Counter_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Simple_Counter_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_new00
static int tolua_fltk_fltk_Fl_Spinner_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Spinner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Spinner* tolua_ret = (Fl_Spinner*)  Mtolua_new((Fl_Spinner)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Spinner");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_new00_local
static int tolua_fltk_fltk_Fl_Spinner_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Spinner_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: format of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_format00
static int tolua_fltk_fltk_Fl_Spinner_format00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'format'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->format();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->format(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'format'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_handle00
static int tolua_fltk_fltk_Fl_Spinner_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: maximum of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_maximum00
static int tolua_fltk_fltk_Fl_Spinner_maximum00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'maximum'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->maximum();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->maximum(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'maximum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: minimum of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_minimum00
static int tolua_fltk_fltk_Fl_Spinner_minimum00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'minimum'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->minimum();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->minimum(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'minimum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: range of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_range00
static int tolua_fltk_fltk_Fl_Spinner_range00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
  double a = ((double)  tolua_tonumber(tolua_S,2,0));
  double b = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'range'", NULL);
#endif
 {
  self->range(a,b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'range'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_resize00
static int tolua_fltk_fltk_Fl_Spinner_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(X,Y,W,H);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_step00
static int tolua_fltk_fltk_Fl_Spinner_step00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->step();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->step(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_textcolor00
static int tolua_fltk_fltk_Fl_Spinner_textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_textfont00
static int tolua_fltk_fltk_Fl_Spinner_textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_textsize00
static int tolua_fltk_fltk_Fl_Spinner_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: type of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_type00
static int tolua_fltk_fltk_Fl_Spinner_type00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'type'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned char tolua_ret = ( unsigned char)  self->type();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned char opt = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
 self->type(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'type'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Spinner_value00
static int tolua_fltk_fltk_Fl_Spinner_value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Spinner",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Spinner* self = (Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Spinner : public Fl_Spinner, public ToluaBase {
public:
	 int  handle( int event) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Spinner_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)event);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Spinner:: handle(event);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Spinner:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Spinner:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Spinner:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Spinner:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Spinner:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Spinner:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Spinner:: show();
		};
	};

	 int Fl_Spinner__handle( int event) {
		return ( int )Fl_Spinner::handle(event);
	};
	 Fl_Group* Fl_Spinner__as_group( void ) {
		return ( Fl_Group* )Fl_Spinner::as_group();
	};
	 Fl_Window* Fl_Spinner__as_window( void ) {
		return ( Fl_Window* )Fl_Spinner::as_window();
	};
	 void Fl_Spinner__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Spinner::do_callback(o,arg);
	};
	 void Fl_Spinner__draw( void ) {
		Fl_Spinner::draw();
	};
	 void Fl_Spinner__hide( void ) {
		Fl_Spinner::hide();
	};
	 void Fl_Spinner__resize( int x, int y, int w, int h) {
		Fl_Spinner::resize(x,y,w,h);
	};
	 void Fl_Spinner__show( void ) {
		Fl_Spinner::show();
	};
	 Lua__Fl_Spinner( int X, int Y, int W, int H, const char* L = 0): Fl_Spinner(X,Y,W,H,L){};
};

/* method: tolua__set_instance of class  Lua__Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Spinner_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Spinner_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Spinner",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Spinner* self = (Lua__Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Spinner__handle of class  Lua__Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Spinner_Fl_Spinner__handle00
static int tolua_fltk_fltk_Lua__Fl_Spinner_Fl_Spinner__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Spinner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Spinner* self = (Lua__Fl_Spinner*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Spinner__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Spinner__handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Spinner__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Spinner_new00
static int tolua_fltk_fltk_Lua__Fl_Spinner_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Spinner",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Spinner* tolua_ret = (Lua__Fl_Spinner*)  Mtolua_new((Lua__Fl_Spinner)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Spinner");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Spinner */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Spinner_new00_local
static int tolua_fltk_fltk_Lua__Fl_Spinner_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Spinner_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Spinner (lua_State* tolua_S)
{
 Lua__Fl_Spinner* self = (Lua__Fl_Spinner*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Sys_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Sys_Menu_Bar_new00
static int tolua_fltk_fltk_Fl_Sys_Menu_Bar_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Sys_Menu_Bar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Sys_Menu_Bar* tolua_ret = (Fl_Sys_Menu_Bar*)  Mtolua_new((Fl_Sys_Menu_Bar)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Sys_Menu_Bar");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Sys_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Sys_Menu_Bar_new00_local
static int tolua_fltk_fltk_Fl_Sys_Menu_Bar_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Sys_Menu_Bar_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Sys_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Sys_Menu_Bar_add00
static int tolua_fltk_fltk_Fl_Sys_Menu_Bar_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Sys_Menu_Bar",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,4,"Fl_Callback",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,5,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Sys_Menu_Bar* self = (Fl_Sys_Menu_Bar*)  tolua_tousertype(tolua_S,1,0);
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
  int shortcut = ((int)  tolua_tonumber(tolua_S,3,0));
  Fl_Callback* tolua_var_101 = ((Fl_Callback*)  tolua_tousertype(tolua_S,4,0));
  void* user_data = ((void*)  tolua_touserdata(tolua_S,5,0));
  int flags = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  int tolua_ret = (int)  self->add(label,shortcut,tolua_var_101,user_data,flags);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Sys_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Sys_Menu_Bar_clear00
static int tolua_fltk_fltk_Fl_Sys_Menu_Bar_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Sys_Menu_Bar",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Sys_Menu_Bar* self = (Fl_Sys_Menu_Bar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_submenu of class  Fl_Sys_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Sys_Menu_Bar_clear_submenu00
static int tolua_fltk_fltk_Fl_Sys_Menu_Bar_clear_submenu00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Sys_Menu_Bar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Sys_Menu_Bar* self = (Fl_Sys_Menu_Bar*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_submenu'", NULL);
#endif
 {
  int tolua_ret = (int)  self->clear_submenu(index);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_submenu'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Sys_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Sys_Menu_Bar_insert00
static int tolua_fltk_fltk_Fl_Sys_Menu_Bar_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Sys_Menu_Bar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,5,"Fl_Callback",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Sys_Menu_Bar* self = (Fl_Sys_Menu_Bar*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* label = ((const char*)  tolua_tostring(tolua_S,3,0));
  int shortcut = ((int)  tolua_tonumber(tolua_S,4,0));
  Fl_Callback* cb = ((Fl_Callback*)  tolua_tousertype(tolua_S,5,0));
  void* user_data = ((void*)  tolua_touserdata(tolua_S,6,0));
  int flags = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  int tolua_ret = (int)  self->insert(index,label,shortcut,cb,user_data,flags);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: menu of class  Fl_Sys_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Sys_Menu_Bar_menu00
static int tolua_fltk_fltk_Fl_Sys_Menu_Bar_menu00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Sys_Menu_Bar",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Menu_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Sys_Menu_Bar* self = (Fl_Sys_Menu_Bar*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Menu_Item* m = ((const Fl_Menu_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'menu'", NULL);
#endif
 {
  self->menu(m);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'menu'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  Fl_Sys_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Sys_Menu_Bar_remove00
static int tolua_fltk_fltk_Fl_Sys_Menu_Bar_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Sys_Menu_Bar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Sys_Menu_Bar* self = (Fl_Sys_Menu_Bar*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
 {
  self->remove(n);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replace of class  Fl_Sys_Menu_Bar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Sys_Menu_Bar_replace00
static int tolua_fltk_fltk_Fl_Sys_Menu_Bar_replace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Sys_Menu_Bar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Sys_Menu_Bar* self = (Fl_Sys_Menu_Bar*)  tolua_tousertype(tolua_S,1,0);
  int rank = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* name = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replace'", NULL);
#endif
 {
  self->replace(rank,name);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_new00
static int tolua_fltk_fltk_Fl_Table_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Table* tolua_ret = (Fl_Table*)  Mtolua_new((Fl_Table)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Table");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_new00_local
static int tolua_fltk_fltk_Fl_Table_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Table_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_add00
static int tolua_fltk_fltk_Fl_Table_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  self->add(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: begin of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_begin00
static int tolua_fltk_fltk_Fl_Table_begin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'begin'", NULL);
#endif
 {
  self->begin();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'begin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: callback_col of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_callback_col00
static int tolua_fltk_fltk_Fl_Table_callback_col00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'callback_col'", NULL);
#endif
 {
  int tolua_ret = (int)  self->callback_col();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'callback_col'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: callback_context of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_callback_context00
static int tolua_fltk_fltk_Fl_Table_callback_context00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'callback_context'", NULL);
#endif
 {
  Fl_Table::TableContext tolua_ret = (Fl_Table::TableContext)  self->callback_context();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'callback_context'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: callback_row of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_callback_row00
static int tolua_fltk_fltk_Fl_Table_callback_row00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'callback_row'", NULL);
#endif
 {
  int tolua_ret = (int)  self->callback_row();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'callback_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: child of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_child00
static int tolua_fltk_fltk_Fl_Table_child00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'child'", NULL);
#endif
 {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->child(n);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'child'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: children of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_children00
static int tolua_fltk_fltk_Fl_Table_children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'children'", NULL);
#endif
 {
  int tolua_ret = (int)  self->children();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_clear00
static int tolua_fltk_fltk_Fl_Table_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_header of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_col_header00
static int tolua_fltk_fltk_Fl_Table_col_header00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_header'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->col_header();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->col_header(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_header'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_header_color of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_col_header_color00
static int tolua_fltk_fltk_Fl_Table_col_header_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_header_color'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->col_header_color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->col_header_color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_header_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_header_height of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_col_header_height00
static int tolua_fltk_fltk_Fl_Table_col_header_height00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_header_height'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->col_header_height();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->col_header_height(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_header_height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_position of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_col_position00
static int tolua_fltk_fltk_Fl_Table_col_position00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_position'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->col_position();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->col_position(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_resize of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_col_resize00
static int tolua_fltk_fltk_Fl_Table_col_resize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_resize'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->col_resize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->col_resize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_resize_min of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_col_resize_min00
static int tolua_fltk_fltk_Fl_Table_col_resize_min00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_resize_min'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->col_resize_min();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->col_resize_min(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_resize_min'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_width of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_col_width00
static int tolua_fltk_fltk_Fl_Table_col_width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int col = ((int)  tolua_tonumber(tolua_S,2,0));
  int width = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_width'", NULL);
#endif
 {
  self->col_width(col,width);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_width of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_col_width01
static int tolua_fltk_fltk_Fl_Table_col_width01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int col = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_width'", NULL);
#endif
 {
  int tolua_ret = (int)  self->col_width(col);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Table_col_width00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_width_all of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_col_width_all00
static int tolua_fltk_fltk_Fl_Table_col_width_all00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int width = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_width_all'", NULL);
#endif
 {
  self->col_width_all(width);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_width_all'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cols of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_cols00
static int tolua_fltk_fltk_Fl_Table_cols00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cols'", NULL);
#endif
 {
  self->cols(val);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cols'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cols of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_cols01
static int tolua_fltk_fltk_Fl_Table_cols01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cols'", NULL);
#endif
 {
  int tolua_ret = (int)  self->cols();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Table_cols00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: do_callback of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_do_callback00
static int tolua_fltk_fltk_Fl_Table_do_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  Fl_Table::TableContext context = ((Fl_Table::TableContext) (int)  tolua_tonumber(tolua_S,2,0));
  int row = ((int)  tolua_tonumber(tolua_S,3,0));
  int col = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'do_callback'", NULL);
#endif
 {
  self->do_callback(context,row,col);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'do_callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_draw00
static int tolua_fltk_fltk_Fl_Table_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: end of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_endd00
static int tolua_fltk_fltk_Fl_Table_endd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end'", NULL);
#endif
 {
  self->end();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_find00
static int tolua_fltk_fltk_Fl_Table_find00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Widget* w = ((const Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find'", NULL);
#endif
 {
  int tolua_ret = (int)  self->find(w);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_selection of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_get_selection00
static int tolua_fltk_fltk_Fl_Table_get_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int s_top = ((int)  tolua_tonumber(tolua_S,2,0));
  int s_left = ((int)  tolua_tonumber(tolua_S,3,0));
  int s_bottom = ((int)  tolua_tonumber(tolua_S,4,0));
  int s_right = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_selection'", NULL);
#endif
 {
  self->get_selection(s_top,s_left,s_bottom,s_right);
 tolua_pushnumber(tolua_S,(lua_Number)s_top);
 tolua_pushnumber(tolua_S,(lua_Number)s_left);
 tolua_pushnumber(tolua_S,(lua_Number)s_bottom);
 tolua_pushnumber(tolua_S,(lua_Number)s_right);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init_sizes of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_init_sizes00
static int tolua_fltk_fltk_Fl_Table_init_sizes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init_sizes'", NULL);
#endif
 {
  self->init_sizes();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init_sizes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_insert00
static int tolua_fltk_fltk_Fl_Table_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err)) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int n = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  self->insert(*w,n);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_insert01
static int tolua_fltk_fltk_Fl_Table_insert01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err)) ||
 !tolua_isusertype(tolua_S,3,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  Fl_Widget* w2 = ((Fl_Widget*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  self->insert(*w,w2);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Table_insert00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_interactive_resize of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_is_interactive_resize00
static int tolua_fltk_fltk_Fl_Table_is_interactive_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_interactive_resize'", NULL);
#endif
 {
  int tolua_ret = (int)  self->is_interactive_resize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_interactive_resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_selected of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_is_selected00
static int tolua_fltk_fltk_Fl_Table_is_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int r = ((int)  tolua_tonumber(tolua_S,2,0));
  int c = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_selected'", NULL);
#endif
 {
  int tolua_ret = (int)  self->is_selected(r,c);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move_cursor of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_move_cursor00
static int tolua_fltk_fltk_Fl_Table_move_cursor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int R = ((int)  tolua_tonumber(tolua_S,2,0));
  int C = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move_cursor'", NULL);
#endif
 {
  int tolua_ret = (int)  self->move_cursor(R,C);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move_cursor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_remove00
static int tolua_fltk_fltk_Fl_Table_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
 {
  self->remove(*w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_resize00
static int tolua_fltk_fltk_Fl_Table_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(X,Y,W,H);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_header of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_row_header00
static int tolua_fltk_fltk_Fl_Table_row_header00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_header'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->row_header();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->row_header(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_header'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_header_color of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_row_header_color00
static int tolua_fltk_fltk_Fl_Table_row_header_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_header_color'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->row_header_color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->row_header_color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_header_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_header_width of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_row_header_width00
static int tolua_fltk_fltk_Fl_Table_row_header_width00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_header_width'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->row_header_width();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->row_header_width(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_header_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_height of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_row_height00
static int tolua_fltk_fltk_Fl_Table_row_height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int row = ((int)  tolua_tonumber(tolua_S,2,0));
  int height = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_height'", NULL);
#endif
 {
  self->row_height(row,height);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_height of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_row_height01
static int tolua_fltk_fltk_Fl_Table_row_height01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int row = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_height'", NULL);
#endif
 {
  int tolua_ret = (int)  self->row_height(row);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Table_row_height00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_height_all of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_row_height_all00
static int tolua_fltk_fltk_Fl_Table_row_height_all00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int height = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_height_all'", NULL);
#endif
 {
  self->row_height_all(height);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_height_all'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_position of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_row_position00
static int tolua_fltk_fltk_Fl_Table_row_position00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_position'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->row_position();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->row_position(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_resize of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_row_resize00
static int tolua_fltk_fltk_Fl_Table_row_resize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_resize'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->row_resize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->row_resize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_resize_min of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_row_resize_min00
static int tolua_fltk_fltk_Fl_Table_row_resize_min00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_resize_min'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->row_resize_min();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->row_resize_min(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_resize_min'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rows of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_rows00
static int tolua_fltk_fltk_Fl_Table_rows00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rows'", NULL);
#endif
 {
  self->rows(val);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rows'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rows of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_rows01
static int tolua_fltk_fltk_Fl_Table_rows01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rows'", NULL);
#endif
 {
  int tolua_ret = (int)  self->rows();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Table_rows00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_selection of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_set_selection00
static int tolua_fltk_fltk_Fl_Table_set_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int s_top = ((int)  tolua_tonumber(tolua_S,2,0));
  int s_left = ((int)  tolua_tonumber(tolua_S,3,0));
  int s_bottom = ((int)  tolua_tonumber(tolua_S,4,0));
  int s_right = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_selection'", NULL);
#endif
 {
  self->set_selection(s_top,s_left,s_bottom,s_right);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: table_box of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_table_box00
static int tolua_fltk_fltk_Fl_Table_table_box00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'table_box'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  self->table_box();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Boxtype opt = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 self->table_box(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'table_box'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: top_row of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_top_row00
static int tolua_fltk_fltk_Fl_Table_top_row00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'top_row'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->top_row();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->top_row(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'top_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visible_cells of class  Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_visible_cells00
static int tolua_fltk_fltk_Fl_Table_visible_cells00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table* self = (Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int r1 = ((int)  tolua_tonumber(tolua_S,2,0));
  int r2 = ((int)  tolua_tonumber(tolua_S,3,0));
  int c1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int c2 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visible_cells'", NULL);
#endif
 {
  self->visible_cells(r1,r2,c1,c2);
 tolua_pushnumber(tolua_S,(lua_Number)r1);
 tolua_pushnumber(tolua_S,(lua_Number)r2);
 tolua_pushnumber(tolua_S,(lua_Number)c1);
 tolua_pushnumber(tolua_S,(lua_Number)c2);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visible_cells'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Table : public Fl_Table, public ToluaBase {
public:
	 void  draw_cell( Fl_Table::TableContext context, int R = 0, int C = 0, int X = 0, int Y = 0, int W = 0, int H = 0) {
		if (push_method("draw_cell",  NULL)) {
			tolua_pushnumber(lua_state, (lua_Number)context);
			tolua_pushnumber(lua_state, (lua_Number)R);
			tolua_pushnumber(lua_state, (lua_Number)C);
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			ToluaBase::dbcall(lua_state, 8, 0);
		} else {
			 Fl_Table:: draw_cell(context,R,C,X,Y,W,H);
		};
	};
	 void  clear( void ) {
		if (push_method("clear",  tolua_fltk_fltk_Fl_Table_clear00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Table:: clear();
		};
	};
	 void  cols( int val) {
		if (push_method("cols",  tolua_fltk_fltk_Fl_Table_cols00)) {
			tolua_pushnumber(lua_state, (lua_Number)val);
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Table:: cols(val);
		};
	};
	 void  rows( int val) {
		if (push_method("rows",  tolua_fltk_fltk_Fl_Table_rows00)) {
			tolua_pushnumber(lua_state, (lua_Number)val);
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Table:: rows(val);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Table:: as_group();
		};
	};
	 int  handle( int tolua_var_17) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Group_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_17);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Table:: handle(tolua_var_17);
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Table:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Widget:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Table:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Table:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Table:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Table:: show();
		};
	};

	 void Fl_Table__draw_cell( Fl_Table::TableContext context, int R = 0, int C = 0, int X = 0, int Y = 0, int W = 0, int H = 0) {
		Fl_Table::draw_cell(context,R,C,X,Y,W,H);
	};
	 void Fl_Table__clear( void ) {
		Fl_Table::clear();
	};
	 void Fl_Table__cols( int val) {
		Fl_Table::cols(val);
	};
	 void Fl_Table__rows( int val) {
		Fl_Table::rows(val);
	};
	 Fl_Group* Fl_Table__as_group( void ) {
		return ( Fl_Group* )Fl_Table::as_group();
	};
	 int Fl_Table__handle( int tolua_var_17) {
		return ( int )Fl_Table::handle(tolua_var_17);
	};
	 Fl_Window* Fl_Table__as_window( void ) {
		return ( Fl_Window* )Fl_Table::as_window();
	};
	 void Fl_Table__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Widget::do_callback(o,arg);
	};
	 void Fl_Table__draw( void ) {
		Fl_Table::draw();
	};
	 void Fl_Table__hide( void ) {
		Fl_Table::hide();
	};
	 void Fl_Table__resize( int x, int y, int w, int h) {
		Fl_Table::resize(x,y,w,h);
	};
	 void Fl_Table__show( void ) {
		Fl_Table::show();
	};
	 Lua__Fl_Table( int X, int Y, int W, int H, const char* l = 0): Fl_Table(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Table_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Table_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Table* self = (Lua__Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Table__draw_cell of class  Lua__Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__draw_cell00
static int tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__draw_cell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Table* self = (Lua__Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  Fl_Table::TableContext context = ((Fl_Table::TableContext) (int)  tolua_tonumber(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
  int C = ((int)  tolua_tonumber(tolua_S,4,0));
  int X = ((int)  tolua_tonumber(tolua_S,5,0));
  int Y = ((int)  tolua_tonumber(tolua_S,6,0));
  int W = ((int)  tolua_tonumber(tolua_S,7,0));
  int H = ((int)  tolua_tonumber(tolua_S,8,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Table__draw_cell'", NULL);
#endif
 {
  self->Fl_Table__draw_cell(context,R,C,X,Y,W,H);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Table__draw_cell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Table__clear of class  Lua__Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__clear00
static int tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Table* self = (Lua__Fl_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Table__clear'", NULL);
#endif
 {
  self->Fl_Table__clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Table__clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Table__cols of class  Lua__Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__cols00
static int tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__cols00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Table* self = (Lua__Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Table__cols'", NULL);
#endif
 {
  self->Fl_Table__cols(val);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Table__cols'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Table__rows of class  Lua__Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__rows00
static int tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__rows00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Table* self = (Lua__Fl_Table*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Table__rows'", NULL);
#endif
 {
  self->Fl_Table__rows(val);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Table__rows'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Table_new00
static int tolua_fltk_fltk_Lua__Fl_Table_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Table* tolua_ret = (Lua__Fl_Table*)  Mtolua_new((Lua__Fl_Table)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Table");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Table_new00_local
static int tolua_fltk_fltk_Lua__Fl_Table_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Table_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Table (lua_State* tolua_S)
{
 Lua__Fl_Table* self = (Lua__Fl_Table*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_Row_new00
static int tolua_fltk_fltk_Fl_Table_Row_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Table_Row",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Table_Row* tolua_ret = (Fl_Table_Row*)  Mtolua_new((Fl_Table_Row)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Table_Row");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_Row_new00_local
static int tolua_fltk_fltk_Fl_Table_Row_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Table_Row_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_Row_clear00
static int tolua_fltk_fltk_Fl_Table_Row_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table_Row",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table_Row* self = (Fl_Table_Row*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_selected of class  Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_Row_row_selected00
static int tolua_fltk_fltk_Fl_Table_Row_row_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table_Row",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table_Row* self = (Fl_Table_Row*)  tolua_tousertype(tolua_S,1,0);
  int row = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_selected'", NULL);
#endif
 {
  int tolua_ret = (int)  self->row_selected(row);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rows of class  Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_Row_rows00
static int tolua_fltk_fltk_Fl_Table_Row_rows00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table_Row",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table_Row* self = (Fl_Table_Row*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rows'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->rows();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->rows(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rows'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_all_rows of class  Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_Row_select_all_rows00
static int tolua_fltk_fltk_Fl_Table_Row_select_all_rows00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table_Row",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table_Row* self = (Fl_Table_Row*)  tolua_tousertype(tolua_S,1,0);
  int flag = ((int)  tolua_tonumber(tolua_S,2,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_all_rows'", NULL);
#endif
 {
  self->select_all_rows(flag);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_all_rows'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_row of class  Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_Row_select_row00
static int tolua_fltk_fltk_Fl_Table_Row_select_row00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table_Row",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table_Row* self = (Fl_Table_Row*)  tolua_tousertype(tolua_S,1,0);
  int row = ((int)  tolua_tonumber(tolua_S,2,0));
  int flag = ((int)  tolua_tonumber(tolua_S,3,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_row'", NULL);
#endif
 {
  int tolua_ret = (int)  self->select_row(row,flag);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: type of class  Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_Row_type00
static int tolua_fltk_fltk_Fl_Table_Row_type00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table_Row",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Table_Row* self = (Fl_Table_Row*)  tolua_tousertype(tolua_S,1,0);
  Fl_Table_Row::TableRowSelectMode val = ((Fl_Table_Row::TableRowSelectMode) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'type'", NULL);
#endif
 {
  self->type(val);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'type'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: type of class  Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Table_Row_type01
static int tolua_fltk_fltk_Fl_Table_Row_type01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Table_Row",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Table_Row* self = (Fl_Table_Row*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'type'", NULL);
#endif
 {
  Fl_Table_Row::TableRowSelectMode tolua_ret = (Fl_Table_Row::TableRowSelectMode)  self->type();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Table_Row_type00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Table_Row : public Fl_Table_Row, public ToluaBase {
public:
	 void  draw_cell( Fl_Table::TableContext context, int R = 0, int C = 0, int X = 0, int Y = 0, int W = 0, int H = 0) {
		if (push_method("draw_cell",  NULL)) {
			tolua_pushnumber(lua_state, (lua_Number)context);
			tolua_pushnumber(lua_state, (lua_Number)R);
			tolua_pushnumber(lua_state, (lua_Number)C);
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			ToluaBase::dbcall(lua_state, 8, 0);
		} else {
			 Fl_Table_Row:: draw_cell(context,R,C,X,Y,W,H);
		};
	};
	 void  clear( void ) {
		if (push_method("clear",  tolua_fltk_fltk_Fl_Table_clear00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Table_Row:: clear();
		};
	};
	 void  cols( int val) {
		if (push_method("cols",  tolua_fltk_fltk_Fl_Table_cols00)) {
			tolua_pushnumber(lua_state, (lua_Number)val);
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Table_Row:: cols(val);
		};
	};
	 void  rows( int val) {
		if (push_method("rows",  tolua_fltk_fltk_Fl_Table_rows00)) {
			tolua_pushnumber(lua_state, (lua_Number)val);
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Table_Row:: rows(val);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Table_Row:: as_group();
		};
	};
	 int  handle( int tolua_var_17) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Group_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_17);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Table_Row:: handle(tolua_var_17);
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Table_Row:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Widget:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Table_Row:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Table_Row:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Table_Row:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Table_Row:: show();
		};
	};

	 void Fl_Table_Row__draw_cell( Fl_Table::TableContext context, int R = 0, int C = 0, int X = 0, int Y = 0, int W = 0, int H = 0) {
		Fl_Table_Row::draw_cell(context,R,C,X,Y,W,H);
	};
	 void Fl_Table_Row__clear( void ) {
		Fl_Table_Row::clear();
	};
	 void Fl_Table_Row__cols( int val) {
		Fl_Table_Row::cols(val);
	};
	 void Fl_Table_Row__rows( int val) {
		Fl_Table_Row::rows(val);
	};
	 Fl_Group* Fl_Table_Row__as_group( void ) {
		return ( Fl_Group* )Fl_Table_Row::as_group();
	};
	 int Fl_Table_Row__handle( int tolua_var_17) {
		return ( int )Fl_Table_Row::handle(tolua_var_17);
	};
	 Fl_Window* Fl_Table_Row__as_window( void ) {
		return ( Fl_Window* )Fl_Table_Row::as_window();
	};
	 void Fl_Table_Row__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Widget::do_callback(o,arg);
	};
	 void Fl_Table_Row__draw( void ) {
		Fl_Table_Row::draw();
	};
	 void Fl_Table_Row__hide( void ) {
		Fl_Table_Row::hide();
	};
	 void Fl_Table_Row__resize( int x, int y, int w, int h) {
		Fl_Table_Row::resize(x,y,w,h);
	};
	 void Fl_Table_Row__show( void ) {
		Fl_Table_Row::show();
	};
	 Lua__Fl_Table_Row( int X, int Y, int W, int H, const char* l = 0): Fl_Table_Row(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Table_Row_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Table_Row_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Table_Row",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Table_Row* self = (Lua__Fl_Table_Row*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Table_Row_new00
static int tolua_fltk_fltk_Lua__Fl_Table_Row_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Table_Row",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Table_Row* tolua_ret = (Lua__Fl_Table_Row*)  Mtolua_new((Lua__Fl_Table_Row)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Table_Row");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Table_Row */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Table_Row_new00_local
static int tolua_fltk_fltk_Lua__Fl_Table_Row_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Table_Row_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Table_Row (lua_State* tolua_S)
{
 Lua__Fl_Table_Row* self = (Lua__Fl_Table_Row*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tabs_new00
static int tolua_fltk_fltk_Fl_Tabs_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tabs",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_102 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_103 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_104 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_105 = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* tolua_var_106 = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Tabs* tolua_ret = (Fl_Tabs*)  Mtolua_new((Fl_Tabs)(tolua_var_102,tolua_var_103,tolua_var_104,tolua_var_105,tolua_var_106));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tabs");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tabs_new00_local
static int tolua_fltk_fltk_Fl_Tabs_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Tabs_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tabs_handle00
static int tolua_fltk_fltk_Fl_Tabs_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tabs",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tabs* self = (Fl_Tabs*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_107 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_107);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: push of class  Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tabs_push00
static int tolua_fltk_fltk_Fl_Tabs_push00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tabs",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tabs* self = (Fl_Tabs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'push'", NULL);
#endif
 {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->push();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'push'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: push of class  Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tabs_push01
static int tolua_fltk_fltk_Fl_Tabs_push01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tabs",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tabs* self = (Fl_Tabs*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* tolua_var_108 = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'push'", NULL);
#endif
 {
  int tolua_ret = (int)  self->push(tolua_var_108);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tabs_push00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tabs_value00
static int tolua_fltk_fltk_Fl_Tabs_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tabs",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tabs* self = (Fl_Tabs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->value();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tabs_value01
static int tolua_fltk_fltk_Fl_Tabs_value01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tabs",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tabs* self = (Fl_Tabs*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* tolua_var_109 = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value(tolua_var_109);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tabs_value00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: which of class  Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tabs_which00
static int tolua_fltk_fltk_Fl_Tabs_which00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tabs",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tabs* self = (Fl_Tabs*)  tolua_tousertype(tolua_S,1,0);
  int event_x = ((int)  tolua_tonumber(tolua_S,2,0));
  int event_y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'which'", NULL);
#endif
 {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->which(event_x,event_y);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'which'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Tabs : public Fl_Tabs, public ToluaBase {
public:
	 int  handle( int tolua_var_107) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Tabs_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_107);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Tabs:: handle(tolua_var_107);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Tabs:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Tabs:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Tabs:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Tabs:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Tabs:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Tabs:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Tabs:: show();
		};
	};

	 int Fl_Tabs__handle( int tolua_var_107) {
		return ( int )Fl_Tabs::handle(tolua_var_107);
	};
	 Fl_Group* Fl_Tabs__as_group( void ) {
		return ( Fl_Group* )Fl_Tabs::as_group();
	};
	 Fl_Window* Fl_Tabs__as_window( void ) {
		return ( Fl_Window* )Fl_Tabs::as_window();
	};
	 void Fl_Tabs__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Tabs::do_callback(o,arg);
	};
	 void Fl_Tabs__draw( void ) {
		Fl_Tabs::draw();
	};
	 void Fl_Tabs__hide( void ) {
		Fl_Tabs::hide();
	};
	 void Fl_Tabs__resize( int x, int y, int w, int h) {
		Fl_Tabs::resize(x,y,w,h);
	};
	 void Fl_Tabs__show( void ) {
		Fl_Tabs::show();
	};
	 Lua__Fl_Tabs( int tolua_var_102, int tolua_var_103, int tolua_var_104, int tolua_var_105, const char* tolua_var_106 = 0): Fl_Tabs(tolua_var_102,tolua_var_103,tolua_var_104,tolua_var_105,tolua_var_106){};
};

/* method: tolua__set_instance of class  Lua__Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tabs_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Tabs_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Tabs",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Tabs* self = (Lua__Fl_Tabs*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Tabs__handle of class  Lua__Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tabs_Fl_Tabs__handle00
static int tolua_fltk_fltk_Lua__Fl_Tabs_Fl_Tabs__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Tabs",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Tabs* self = (Lua__Fl_Tabs*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_107 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Tabs__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Tabs__handle(tolua_var_107);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Tabs__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tabs_new00
static int tolua_fltk_fltk_Lua__Fl_Tabs_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Tabs",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_102 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_103 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_104 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_105 = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* tolua_var_106 = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Tabs* tolua_ret = (Lua__Fl_Tabs*)  Mtolua_new((Lua__Fl_Tabs)(tolua_var_102,tolua_var_103,tolua_var_104,tolua_var_105,tolua_var_106));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Tabs");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Tabs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tabs_new00_local
static int tolua_fltk_fltk_Lua__Fl_Tabs_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Tabs_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Tabs (lua_State* tolua_S)
{
 Lua__Fl_Tabs* self = (Lua__Fl_Tabs*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_new00
static int tolua_fltk_fltk_Fl_Text_Buffer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int requestedSize = ((int)  tolua_tonumber(tolua_S,2,0));
  int preferredGapSize = ((int)  tolua_tonumber(tolua_S,3,1024));
 {
  Fl_Text_Buffer* tolua_ret = (Fl_Text_Buffer*)  Mtolua_new((Fl_Text_Buffer)(requestedSize,preferredGapSize));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Text_Buffer");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_new00_local
static int tolua_fltk_fltk_Fl_Text_Buffer_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Text_Buffer_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_modify_callback of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_add_modify_callback00
static int tolua_fltk_fltk_Fl_Text_Buffer_add_modify_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Text_Modify_Cb",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  Fl_Text_Modify_Cb bufModifiedCB = *((Fl_Text_Modify_Cb*)  tolua_tousertype(tolua_S,2,0));
  void* cbArg = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add_modify_callback'", NULL);
#endif
 {
  self->add_modify_callback(bufModifiedCB,cbArg);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_modify_callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_predelete_callback of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_add_predelete_callback00
static int tolua_fltk_fltk_Fl_Text_Buffer_add_predelete_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Text_Predelete_Cb",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  Fl_Text_Predelete_Cb bufPredelCB = *((Fl_Text_Predelete_Cb*)  tolua_tousertype(tolua_S,2,0));
  void* cbArg = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add_predelete_callback'", NULL);
#endif
 {
  self->add_predelete_callback(bufPredelCB,cbArg);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_predelete_callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: address of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_address00
static int tolua_fltk_fltk_Fl_Text_Buffer_address00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'address'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->address(pos);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'address'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: append of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_append00
static int tolua_fltk_fltk_Fl_Text_Buffer_append00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  const char* t = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'append'", NULL);
#endif
 {
  self->append(t);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'append'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: appendfile of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_appendfile00
static int tolua_fltk_fltk_Fl_Text_Buffer_appendfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  int buflen = ((int)  tolua_tonumber(tolua_S,3,128*1024));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'appendfile'", NULL);
#endif
 {
  int tolua_ret = (int)  self->appendfile(file,buflen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'appendfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: call_modify_callbacks of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_call_modify_callbacks00
static int tolua_fltk_fltk_Fl_Text_Buffer_call_modify_callbacks00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'call_modify_callbacks'", NULL);
#endif
 {
  self->call_modify_callbacks();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'call_modify_callbacks'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: call_predelete_callbacks of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_call_predelete_callbacks00
static int tolua_fltk_fltk_Fl_Text_Buffer_call_predelete_callbacks00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'call_predelete_callbacks'", NULL);
#endif
 {
  self->call_predelete_callbacks();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'call_predelete_callbacks'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canUndo of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_canUndo00
static int tolua_fltk_fltk_Fl_Text_Buffer_canUndo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  char flag = ((char)  tolua_tonumber(tolua_S,2,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canUndo'", NULL);
#endif
 {
  self->canUndo(flag);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canUndo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: character of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_character00
static int tolua_fltk_fltk_Fl_Text_Buffer_character00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'character'", NULL);
#endif
 {
  int tolua_ret = (int)  self->character(pos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'character'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: character_width of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_character_width00
static int tolua_fltk_fltk_Fl_Text_Buffer_character_width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* src = ((const char*)  tolua_tostring(tolua_S,2,0));
  int indent = ((int)  tolua_tonumber(tolua_S,3,0));
  int tabDist = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  int tolua_ret = (int)  Fl_Text_Buffer::character_width(src,indent,tabDist);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'character_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: character_width of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_character_width01
static int tolua_fltk_fltk_Fl_Text_Buffer_character_width01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char c = ((const char)  tolua_tonumber(tolua_S,2,0));
  int indent = ((int)  tolua_tonumber(tolua_S,3,0));
  int tabDist = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  int tolua_ret = (int)  Fl_Text_Buffer::character_width(c,indent,tabDist);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Text_Buffer_character_width00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_rectangular of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_clear_rectangular00
static int tolua_fltk_fltk_Fl_Text_Buffer_clear_rectangular00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_rectangular'", NULL);
#endif
 {
  self->clear_rectangular(start,end,rectStart,rectEnd);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_rectangular'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_copy00
static int tolua_fltk_fltk_Fl_Text_Buffer_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  Fl_Text_Buffer* fromBuf = ((Fl_Text_Buffer*)  tolua_tousertype(tolua_S,2,0));
  int fromStart = ((int)  tolua_tonumber(tolua_S,3,0));
  int fromEnd = ((int)  tolua_tonumber(tolua_S,4,0));
  int toPos = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  self->copy(fromBuf,fromStart,fromEnd,toPos);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: count_displayed_characters of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_count_displayed_characters00
static int tolua_fltk_fltk_Fl_Text_Buffer_count_displayed_characters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int lineStartPos = ((int)  tolua_tonumber(tolua_S,2,0));
  int targetPos = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count_displayed_characters'", NULL);
#endif
 {
  int tolua_ret = (int)  self->count_displayed_characters(lineStartPos,targetPos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count_displayed_characters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: count_lines of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_count_lines00
static int tolua_fltk_fltk_Fl_Text_Buffer_count_lines00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  int endPos = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count_lines'", NULL);
#endif
 {
  int tolua_ret = (int)  self->count_lines(startPos,endPos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count_lines'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: expand_character of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_expand_character00
static int tolua_fltk_fltk_Fl_Text_Buffer_expand_character00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* src = ((const char*)  tolua_tostring(tolua_S,2,0));
  int indent = ((int)  tolua_tonumber(tolua_S,3,0));
  char* outStr = ((char*)  tolua_tostring(tolua_S,4,0));
  int tabDist = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  int tolua_ret = (int)  Fl_Text_Buffer::expand_character(src,indent,outStr,tabDist);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'expand_character'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: expand_character of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_expand_character01
static int tolua_fltk_fltk_Fl_Text_Buffer_expand_character01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
  int indent = ((int)  tolua_tonumber(tolua_S,3,0));
  char* outStr = ((char*)  tolua_tostring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'expand_character'", NULL);
#endif
 {
  int tolua_ret = (int)  self->expand_character(pos,indent,outStr);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Text_Buffer_expand_character00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: findchar_backward of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_findchar_backward00
static int tolua_fltk_fltk_Fl_Text_Buffer_findchar_backward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  char searchChar = ((char)  tolua_tonumber(tolua_S,3,0));
  int foundPos = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findchar_backward'", NULL);
#endif
 {
  int tolua_ret = (int)  self->findchar_backward(startPos,searchChar,&foundPos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)foundPos);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findchar_backward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findchar_forward of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_findchar_forward00
static int tolua_fltk_fltk_Fl_Text_Buffer_findchar_forward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  char searchChar = ((char)  tolua_tonumber(tolua_S,3,0));
  int foundPos = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findchar_forward'", NULL);
#endif
 {
  int tolua_ret = (int)  self->findchar_forward(startPos,searchChar,&foundPos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)foundPos);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findchar_forward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findchars_backward of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_findchars_backward00
static int tolua_fltk_fltk_Fl_Text_Buffer_findchars_backward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* searchChars = ((const char*)  tolua_tostring(tolua_S,3,0));
  int foundPos = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findchars_backward'", NULL);
#endif
 {
  int tolua_ret = (int)  self->findchars_backward(startPos,searchChars,&foundPos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)foundPos);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findchars_backward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findchars_forward of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_findchars_forward00
static int tolua_fltk_fltk_Fl_Text_Buffer_findchars_forward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* searchChars = ((const char*)  tolua_tostring(tolua_S,3,0));
  int foundPos = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findchars_forward'", NULL);
#endif
 {
  int tolua_ret = (int)  self->findchars_forward(startPos,searchChars,&foundPos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)foundPos);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findchars_forward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: highlight of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_highlight00
static int tolua_fltk_fltk_Fl_Text_Buffer_highlight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'highlight'", NULL);
#endif
 {
  self->highlight(start,end);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'highlight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: highlight of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_highlight01
static int tolua_fltk_fltk_Fl_Text_Buffer_highlight01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'highlight'", NULL);
#endif
 {
  int tolua_ret = (int)  self->highlight();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Text_Buffer_highlight00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: highlight_position of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_highlight_position00
static int tolua_fltk_fltk_Fl_Text_Buffer_highlight_position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'highlight_position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->highlight_position(&start,&end);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)start);
 tolua_pushnumber(tolua_S,(lua_Number)end);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'highlight_position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: highlight_position of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_highlight_position01
static int tolua_fltk_fltk_Fl_Text_Buffer_highlight_position01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int isRect = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,5,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'highlight_position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->highlight_position(&start,&end,&isRect,&rectStart,&rectEnd);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)start);
 tolua_pushnumber(tolua_S,(lua_Number)end);
 tolua_pushnumber(tolua_S,(lua_Number)isRect);
 tolua_pushnumber(tolua_S,(lua_Number)rectStart);
 tolua_pushnumber(tolua_S,(lua_Number)rectEnd);
 }
 }
 return 6;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Text_Buffer_highlight_position00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: highlight_rectangular of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_highlight_rectangular00
static int tolua_fltk_fltk_Fl_Text_Buffer_highlight_rectangular00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'highlight_rectangular'", NULL);
#endif
 {
  self->highlight_rectangular(start,end,rectStart,rectEnd);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'highlight_rectangular'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: highlight_selection of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_highlight_selection00
static int tolua_fltk_fltk_Fl_Text_Buffer_highlight_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'highlight_selection'", NULL);
#endif
 {
  Fl_Text_Selection* tolua_ret = (Fl_Text_Selection*)  self->highlight_selection();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Text_Selection");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'highlight_selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: highlight_text of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_highlight_text00
static int tolua_fltk_fltk_Fl_Text_Buffer_highlight_text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'highlight_text'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->highlight_text();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'highlight_text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_insert00
static int tolua_fltk_fltk_Fl_Text_Buffer_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* text = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  self->insert(pos,text);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert_column of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_insert_column00
static int tolua_fltk_fltk_Fl_Text_Buffer_insert_column00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int column = ((int)  tolua_tonumber(tolua_S,2,0));
  int startPos = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* text = ((const char*)  tolua_tostring(tolua_S,4,0));
  int charsInserted = ((int)  tolua_tonumber(tolua_S,5,0));
  int charsDeleted = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert_column'", NULL);
#endif
 {
  self->insert_column(column,startPos,text,&charsInserted,&charsDeleted);
 tolua_pushnumber(tolua_S,(lua_Number)charsInserted);
 tolua_pushnumber(tolua_S,(lua_Number)charsDeleted);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert_column'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertfile of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_insertfile00
static int tolua_fltk_fltk_Fl_Text_Buffer_insertfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  int pos = ((int)  tolua_tonumber(tolua_S,3,0));
  int buflen = ((int)  tolua_tonumber(tolua_S,4,128*1024));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertfile'", NULL);
#endif
 {
  int tolua_ret = (int)  self->insertfile(file,pos,buflen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: length of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_length00
static int tolua_fltk_fltk_Fl_Text_Buffer_length00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'length'", NULL);
#endif
 {
  int tolua_ret = (int)  self->length();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'length'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: line_end of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_line_end00
static int tolua_fltk_fltk_Fl_Text_Buffer_line_end00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'line_end'", NULL);
#endif
 {
  int tolua_ret = (int)  self->line_end(pos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'line_end'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: line_start of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_line_start00
static int tolua_fltk_fltk_Fl_Text_Buffer_line_start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'line_start'", NULL);
#endif
 {
  int tolua_ret = (int)  self->line_start(pos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'line_start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: line_text of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_line_text00
static int tolua_fltk_fltk_Fl_Text_Buffer_line_text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'line_text'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->line_text(pos);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'line_text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadfile of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_loadfile00
static int tolua_fltk_fltk_Fl_Text_Buffer_loadfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  int buflen = ((int)  tolua_tonumber(tolua_S,3,128*1024));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadfile'", NULL);
#endif
 {
  int tolua_ret = (int)  self->loadfile(file,buflen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: outputfile of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_outputfile00
static int tolua_fltk_fltk_Fl_Text_Buffer_outputfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  int start = ((int)  tolua_tonumber(tolua_S,3,0));
  int end = ((int)  tolua_tonumber(tolua_S,4,0));
  int buflen = ((int)  tolua_tonumber(tolua_S,5,128*1024));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'outputfile'", NULL);
#endif
 {
  int tolua_ret = (int)  self->outputfile(file,start,end,buflen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'outputfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: overlay_rectangular of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_overlay_rectangular00
static int tolua_fltk_fltk_Fl_Text_Buffer_overlay_rectangular00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isstring(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,3,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,4,0));
  const char* text = ((const char*)  tolua_tostring(tolua_S,5,0));
  int charsInserted = ((int)  tolua_tonumber(tolua_S,6,0));
  int charsDeleted = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'overlay_rectangular'", NULL);
#endif
 {
  self->overlay_rectangular(startPos,rectStart,rectEnd,text,&charsInserted,&charsDeleted);
 tolua_pushnumber(tolua_S,(lua_Number)charsInserted);
 tolua_pushnumber(tolua_S,(lua_Number)charsDeleted);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'overlay_rectangular'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: primary_selection of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_primary_selection00
static int tolua_fltk_fltk_Fl_Text_Buffer_primary_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'primary_selection'", NULL);
#endif
 {
  Fl_Text_Selection* tolua_ret = (Fl_Text_Selection*)  self->primary_selection();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Text_Selection");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'primary_selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_remove00
static int tolua_fltk_fltk_Fl_Text_Buffer_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
 {
  self->remove(start,end);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_modify_callback of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_remove_modify_callback00
static int tolua_fltk_fltk_Fl_Text_Buffer_remove_modify_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Text_Modify_Cb",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  Fl_Text_Modify_Cb bufModifiedCB = *((Fl_Text_Modify_Cb*)  tolua_tousertype(tolua_S,2,0));
  void* cbArg = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove_modify_callback'", NULL);
#endif
 {
  self->remove_modify_callback(bufModifiedCB,cbArg);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_modify_callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_predelete_callback of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_remove_predelete_callback00
static int tolua_fltk_fltk_Fl_Text_Buffer_remove_predelete_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Text_Predelete_Cb",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  Fl_Text_Predelete_Cb predelCB = *((Fl_Text_Predelete_Cb*)  tolua_tousertype(tolua_S,2,0));
  void* cbArg = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove_predelete_callback'", NULL);
#endif
 {
  self->remove_predelete_callback(predelCB,cbArg);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_predelete_callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_rectangular of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_remove_rectangular00
static int tolua_fltk_fltk_Fl_Text_Buffer_remove_rectangular00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove_rectangular'", NULL);
#endif
 {
  self->remove_rectangular(start,end,rectStart,rectEnd);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_rectangular'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_secondary_selection of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_remove_secondary_selection00
static int tolua_fltk_fltk_Fl_Text_Buffer_remove_secondary_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove_secondary_selection'", NULL);
#endif
 {
  self->remove_secondary_selection();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_secondary_selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_selection of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_remove_selection00
static int tolua_fltk_fltk_Fl_Text_Buffer_remove_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove_selection'", NULL);
#endif
 {
  self->remove_selection();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replace of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_replace00
static int tolua_fltk_fltk_Fl_Text_Buffer_replace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* text = ((const char*)  tolua_tostring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replace'", NULL);
#endif
 {
  self->replace(start,end,text);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replace_rectangular of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_replace_rectangular00
static int tolua_fltk_fltk_Fl_Text_Buffer_replace_rectangular00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* text = ((const char*)  tolua_tostring(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replace_rectangular'", NULL);
#endif
 {
  self->replace_rectangular(start,end,rectStart,rectEnd,text);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replace_rectangular'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replace_secondary_selection of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_replace_secondary_selection00
static int tolua_fltk_fltk_Fl_Text_Buffer_replace_secondary_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  const char* text = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replace_secondary_selection'", NULL);
#endif
 {
  self->replace_secondary_selection(text);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replace_secondary_selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replace_selection of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_replace_selection00
static int tolua_fltk_fltk_Fl_Text_Buffer_replace_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  const char* text = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replace_selection'", NULL);
#endif
 {
  self->replace_selection(text);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replace_selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rewind_lines of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_rewind_lines00
static int tolua_fltk_fltk_Fl_Text_Buffer_rewind_lines00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLines = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rewind_lines'", NULL);
#endif
 {
  int tolua_ret = (int)  self->rewind_lines(startPos,nLines);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rewind_lines'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: savefile of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_savefile00
static int tolua_fltk_fltk_Fl_Text_Buffer_savefile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  int buflen = ((int)  tolua_tonumber(tolua_S,3,128*1024));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'savefile'", NULL);
#endif
 {
  int tolua_ret = (int)  self->savefile(file,buflen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'savefile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: search_backward of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_search_backward00
static int tolua_fltk_fltk_Fl_Text_Buffer_search_backward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* searchString = ((const char*)  tolua_tostring(tolua_S,3,0));
  int foundPos = ((int)  tolua_tonumber(tolua_S,4,0));
  int matchCase = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'search_backward'", NULL);
#endif
 {
  int tolua_ret = (int)  self->search_backward(startPos,searchString,&foundPos,matchCase);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)foundPos);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'search_backward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: search_forward of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_search_forward00
static int tolua_fltk_fltk_Fl_Text_Buffer_search_forward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* searchString = ((const char*)  tolua_tostring(tolua_S,3,0));
  int foundPos = ((int)  tolua_tonumber(tolua_S,4,0));
  int matchCase = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'search_forward'", NULL);
#endif
 {
  int tolua_ret = (int)  self->search_forward(startPos,searchString,&foundPos,matchCase);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)foundPos);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'search_forward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: secondary_select of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_secondary_select00
static int tolua_fltk_fltk_Fl_Text_Buffer_secondary_select00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'secondary_select'", NULL);
#endif
 {
  self->secondary_select(start,end);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'secondary_select'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: secondary_select_rectangular of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_secondary_select_rectangular00
static int tolua_fltk_fltk_Fl_Text_Buffer_secondary_select_rectangular00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'secondary_select_rectangular'", NULL);
#endif
 {
  self->secondary_select_rectangular(start,end,rectStart,rectEnd);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'secondary_select_rectangular'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: secondary_selected of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_secondary_selected00
static int tolua_fltk_fltk_Fl_Text_Buffer_secondary_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'secondary_selected'", NULL);
#endif
 {
  int tolua_ret = (int)  self->secondary_selected();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'secondary_selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: secondary_selection of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection00
static int tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'secondary_selection'", NULL);
#endif
 {
  Fl_Text_Selection* tolua_ret = (Fl_Text_Selection*)  self->secondary_selection();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Text_Selection");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'secondary_selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: secondary_selection_position of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection_position00
static int tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection_position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'secondary_selection_position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->secondary_selection_position(&start,&end);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)start);
 tolua_pushnumber(tolua_S,(lua_Number)end);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'secondary_selection_position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: secondary_selection_position of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection_position01
static int tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection_position01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int isRect = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,5,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'secondary_selection_position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->secondary_selection_position(&start,&end,&isRect,&rectStart,&rectEnd);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)start);
 tolua_pushnumber(tolua_S,(lua_Number)end);
 tolua_pushnumber(tolua_S,(lua_Number)isRect);
 tolua_pushnumber(tolua_S,(lua_Number)rectStart);
 tolua_pushnumber(tolua_S,(lua_Number)rectEnd);
 }
 }
 return 6;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection_position00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: secondary_selection_text of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection_text00
static int tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection_text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'secondary_selection_text'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->secondary_selection_text();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'secondary_selection_text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: secondary_unselect of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_secondary_unselect00
static int tolua_fltk_fltk_Fl_Text_Buffer_secondary_unselect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'secondary_unselect'", NULL);
#endif
 {
  self->secondary_unselect();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'secondary_unselect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_select00
static int tolua_fltk_fltk_Fl_Text_Buffer_select00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select'", NULL);
#endif
 {
  self->select(start,end);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_rectangular of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_select_rectangular00
static int tolua_fltk_fltk_Fl_Text_Buffer_select_rectangular00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_rectangular'", NULL);
#endif
 {
  self->select_rectangular(start,end,rectStart,rectEnd);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_rectangular'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selected of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_selected00
static int tolua_fltk_fltk_Fl_Text_Buffer_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selected'", NULL);
#endif
 {
  int tolua_ret = (int)  self->selected();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selection_position of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_selection_position00
static int tolua_fltk_fltk_Fl_Text_Buffer_selection_position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selection_position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->selection_position(&start,&end);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)start);
 tolua_pushnumber(tolua_S,(lua_Number)end);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selection_position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selection_position of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_selection_position01
static int tolua_fltk_fltk_Fl_Text_Buffer_selection_position01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int isRect = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,5,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selection_position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->selection_position(&start,&end,&isRect,&rectStart,&rectEnd);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)start);
 tolua_pushnumber(tolua_S,(lua_Number)end);
 tolua_pushnumber(tolua_S,(lua_Number)isRect);
 tolua_pushnumber(tolua_S,(lua_Number)rectStart);
 tolua_pushnumber(tolua_S,(lua_Number)rectEnd);
 }
 }
 return 6;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Text_Buffer_selection_position00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: selection_text of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_selection_text00
static int tolua_fltk_fltk_Fl_Text_Buffer_selection_text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selection_text'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->selection_text();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selection_text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: skip_displayed_characters of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_skip_displayed_characters00
static int tolua_fltk_fltk_Fl_Text_Buffer_skip_displayed_characters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int lineStartPos = ((int)  tolua_tonumber(tolua_S,2,0));
  int nChars = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'skip_displayed_characters'", NULL);
#endif
 {
  int tolua_ret = (int)  self->skip_displayed_characters(lineStartPos,nChars);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'skip_displayed_characters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: skip_lines of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_skip_lines00
static int tolua_fltk_fltk_Fl_Text_Buffer_skip_lines00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLines = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'skip_lines'", NULL);
#endif
 {
  int tolua_ret = (int)  self->skip_lines(startPos,nLines);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'skip_lines'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tab_distance of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_tab_distance00
static int tolua_fltk_fltk_Fl_Text_Buffer_tab_distance00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tab_distance'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->tab_distance();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->tab_distance(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tab_distance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: text of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_text00
static int tolua_fltk_fltk_Fl_Text_Buffer_text00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'text'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->text();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->text(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: text_in_rectangle of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_text_in_rectangle00
static int tolua_fltk_fltk_Fl_Text_Buffer_text_in_rectangle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'text_in_rectangle'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->text_in_rectangle(start,end,rectStart,rectEnd);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'text_in_rectangle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: text_range of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_text_range00
static int tolua_fltk_fltk_Fl_Text_Buffer_text_range00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'text_range'", NULL);
#endif
 {
  char* tolua_ret = (char*)  self->text_range(start,end);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'text_range'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: undo of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_undo00
static int tolua_fltk_fltk_Fl_Text_Buffer_undo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int cp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'undo'", NULL);
#endif
 {
  int tolua_ret = (int)  self->undo(&cp);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)cp);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'undo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unhighlight of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_unhighlight00
static int tolua_fltk_fltk_Fl_Text_Buffer_unhighlight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unhighlight'", NULL);
#endif
 {
  self->unhighlight();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unhighlight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unselect of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_unselect00
static int tolua_fltk_fltk_Fl_Text_Buffer_unselect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unselect'", NULL);
#endif
 {
  self->unselect();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unselect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: word_end of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_word_end00
static int tolua_fltk_fltk_Fl_Text_Buffer_word_end00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'word_end'", NULL);
#endif
 {
  int tolua_ret = (int)  self->word_end(pos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'word_end'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: word_start of class  Fl_Text_Buffer */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Buffer_word_start00
static int tolua_fltk_fltk_Fl_Text_Buffer_word_start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Buffer",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Buffer* self = (Fl_Text_Buffer*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'word_start'", NULL);
#endif
 {
  int tolua_ret = (int)  self->word_start(pos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'word_start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: color of class  Style_Table_Entry */
#ifndef TOLUA_DISABLE_tolua_get_Fl_Text_Display__Style_Table_Entry_unsigned_color
static int tolua_get_Fl_Text_Display__Style_Table_Entry_unsigned_color(lua_State* tolua_S)
{
  Fl_Text_Display::Style_Table_Entry* self = (Fl_Text_Display::Style_Table_Entry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'color'",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->color);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: color of class  Style_Table_Entry */
#ifndef TOLUA_DISABLE_tolua_set_Fl_Text_Display__Style_Table_Entry_unsigned_color
static int tolua_set_Fl_Text_Display__Style_Table_Entry_unsigned_color(lua_State* tolua_S)
{
  Fl_Text_Display::Style_Table_Entry* self = (Fl_Text_Display::Style_Table_Entry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'color'",NULL);
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->color = (( unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: font of class  Style_Table_Entry */
#ifndef TOLUA_DISABLE_tolua_get_Fl_Text_Display__Style_Table_Entry_font
static int tolua_get_Fl_Text_Display__Style_Table_Entry_font(lua_State* tolua_S)
{
  Fl_Text_Display::Style_Table_Entry* self = (Fl_Text_Display::Style_Table_Entry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'font'",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->font);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: font of class  Style_Table_Entry */
#ifndef TOLUA_DISABLE_tolua_set_Fl_Text_Display__Style_Table_Entry_font
static int tolua_set_Fl_Text_Display__Style_Table_Entry_font(lua_State* tolua_S)
{
  Fl_Text_Display::Style_Table_Entry* self = (Fl_Text_Display::Style_Table_Entry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'font'",NULL);
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->font = ((  int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: size of class  Style_Table_Entry */
#ifndef TOLUA_DISABLE_tolua_get_Fl_Text_Display__Style_Table_Entry_size
static int tolua_get_Fl_Text_Display__Style_Table_Entry_size(lua_State* tolua_S)
{
  Fl_Text_Display::Style_Table_Entry* self = (Fl_Text_Display::Style_Table_Entry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'size'",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->size);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: size of class  Style_Table_Entry */
#ifndef TOLUA_DISABLE_tolua_set_Fl_Text_Display__Style_Table_Entry_size
static int tolua_set_Fl_Text_Display__Style_Table_Entry_size(lua_State* tolua_S)
{
  Fl_Text_Display::Style_Table_Entry* self = (Fl_Text_Display::Style_Table_Entry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'size'",NULL);
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->size = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: attr of class  Style_Table_Entry */
#ifndef TOLUA_DISABLE_tolua_get_Fl_Text_Display__Style_Table_Entry_attr
static int tolua_get_Fl_Text_Display__Style_Table_Entry_attr(lua_State* tolua_S)
{
  Fl_Text_Display::Style_Table_Entry* self = (Fl_Text_Display::Style_Table_Entry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'attr'",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->attr);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: attr of class  Style_Table_Entry */
#ifndef TOLUA_DISABLE_tolua_set_Fl_Text_Display__Style_Table_Entry_attr
static int tolua_set_Fl_Text_Display__Style_Table_Entry_attr(lua_State* tolua_S)
{
  Fl_Text_Display::Style_Table_Entry* self = (Fl_Text_Display::Style_Table_Entry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'attr'",NULL);
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->attr = ((unsigned)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_new00
static int tolua_fltk_fltk_Fl_Text_Display_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Text_Display* tolua_ret = (Fl_Text_Display*)  Mtolua_new((Fl_Text_Display)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Text_Display");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_new00_local
static int tolua_fltk_fltk_Fl_Text_Display_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Text_Display_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: buffer of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_buffer00
static int tolua_fltk_fltk_Fl_Text_Display_buffer00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buffer'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Text_Buffer* tolua_ret = (Fl_Text_Buffer*)  self->buffer();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Text_Buffer");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Text_Buffer",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Text_Buffer* opt = ((Fl_Text_Buffer*)  tolua_tousertype(tolua_S,2,0));
 self->buffer(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: count_lines of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_count_lines00
static int tolua_fltk_fltk_Fl_Text_Display_count_lines00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  bool start_pos_is_line_start = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count_lines'", NULL);
#endif
 {
  int tolua_ret = (int)  self->count_lines(start,end,start_pos_is_line_start);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count_lines'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cursor_color of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_cursor_color00
static int tolua_fltk_fltk_Fl_Text_Display_cursor_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cursor_color'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->cursor_color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->cursor_color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cursor_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cursor_style of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_cursor_style00
static int tolua_fltk_fltk_Fl_Text_Display_cursor_style00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int style = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cursor_style'", NULL);
#endif
 {
  self->cursor_style(style);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cursor_style'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_handle00
static int tolua_fltk_fltk_Fl_Text_Display_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int e = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hide_cursor of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_hide_cursor00
static int tolua_fltk_fltk_Fl_Text_Display_hide_cursor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hide_cursor'", NULL);
#endif
 {
  self->hide_cursor();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hide_cursor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: in_selection of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_in_selection00
static int tolua_fltk_fltk_Fl_Text_Display_in_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'in_selection'", NULL);
#endif
 {
  int tolua_ret = (int)  self->in_selection(x,y);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'in_selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_insert00
static int tolua_fltk_fltk_Fl_Text_Display_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  const char* text = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  self->insert(text);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert_position of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_insert_position00
static int tolua_fltk_fltk_Fl_Text_Display_insert_position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int newPos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert_position'", NULL);
#endif
 {
  self->insert_position(newPos);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert_position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert_position of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_insert_position01
static int tolua_fltk_fltk_Fl_Text_Display_insert_position01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert_position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->insert_position();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Text_Display_insert_position00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: line_end of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_line_end00
static int tolua_fltk_fltk_Fl_Text_Display_line_end00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
  bool start_pos_is_line_start = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'line_end'", NULL);
#endif
 {
  int tolua_ret = (int)  self->line_end(pos,start_pos_is_line_start);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'line_end'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: line_start of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_line_start00
static int tolua_fltk_fltk_Fl_Text_Display_line_start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'line_start'", NULL);
#endif
 {
  int tolua_ret = (int)  self->line_start(pos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'line_start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move_down of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_move_down00
static int tolua_fltk_fltk_Fl_Text_Display_move_down00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move_down'", NULL);
#endif
 {
  int tolua_ret = (int)  self->move_down();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move_down'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move_left of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_move_left00
static int tolua_fltk_fltk_Fl_Text_Display_move_left00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move_left'", NULL);
#endif
 {
  int tolua_ret = (int)  self->move_left();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move_left'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move_right of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_move_right00
static int tolua_fltk_fltk_Fl_Text_Display_move_right00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move_right'", NULL);
#endif
 {
  int tolua_ret = (int)  self->move_right();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move_right'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move_up of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_move_up00
static int tolua_fltk_fltk_Fl_Text_Display_move_up00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move_up'", NULL);
#endif
 {
  int tolua_ret = (int)  self->move_up();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move_up'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: next_word of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_next_word00
static int tolua_fltk_fltk_Fl_Text_Display_next_word00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'next_word'", NULL);
#endif
 {
  self->next_word();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'next_word'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: overstrike of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_overstrike00
static int tolua_fltk_fltk_Fl_Text_Display_overstrike00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  const char* text = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'overstrike'", NULL);
#endif
 {
  self->overstrike(text);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'overstrike'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: position_style of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_position_style00
static int tolua_fltk_fltk_Fl_Text_Display_position_style00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int lineStartPos = ((int)  tolua_tonumber(tolua_S,2,0));
  int lineLen = ((int)  tolua_tonumber(tolua_S,3,0));
  int lineIndex = ((int)  tolua_tonumber(tolua_S,4,0));
  int dispIndex = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'position_style'", NULL);
#endif
 {
  int tolua_ret = (int)  self->position_style(lineStartPos,lineLen,lineIndex,dispIndex);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'position_style'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: previous_word of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_previous_word00
static int tolua_fltk_fltk_Fl_Text_Display_previous_word00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'previous_word'", NULL);
#endif
 {
  self->previous_word();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'previous_word'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: redisplay_range of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_redisplay_range00
static int tolua_fltk_fltk_Fl_Text_Display_redisplay_range00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'redisplay_range'", NULL);
#endif
 {
  self->redisplay_range(start,end);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'redisplay_range'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_resize00
static int tolua_fltk_fltk_Fl_Text_Display_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(X,Y,W,H);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rewind_lines of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_rewind_lines00
static int tolua_fltk_fltk_Fl_Text_Display_rewind_lines00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLines = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rewind_lines'", NULL);
#endif
 {
  int tolua_ret = (int)  self->rewind_lines(startPos,nLines);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rewind_lines'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scroll of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_scroll00
static int tolua_fltk_fltk_Fl_Text_Display_scroll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int topLineNum = ((int)  tolua_tonumber(tolua_S,2,0));
  int horizOffset = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scroll'", NULL);
#endif
 {
  self->scroll(topLineNum,horizOffset);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scroll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollbar_align of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_scrollbar_align00
static int tolua_fltk_fltk_Fl_Text_Display_scrollbar_align00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollbar_align'", NULL);
#endif
 {
 if(nparam < 2) {
   unsigned tolua_ret = (  unsigned)  self->scrollbar_align();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   unsigned opt = ((  unsigned)  tolua_tonumber(tolua_S,2,0));
 self->scrollbar_align(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollbar_align'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollbar_width of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_scrollbar_width00
static int tolua_fltk_fltk_Fl_Text_Display_scrollbar_width00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollbar_width'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->scrollbar_width();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->scrollbar_width(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollbar_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shortcut of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_shortcut00
static int tolua_fltk_fltk_Fl_Text_Display_shortcut00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shortcut'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->shortcut();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->shortcut(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show_cursor of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_show_cursor00
static int tolua_fltk_fltk_Fl_Text_Display_show_cursor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int b = ((int)  tolua_tonumber(tolua_S,2,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show_cursor'", NULL);
#endif
 {
  self->show_cursor(b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show_cursor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show_insert_position of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_show_insert_position00
static int tolua_fltk_fltk_Fl_Text_Display_show_insert_position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show_insert_position'", NULL);
#endif
 {
  self->show_insert_position();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show_insert_position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: skip_lines of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_skip_lines00
static int tolua_fltk_fltk_Fl_Text_Display_skip_lines00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int startPos = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLines = ((int)  tolua_tonumber(tolua_S,3,0));
  bool startPosIsLineStart = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'skip_lines'", NULL);
#endif
 {
  int tolua_ret = (int)  self->skip_lines(startPos,nLines,startPosIsLineStart);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'skip_lines'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_textcolor00
static int tolua_fltk_fltk_Fl_Text_Display_textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_textfont00
static int tolua_fltk_fltk_Fl_Text_Display_textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_textsize00
static int tolua_fltk_fltk_Fl_Text_Display_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: word_end of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_word_end00
static int tolua_fltk_fltk_Fl_Text_Display_word_end00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'word_end'", NULL);
#endif
 {
  int tolua_ret = (int)  self->word_end(pos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'word_end'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: word_start of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_word_start00
static int tolua_fltk_fltk_Fl_Text_Display_word_start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'word_start'", NULL);
#endif
 {
  int tolua_ret = (int)  self->word_start(pos);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'word_start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: wrap_mode of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_wrap_mode00
static int tolua_fltk_fltk_Fl_Text_Display_wrap_mode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int wrap = ((int)  tolua_tonumber(tolua_S,2,0));
  int wrap_margin = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'wrap_mode'", NULL);
#endif
 {
  self->wrap_mode(wrap,wrap_margin);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'wrap_mode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: wrapped_column of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_wrapped_column00
static int tolua_fltk_fltk_Fl_Text_Display_wrapped_column00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int row = ((int)  tolua_tonumber(tolua_S,2,0));
  int column = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'wrapped_column'", NULL);
#endif
 {
  int tolua_ret = (int)  self->wrapped_column(row,column);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'wrapped_column'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: wrapped_row of class  Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Display_wrapped_row00
static int tolua_fltk_fltk_Fl_Text_Display_wrapped_row00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Display* self = (Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int row = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'wrapped_row'", NULL);
#endif
 {
  int tolua_ret = (int)  self->wrapped_row(row);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'wrapped_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Text_Display : public Fl_Text_Display, public ToluaBase {
public:
	 int  handle( int e) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Text_Display_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)e);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Text_Display:: handle(e);
		};
	};
	 void  resize( int X, int Y, int W, int H) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Text_Display_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Text_Display:: resize(X,Y,W,H);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Text_Display:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Text_Display:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Text_Display:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Text_Display:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Text_Display:: hide();
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Text_Display:: show();
		};
	};

	 int Fl_Text_Display__handle( int e) {
		return ( int )Fl_Text_Display::handle(e);
	};
	 void Fl_Text_Display__resize( int X, int Y, int W, int H) {
		Fl_Text_Display::resize(X,Y,W,H);
	};
	 Fl_Group* Fl_Text_Display__as_group( void ) {
		return ( Fl_Group* )Fl_Text_Display::as_group();
	};
	 Fl_Window* Fl_Text_Display__as_window( void ) {
		return ( Fl_Window* )Fl_Text_Display::as_window();
	};
	 void Fl_Text_Display__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Text_Display::do_callback(o,arg);
	};
	 void Fl_Text_Display__draw( void ) {
		Fl_Text_Display::draw();
	};
	 void Fl_Text_Display__hide( void ) {
		Fl_Text_Display::hide();
	};
	 void Fl_Text_Display__show( void ) {
		Fl_Text_Display::show();
	};
	 Lua__Fl_Text_Display( int X, int Y, int W, int H, const char* l = 0): Fl_Text_Display(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Text_Display_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Text_Display_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Text_Display* self = (Lua__Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Text_Display__handle of class  Lua__Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Text_Display_Fl_Text_Display__handle00
static int tolua_fltk_fltk_Lua__Fl_Text_Display_Fl_Text_Display__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Text_Display* self = (Lua__Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int e = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Text_Display__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Text_Display__handle(e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Text_Display__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Text_Display__resize of class  Lua__Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Text_Display_Fl_Text_Display__resize00
static int tolua_fltk_fltk_Lua__Fl_Text_Display_Fl_Text_Display__resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Text_Display* self = (Lua__Fl_Text_Display*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Text_Display__resize'", NULL);
#endif
 {
  self->Fl_Text_Display__resize(X,Y,W,H);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Text_Display__resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Text_Display_new00
static int tolua_fltk_fltk_Lua__Fl_Text_Display_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Text_Display",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Text_Display* tolua_ret = (Lua__Fl_Text_Display*)  Mtolua_new((Lua__Fl_Text_Display)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Text_Display");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Text_Display */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Text_Display_new00_local
static int tolua_fltk_fltk_Lua__Fl_Text_Display_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Text_Display_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Text_Display (lua_State* tolua_S)
{
 Lua__Fl_Text_Display* self = (Lua__Fl_Text_Display*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_new00
static int tolua_fltk_fltk_Fl_Text_Editor_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Text_Editor* tolua_ret = (Fl_Text_Editor*)  Mtolua_new((Fl_Text_Editor)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Text_Editor");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_new00_local
static int tolua_fltk_fltk_Fl_Text_Editor_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Text_Editor_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_handle00
static int tolua_fltk_fltk_Fl_Text_Editor_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Editor* self = (Fl_Text_Editor*)  tolua_tousertype(tolua_S,1,0);
  int e = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert_mode of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_insert_mode00
static int tolua_fltk_fltk_Fl_Text_Editor_insert_mode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Editor* self = (Fl_Text_Editor*)  tolua_tousertype(tolua_S,1,0);
  int b = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert_mode'", NULL);
#endif
 {
  self->insert_mode(b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert_mode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert_mode of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_insert_mode01
static int tolua_fltk_fltk_Fl_Text_Editor_insert_mode01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Text_Editor* self = (Fl_Text_Editor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert_mode'", NULL);
#endif
 {
  int tolua_ret = (int)  self->insert_mode();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Text_Editor_insert_mode00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_backspace of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_backspace00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_backspace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_backspace(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_backspace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_c_s_move of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_c_s_move00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_c_s_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_c_s_move(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_c_s_move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_copy of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_copy00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_copy(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_ctrl_move of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_ctrl_move00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_ctrl_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_ctrl_move(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_ctrl_move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_cut of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_cut00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_cut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_cut(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_cut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_default of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_default00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_default00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_default(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_default'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_delete of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_delete00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_delete(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_down of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_down00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_down00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_down(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_down'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_end of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_end00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_end00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_end(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_end'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_enter of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_enter00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_enter(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_home of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_home00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_home00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_110 = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_home(tolua_var_110,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_home'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_ignore of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_ignore00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_ignore00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_ignore(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_ignore'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_insert of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_insert00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_insert(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_left of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_left00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_left00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_left(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_left'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_m_s_move of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_m_s_move00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_m_s_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_m_s_move(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_m_s_move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_meta_move of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_meta_move00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_meta_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_meta_move(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_meta_move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_move of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_move00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_move(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_page_down of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_page_down00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_page_down00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_page_down(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_page_down'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_page_up of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_page_up00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_page_up00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_page_up(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_page_up'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_paste of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_paste00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_paste00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_paste(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_paste'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_right of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_right00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_right00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_right(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_right'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_select_all of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_select_all00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_select_all00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_select_all(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_select_all'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_shift_move of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_shift_move00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_shift_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_shift_move(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_shift_move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_undo of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_undo00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_undo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_undo(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_undo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: kf_up of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_kf_up00
static int tolua_fltk_fltk_Fl_Text_Editor_kf_up00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Text_Editor* e = ((Fl_Text_Editor*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl_Text_Editor::kf_up(c,e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'kf_up'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_all_key_bindings of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_remove_all_key_bindings00
static int tolua_fltk_fltk_Fl_Text_Editor_remove_all_key_bindings00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Editor* self = (Fl_Text_Editor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove_all_key_bindings'", NULL);
#endif
 {
  self->remove_all_key_bindings();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_all_key_bindings'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_key_binding of class  Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Editor_remove_key_binding00
static int tolua_fltk_fltk_Fl_Text_Editor_remove_key_binding00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Editor* self = (Fl_Text_Editor*)  tolua_tousertype(tolua_S,1,0);
  int key = ((int)  tolua_tonumber(tolua_S,2,0));
  int state = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove_key_binding'", NULL);
#endif
 {
  self->remove_key_binding(key,state);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_key_binding'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Text_Editor : public Fl_Text_Editor, public ToluaBase {
public:
	 int  handle( int e) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Text_Editor_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)e);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Text_Editor:: handle(e);
		};
	};
	 void  resize( int X, int Y, int W, int H) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Text_Display_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Text_Editor:: resize(X,Y,W,H);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Text_Editor:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Text_Editor:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Text_Editor:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Text_Editor:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Text_Editor:: hide();
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Text_Editor:: show();
		};
	};

	 int Fl_Text_Editor__handle( int e) {
		return ( int )Fl_Text_Editor::handle(e);
	};
	 void Fl_Text_Editor__resize( int X, int Y, int W, int H) {
		Fl_Text_Editor::resize(X,Y,W,H);
	};
	 Fl_Group* Fl_Text_Editor__as_group( void ) {
		return ( Fl_Group* )Fl_Text_Editor::as_group();
	};
	 Fl_Window* Fl_Text_Editor__as_window( void ) {
		return ( Fl_Window* )Fl_Text_Editor::as_window();
	};
	 void Fl_Text_Editor__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Text_Editor::do_callback(o,arg);
	};
	 void Fl_Text_Editor__draw( void ) {
		Fl_Text_Editor::draw();
	};
	 void Fl_Text_Editor__hide( void ) {
		Fl_Text_Editor::hide();
	};
	 void Fl_Text_Editor__show( void ) {
		Fl_Text_Editor::show();
	};
	 Lua__Fl_Text_Editor( int X, int Y, int W, int H, const char* l = 0): Fl_Text_Editor(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Text_Editor_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Text_Editor_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Text_Editor* self = (Lua__Fl_Text_Editor*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Text_Editor__handle of class  Lua__Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Text_Editor_Fl_Text_Editor__handle00
static int tolua_fltk_fltk_Lua__Fl_Text_Editor_Fl_Text_Editor__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Text_Editor* self = (Lua__Fl_Text_Editor*)  tolua_tousertype(tolua_S,1,0);
  int e = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Text_Editor__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Text_Editor__handle(e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Text_Editor__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Text_Editor_new00
static int tolua_fltk_fltk_Lua__Fl_Text_Editor_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Text_Editor",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Text_Editor* tolua_ret = (Lua__Fl_Text_Editor*)  Mtolua_new((Lua__Fl_Text_Editor)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Text_Editor");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Text_Editor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Text_Editor_new00_local
static int tolua_fltk_fltk_Lua__Fl_Text_Editor_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Text_Editor_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Text_Editor (lua_State* tolua_S)
{
 Lua__Fl_Text_Editor* self = (Lua__Fl_Text_Editor*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: end of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_endd00
static int tolua_fltk_fltk_Fl_Text_Selection_endd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end'", NULL);
#endif
 {
  int tolua_ret = (int)  self->end();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: includes of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_includes00
static int tolua_fltk_fltk_Fl_Text_Selection_includes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
  int lineStartPos = ((int)  tolua_tonumber(tolua_S,3,0));
  int dispIndex = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'includes'", NULL);
#endif
 {
  int tolua_ret = (int)  self->includes(pos,lineStartPos,dispIndex);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'includes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: position of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_position00
static int tolua_fltk_fltk_Fl_Text_Selection_position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->position(&start,&end);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)start);
 tolua_pushnumber(tolua_S,(lua_Number)end);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: position of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_position01
static int tolua_fltk_fltk_Fl_Text_Selection_position01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int isRect = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,5,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'position'", NULL);
#endif
 {
  int tolua_ret = (int)  self->position(&start,&end,&isRect,&rectStart,&rectEnd);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)start);
 tolua_pushnumber(tolua_S,(lua_Number)end);
 tolua_pushnumber(tolua_S,(lua_Number)isRect);
 tolua_pushnumber(tolua_S,(lua_Number)rectStart);
 tolua_pushnumber(tolua_S,(lua_Number)rectEnd);
 }
 }
 return 6;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Text_Selection_position00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: rect_end of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_rect_end00
static int tolua_fltk_fltk_Fl_Text_Selection_rect_end00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rect_end'", NULL);
#endif
 {
  int tolua_ret = (int)  self->rect_end();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rect_end'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rect_start of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_rect_start00
static int tolua_fltk_fltk_Fl_Text_Selection_rect_start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rect_start'", NULL);
#endif
 {
  int tolua_ret = (int)  self->rect_start();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rect_start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rectangular of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_rectangular00
static int tolua_fltk_fltk_Fl_Text_Selection_rectangular00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rectangular'", NULL);
#endif
 {
  char tolua_ret = (char)  self->rectangular();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rectangular'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selected of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_selected00
static int tolua_fltk_fltk_Fl_Text_Selection_selected00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selected'", NULL);
#endif
 {
 if(nparam < 2) {
  char tolua_ret = (char)  self->selected();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char opt = ((char)  tolua_tonumber(tolua_S,2,0));
 self->selected(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_set00
static int tolua_fltk_fltk_Fl_Text_Selection_set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'", NULL);
#endif
 {
  self->set(start,end);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_rectangular of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_set_rectangular00
static int tolua_fltk_fltk_Fl_Text_Selection_set_rectangular00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
  int start = ((int)  tolua_tonumber(tolua_S,2,0));
  int end = ((int)  tolua_tonumber(tolua_S,3,0));
  int rectStart = ((int)  tolua_tonumber(tolua_S,4,0));
  int rectEnd = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_rectangular'", NULL);
#endif
 {
  self->set_rectangular(start,end,rectStart,rectEnd);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_rectangular'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: start of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_start00
static int tolua_fltk_fltk_Fl_Text_Selection_start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'start'", NULL);
#endif
 {
  int tolua_ret = (int)  self->start();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  Fl_Text_Selection */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Text_Selection_update00
static int tolua_fltk_fltk_Fl_Text_Selection_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Text_Selection",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Text_Selection* self = (Fl_Text_Selection*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
  int nDeleted = ((int)  tolua_tonumber(tolua_S,3,0));
  int nInserted = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
 {
  self->update(pos,nDeleted,nInserted);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Tile */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tile_new00
static int tolua_fltk_fltk_Fl_Tile_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tile",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Tile* tolua_ret = (Fl_Tile*)  Mtolua_new((Fl_Tile)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tile");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Tile */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tile_new00_local
static int tolua_fltk_fltk_Fl_Tile_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Tile_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Tile */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tile_handle00
static int tolua_fltk_fltk_Fl_Tile_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tile",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tile* self = (Fl_Tile*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_111 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_111);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: position of class  Fl_Tile */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tile_position00
static int tolua_fltk_fltk_Fl_Tile_position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tile",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tile* self = (Fl_Tile*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_112 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_113 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_114 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_115 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'position'", NULL);
#endif
 {
  self->position(tolua_var_112,tolua_var_113,tolua_var_114,tolua_var_115);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Tile */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tile_resize00
static int tolua_fltk_fltk_Fl_Tile_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tile",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tile* self = (Fl_Tile*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_116 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_117 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_118 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_119 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(tolua_var_116,tolua_var_117,tolua_var_118,tolua_var_119);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Tile : public Fl_Tile, public ToluaBase {
public:
	 int  handle( int tolua_var_111) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Tile_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_111);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Tile:: handle(tolua_var_111);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Tile:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Tile:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Tile:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Tile:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Tile:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Tile:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Tile:: show();
		};
	};

	 int Fl_Tile__handle( int tolua_var_111) {
		return ( int )Fl_Tile::handle(tolua_var_111);
	};
	 Fl_Group* Fl_Tile__as_group( void ) {
		return ( Fl_Group* )Fl_Tile::as_group();
	};
	 Fl_Window* Fl_Tile__as_window( void ) {
		return ( Fl_Window* )Fl_Tile::as_window();
	};
	 void Fl_Tile__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Tile::do_callback(o,arg);
	};
	 void Fl_Tile__draw( void ) {
		Fl_Tile::draw();
	};
	 void Fl_Tile__hide( void ) {
		Fl_Tile::hide();
	};
	 void Fl_Tile__resize( int x, int y, int w, int h) {
		Fl_Tile::resize(x,y,w,h);
	};
	 void Fl_Tile__show( void ) {
		Fl_Tile::show();
	};
	 Lua__Fl_Tile( int X, int Y, int W, int H, const char* l = 0): Fl_Tile(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Tile */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tile_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Tile_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Tile",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Tile* self = (Lua__Fl_Tile*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Tile__handle of class  Lua__Fl_Tile */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tile_Fl_Tile__handle00
static int tolua_fltk_fltk_Lua__Fl_Tile_Fl_Tile__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Tile",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Tile* self = (Lua__Fl_Tile*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_111 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Tile__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Tile__handle(tolua_var_111);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Tile__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Tile */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tile_new00
static int tolua_fltk_fltk_Lua__Fl_Tile_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Tile",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Tile* tolua_ret = (Lua__Fl_Tile*)  Mtolua_new((Lua__Fl_Tile)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Tile");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Tile */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tile_new00_local
static int tolua_fltk_fltk_Lua__Fl_Tile_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Tile_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Tile (lua_State* tolua_S)
{
 Lua__Fl_Tile* self = (Lua__Fl_Tile*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tiled_Image_new00
static int tolua_fltk_fltk_Fl_Tiled_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* i = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
  int W = ((int)  tolua_tonumber(tolua_S,3,0));
  int H = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Fl_Tiled_Image* tolua_ret = (Fl_Tiled_Image*)  Mtolua_new((Fl_Tiled_Image)(i,W,H));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tiled_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tiled_Image_new00_local
static int tolua_fltk_fltk_Fl_Tiled_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Tiled_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: color_average of class  Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tiled_Image_color_average00
static int tolua_fltk_fltk_Fl_Tiled_Image_color_average00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tiled_Image* self = (Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  float i = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'color_average'", NULL);
#endif
 {
  self->color_average(c,i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'color_average'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tiled_Image_copy00
static int tolua_fltk_fltk_Fl_Tiled_Image_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tiled_Image* self = (Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tiled_Image_copy01
static int tolua_fltk_fltk_Fl_Tiled_Image_copy01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tiled_Image* self = (Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->copy();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tiled_Image_copy00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: desaturate of class  Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tiled_Image_desaturate00
static int tolua_fltk_fltk_Fl_Tiled_Image_desaturate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tiled_Image* self = (Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'desaturate'", NULL);
#endif
 {
  self->desaturate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'desaturate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tiled_Image_draw00
static int tolua_fltk_fltk_Fl_Tiled_Image_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tiled_Image* self = (Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tiled_Image_draw01
static int tolua_fltk_fltk_Fl_Tiled_Image_draw01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tiled_Image* self = (Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tiled_Image_draw00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: image of class  Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tiled_Image_image00
static int tolua_fltk_fltk_Fl_Tiled_Image_image00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tiled_Image* self = (Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'image'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->image();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'image'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Tiled_Image : public Fl_Tiled_Image, public ToluaBase {
public:
	 void  color_average( unsigned int c, float i) {
		if (push_method("color_average",  tolua_fltk_fltk_Fl_Tiled_Image_color_average00)) {
			tolua_pushnumber(lua_state, (lua_Number)c);
			tolua_pushnumber(lua_state, (lua_Number)i);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Tiled_Image:: color_average(c,i);
		};
	};
	 Fl_Image*  copy( int W, int H) {
		if (push_method("copy",  tolua_fltk_fltk_Fl_Tiled_Image_copy00)) {
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			ToluaBase::dbcall(lua_state, 3, 1);
			 Fl_Image*  tolua_ret = ( Fl_Image* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Image* ) Fl_Tiled_Image:: copy(W,H);
		};
	};
	 void  desaturate( void ) {
		if (push_method("desaturate",  tolua_fltk_fltk_Fl_Tiled_Image_desaturate00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Tiled_Image:: desaturate();
		};
	};
	 void  draw( int X, int Y, int W, int H, int cx, int cy) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Tiled_Image_draw00)) {
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			tolua_pushnumber(lua_state, (lua_Number)cx);
			tolua_pushnumber(lua_state, (lua_Number)cy);
			ToluaBase::dbcall(lua_state, 7, 0);
		} else {
			 Fl_Tiled_Image:: draw(X,Y,W,H,cx,cy);
		};
	};
	 void  label( Fl_Widget* w) {
		if (push_method("label",  tolua_fltk_fltk_Fl_Image_label00)) {
			tolua_pushusertype(lua_state, (void*)w, "Fl_Widget");
			ToluaBase::dbcall(lua_state, 2, 0);
		} else {
			 Fl_Tiled_Image:: label(w);
		};
	};
	 void  uncache( void ) {
		if (push_method("uncache",  tolua_fltk_fltk_Fl_Image_uncache00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Tiled_Image:: uncache();
		};
	};

	 void Fl_Tiled_Image__color_average( unsigned int c, float i) {
		Fl_Tiled_Image::color_average(c,i);
	};
	 Fl_Image* Fl_Tiled_Image__copy( int W, int H) {
		return ( Fl_Image* )Fl_Tiled_Image::copy(W,H);
	};
	 void Fl_Tiled_Image__desaturate( void ) {
		Fl_Tiled_Image::desaturate();
	};
	 void Fl_Tiled_Image__draw( int X, int Y, int W, int H, int cx, int cy) {
		Fl_Tiled_Image::draw(X,Y,W,H,cx,cy);
	};
	 void Fl_Tiled_Image__label( Fl_Widget* w) {
		Fl_Tiled_Image::label(w);
	};
	 void Fl_Tiled_Image__uncache( void ) {
		Fl_Tiled_Image::uncache();
	};
	 Lua__Fl_Tiled_Image( Fl_Image* i, int W = 0, int H = 0): Fl_Tiled_Image(i,W,H){};
};

/* method: tolua__set_instance of class  Lua__Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tiled_Image_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Tiled_Image_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Tiled_Image* self = (Lua__Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Tiled_Image__color_average of class  Lua__Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__color_average00
static int tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__color_average00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Tiled_Image* self = (Lua__Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
  unsigned int c = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  float i = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Tiled_Image__color_average'", NULL);
#endif
 {
  self->Fl_Tiled_Image__color_average(c,i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Tiled_Image__color_average'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Tiled_Image__copy of class  Lua__Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__copy00
static int tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Tiled_Image* self = (Lua__Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Tiled_Image__copy'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->Fl_Tiled_Image__copy(W,H);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Tiled_Image__copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Tiled_Image__desaturate of class  Lua__Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__desaturate00
static int tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__desaturate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Tiled_Image* self = (Lua__Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Tiled_Image__desaturate'", NULL);
#endif
 {
  self->Fl_Tiled_Image__desaturate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Tiled_Image__desaturate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Tiled_Image__draw of class  Lua__Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__draw00
static int tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Tiled_Image* self = (Lua__Fl_Tiled_Image*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int cx = ((int)  tolua_tonumber(tolua_S,6,0));
  int cy = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Tiled_Image__draw'", NULL);
#endif
 {
  self->Fl_Tiled_Image__draw(X,Y,W,H,cx,cy);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Tiled_Image__draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tiled_Image_new00
static int tolua_fltk_fltk_Lua__Fl_Tiled_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Tiled_Image",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Image* i = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
  int W = ((int)  tolua_tonumber(tolua_S,3,0));
  int H = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Lua__Fl_Tiled_Image* tolua_ret = (Lua__Fl_Tiled_Image*)  Mtolua_new((Lua__Fl_Tiled_Image)(i,W,H));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Tiled_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Tiled_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tiled_Image_new00_local
static int tolua_fltk_fltk_Lua__Fl_Tiled_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Tiled_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Tiled_Image (lua_State* tolua_S)
{
 Lua__Fl_Tiled_Image* self = (Lua__Fl_Tiled_Image*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Toggle_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Toggle_Button_new00
static int tolua_fltk_fltk_Fl_Toggle_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Toggle_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Toggle_Button* tolua_ret = (Fl_Toggle_Button*)  Mtolua_new((Fl_Toggle_Button)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Toggle_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Toggle_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Toggle_Button_new00_local
static int tolua_fltk_fltk_Fl_Toggle_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Toggle_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: color of class  Fl_Tooltip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tooltip_color00
static int tolua_fltk_fltk_Fl_Tooltip_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tooltip",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  unsigned int tolua_ret = (unsigned int)  Fl_Tooltip::color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 Fl_Tooltip::color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: current of class  Fl_Tooltip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tooltip_current00
static int tolua_fltk_fltk_Fl_Tooltip_current00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tooltip",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  Fl_Widget* tolua_ret = (Fl_Widget*)  Fl_Tooltip::current();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Widget* opt = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 Fl_Tooltip::current(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delay of class  Fl_Tooltip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tooltip_delay00
static int tolua_fltk_fltk_Fl_Tooltip_delay00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tooltip",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  float tolua_ret = (float)  Fl_Tooltip::delay();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  float opt = ((float)  tolua_tonumber(tolua_S,2,0));
 Fl_Tooltip::delay(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: disable of class  Fl_Tooltip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tooltip_disable00
static int tolua_fltk_fltk_Fl_Tooltip_disable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tooltip",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Tooltip::disable();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'disable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enable of class  Fl_Tooltip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tooltip_enable00
static int tolua_fltk_fltk_Fl_Tooltip_enable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tooltip",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int b = ((int)  tolua_tonumber(tolua_S,2,1));
 {
  Fl_Tooltip::enable(b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enabled of class  Fl_Tooltip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tooltip_enabled00
static int tolua_fltk_fltk_Fl_Tooltip_enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tooltip",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl_Tooltip::enabled();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enter_area of class  Fl_Tooltip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tooltip_enter_area00
static int tolua_fltk_fltk_Fl_Tooltip_enter_area00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tooltip",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isstring(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int X = ((int)  tolua_tonumber(tolua_S,3,0));
  int Y = ((int)  tolua_tonumber(tolua_S,4,0));
  int W = ((int)  tolua_tonumber(tolua_S,5,0));
  int H = ((int)  tolua_tonumber(tolua_S,6,0));
  const char* tip = ((const char*)  tolua_tostring(tolua_S,7,0));
 {
  Fl_Tooltip::enter_area(w,X,Y,W,H,tip);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enter_area'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: font of class  Fl_Tooltip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tooltip_font00
static int tolua_fltk_fltk_Fl_Tooltip_font00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tooltip",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  int tolua_ret = (int)  Fl_Tooltip::font();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 Fl_Tooltip::font(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'font'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hoverdelay of class  Fl_Tooltip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tooltip_hoverdelay00
static int tolua_fltk_fltk_Fl_Tooltip_hoverdelay00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tooltip",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  float tolua_ret = (float)  Fl_Tooltip::hoverdelay();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  float opt = ((float)  tolua_tonumber(tolua_S,2,0));
 Fl_Tooltip::hoverdelay(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hoverdelay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Fl_Tooltip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tooltip_size00
static int tolua_fltk_fltk_Fl_Tooltip_size00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tooltip",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  int tolua_ret = (int)  Fl_Tooltip::size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 Fl_Tooltip::size(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Tooltip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tooltip_textcolor00
static int tolua_fltk_fltk_Fl_Tooltip_textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tooltip",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  unsigned int tolua_ret = (unsigned int)  Fl_Tooltip::textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 Fl_Tooltip::textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_new00
static int tolua_fltk_fltk_Fl_Tree_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Tree* tolua_ret = (Fl_Tree*)  Mtolua_new((Fl_Tree)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_new00_local
static int tolua_fltk_fltk_Fl_Tree_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Tree_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_add00
static int tolua_fltk_fltk_Fl_Tree_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  const char* path = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->add(path);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_add200
static int tolua_fltk_fltk_Fl_Tree_add200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
  const char* name = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->add(item,name);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_clear00
static int tolua_fltk_fltk_Fl_Tree_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_children of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_clear_children00
static int tolua_fltk_fltk_Fl_Tree_clear_children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_children'", NULL);
#endif
 {
  self->clear_children(item);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: close of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_close00
static int tolua_fltk_fltk_Fl_Tree_close00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'close'", NULL);
#endif
 {
  self->close(item);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'close'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: close of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_close01
static int tolua_fltk_fltk_Fl_Tree_close01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  const char* path = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'close'", NULL);
#endif
 {
  int tolua_ret = (int)  self->close(path);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_close00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: closeicon of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_closeicon00
static int tolua_fltk_fltk_Fl_Tree_closeicon00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'closeicon'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Image* tolua_ret = (Fl_Image*)  self->closeicon();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Image* opt = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
 self->closeicon(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closeicon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: connectorstyle of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_connectorstyle00
static int tolua_fltk_fltk_Fl_Tree_connectorstyle00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'connectorstyle'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Tree_Connector tolua_ret = (Fl_Tree_Connector)  self->connectorstyle();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Tree_Connector opt = ((Fl_Tree_Connector) (int)  tolua_tonumber(tolua_S,2,0));
 self->connectorstyle(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'connectorstyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: connectorwidth of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_connectorwidth00
static int tolua_fltk_fltk_Fl_Tree_connectorwidth00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'connectorwidth'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->connectorwidth();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->connectorwidth(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'connectorwidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deselect of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_deselect00
static int tolua_fltk_fltk_Fl_Tree_deselect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
  int docallback = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deselect'", NULL);
#endif
 {
  self->deselect(item,docallback);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deselect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deselect of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_deselect01
static int tolua_fltk_fltk_Fl_Tree_deselect01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  const char* path = ((const char*)  tolua_tostring(tolua_S,2,0));
  int docallback = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deselect'", NULL);
#endif
 {
  int tolua_ret = (int)  self->deselect(path,docallback);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_deselect00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: deselect_all of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_deselect_all00
static int tolua_fltk_fltk_Fl_Tree_deselect_all00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
  int docallback = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deselect_all'", NULL);
#endif
 {
  int tolua_ret = (int)  self->deselect_all(item,docallback);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deselect_all'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_draw00
static int tolua_fltk_fltk_Fl_Tree_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_clicked of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_find_clicked00
static int tolua_fltk_fltk_Fl_Tree_find_clicked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_clicked'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->find_clicked();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find_clicked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_item of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_find_item00
static int tolua_fltk_fltk_Fl_Tree_find_item00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  const char* path = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_item'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->find_item(path);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find_item'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: first of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_first00
static int tolua_fltk_fltk_Fl_Tree_first00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'first'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->first();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'first'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_handle00
static int tolua_fltk_fltk_Fl_Tree_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  int e = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_insert00
static int tolua_fltk_fltk_Fl_Tree_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
  const char* name = ((const char*)  tolua_tostring(tolua_S,3,0));
  int pos = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->insert(item,name,pos);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert_above of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_insert_above00
static int tolua_fltk_fltk_Fl_Tree_insert_above00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* above = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
  const char* name = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert_above'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->insert_above(above,name);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert_above'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_close of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_is_close00
static int tolua_fltk_fltk_Fl_Tree_is_close00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_close'", NULL);
#endif
 {
  int tolua_ret = (int)  self->is_close(item);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_close'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_close of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_is_close01
static int tolua_fltk_fltk_Fl_Tree_is_close01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  const char* path = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_close'", NULL);
#endif
 {
  int tolua_ret = (int)  self->is_close(path);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_is_close00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_open of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_is_open00
static int tolua_fltk_fltk_Fl_Tree_is_open00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_open'", NULL);
#endif
 {
  int tolua_ret = (int)  self->is_open(item);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_open'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_open of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_is_open01
static int tolua_fltk_fltk_Fl_Tree_is_open01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  const char* path = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_open'", NULL);
#endif
 {
  int tolua_ret = (int)  self->is_open(path);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_is_open00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_selected of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_is_selected00
static int tolua_fltk_fltk_Fl_Tree_is_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_selected'", NULL);
#endif
 {
  int tolua_ret = (int)  self->is_selected(item);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_selected of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_is_selected01
static int tolua_fltk_fltk_Fl_Tree_is_selected01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  const char* path = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_selected'", NULL);
#endif
 {
  int tolua_ret = (int)  self->is_selected(path);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_is_selected00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: item_clicked of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_item_clicked00
static int tolua_fltk_fltk_Fl_Tree_item_clicked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'item_clicked'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->item_clicked();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'item_clicked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelfont of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_labelfont00
static int tolua_fltk_fltk_Fl_Tree_labelfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelfont'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->labelfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->labelfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelsize of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_labelsize00
static int tolua_fltk_fltk_Fl_Tree_labelsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelsize'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->labelsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->labelsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: last of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_last00
static int tolua_fltk_fltk_Fl_Tree_last00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'last'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->last();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'last'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: marginleft of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_marginleft00
static int tolua_fltk_fltk_Fl_Tree_marginleft00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'marginleft'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->marginleft();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->marginleft(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'marginleft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: margintop of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_margintop00
static int tolua_fltk_fltk_Fl_Tree_margintop00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'margintop'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->margintop();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->margintop(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'margintop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: open of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_open00
static int tolua_fltk_fltk_Fl_Tree_open00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'open'", NULL);
#endif
 {
  self->open(item);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'open'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: open of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_open01
static int tolua_fltk_fltk_Fl_Tree_open01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  const char* path = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'open'", NULL);
#endif
 {
  int tolua_ret = (int)  self->open(path);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_open00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: openchild_marginbottom of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_openchild_marginbottom00
static int tolua_fltk_fltk_Fl_Tree_openchild_marginbottom00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'openchild_marginbottom'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->openchild_marginbottom();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->openchild_marginbottom(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'openchild_marginbottom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: openicon of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_openicon00
static int tolua_fltk_fltk_Fl_Tree_openicon00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'openicon'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Image* tolua_ret = (Fl_Image*)  self->openicon();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Image* opt = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
 self->openicon(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'openicon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: parent of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_parent00
static int tolua_fltk_fltk_Fl_Tree_parent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'parent'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->parent(item);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_remove00
static int tolua_fltk_fltk_Fl_Tree_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
 {
  int tolua_ret = (int)  self->remove(item);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: root of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_root00
static int tolua_fltk_fltk_Fl_Tree_root00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'root'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->root();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'root'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: root_label of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_root_label00
static int tolua_fltk_fltk_Fl_Tree_root_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  const char* new_label = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'root_label'", NULL);
#endif
 {
  self->root_label(new_label);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'root_label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_select00
static int tolua_fltk_fltk_Fl_Tree_select00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
  int docallback = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select'", NULL);
#endif
 {
  self->select(item,docallback);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_select01
static int tolua_fltk_fltk_Fl_Tree_select01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  const char* path = ((const char*)  tolua_tostring(tolua_S,2,0));
  int docallback = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select'", NULL);
#endif
 {
  int tolua_ret = (int)  self->select(path,docallback);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_select00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_all of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_select_all00
static int tolua_fltk_fltk_Fl_Tree_select_all00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
  int docallback = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_all'", NULL);
#endif
 {
  int tolua_ret = (int)  self->select_all(item,docallback);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_all'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_only of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_select_only00
static int tolua_fltk_fltk_Fl_Tree_select_only00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* selitem = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
  int docallback = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_only'", NULL);
#endif
 {
  int tolua_ret = (int)  self->select_only(selitem,docallback);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_only'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_toggle of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_select_toggle00
static int tolua_fltk_fltk_Fl_Tree_select_toggle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
  int docallback = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_toggle'", NULL);
#endif
 {
  self->select_toggle(item,docallback);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_toggle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectbox of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_selectbox00
static int tolua_fltk_fltk_Fl_Tree_selectbox00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectbox'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  self->selectbox();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Boxtype opt = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 self->selectbox(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectbox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectmode of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_selectmode00
static int tolua_fltk_fltk_Fl_Tree_selectmode00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectmode'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Tree_Select tolua_ret = (Fl_Tree_Select)  self->selectmode();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Tree_Select opt = ((Fl_Tree_Select) (int)  tolua_tonumber(tolua_S,2,0));
 self->selectmode(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectmode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show_self of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_show_self00
static int tolua_fltk_fltk_Fl_Tree_show_self00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show_self'", NULL);
#endif
 {
  self->show_self();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show_self'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: showcollapse of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_showcollapse00
static int tolua_fltk_fltk_Fl_Tree_showcollapse00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'showcollapse'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->showcollapse();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->showcollapse(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'showcollapse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: showroot of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_showroot00
static int tolua_fltk_fltk_Fl_Tree_showroot00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'showroot'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->showroot();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->showroot(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'showroot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sortorder of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_sortorder00
static int tolua_fltk_fltk_Fl_Tree_sortorder00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sortorder'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Tree_Sort tolua_ret = (Fl_Tree_Sort)  self->sortorder();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Tree_Sort opt = ((Fl_Tree_Sort) (int)  tolua_tonumber(tolua_S,2,0));
 self->sortorder(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sortorder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: usericon of class  Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_usericon00
static int tolua_fltk_fltk_Fl_Tree_usericon00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree* self = (Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'usericon'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Image* tolua_ret = (Fl_Image*)  self->usericon();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Image* opt = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
 self->usericon(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'usericon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Tree : public Fl_Tree, public ToluaBase {
public:
	 int  handle( int e) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Tree_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)e);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Tree:: handle(e);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Tree:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Tree:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Tree:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Tree:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Tree:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Tree:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Tree:: show();
		};
	};

	 int Fl_Tree__handle( int e) {
		return ( int )Fl_Tree::handle(e);
	};
	 Fl_Group* Fl_Tree__as_group( void ) {
		return ( Fl_Group* )Fl_Tree::as_group();
	};
	 Fl_Window* Fl_Tree__as_window( void ) {
		return ( Fl_Window* )Fl_Tree::as_window();
	};
	 void Fl_Tree__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Tree::do_callback(o,arg);
	};
	 void Fl_Tree__draw( void ) {
		Fl_Tree::draw();
	};
	 void Fl_Tree__hide( void ) {
		Fl_Tree::hide();
	};
	 void Fl_Tree__resize( int x, int y, int w, int h) {
		Fl_Tree::resize(x,y,w,h);
	};
	 void Fl_Tree__show( void ) {
		Fl_Tree::show();
	};
	 Lua__Fl_Tree( int X, int Y, int W, int H, const char* L = 0): Fl_Tree(X,Y,W,H,L){};
};

/* method: tolua__set_instance of class  Lua__Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tree_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Tree_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Tree",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Tree* self = (Lua__Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Tree__handle of class  Lua__Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tree_Fl_Tree__handle00
static int tolua_fltk_fltk_Lua__Fl_Tree_Fl_Tree__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Tree",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Tree* self = (Lua__Fl_Tree*)  tolua_tousertype(tolua_S,1,0);
  int e = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Tree__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Tree__handle(e);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Tree__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tree_new00
static int tolua_fltk_fltk_Lua__Fl_Tree_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Tree",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Tree* tolua_ret = (Lua__Fl_Tree*)  Mtolua_new((Lua__Fl_Tree)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Tree");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Tree */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Tree_new00_local
static int tolua_fltk_fltk_Lua__Fl_Tree_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Tree_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Tree (lua_State* tolua_S)
{
 Lua__Fl_Tree* self = (Lua__Fl_Tree*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_new00
static int tolua_fltk_fltk_Fl_Tree_Item_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Fl_Tree_Prefs",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const Fl_Tree_Prefs* prefs = ((const Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  Mtolua_new((Fl_Tree_Item)(*prefs));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_new00_local
static int tolua_fltk_fltk_Fl_Tree_Item_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Tree_Item_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_new01
static int tolua_fltk_fltk_Fl_Tree_Item_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const Fl_Tree_Item* o = ((const Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  Mtolua_new((Fl_Tree_Item)(o));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_Item_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_new01_local
static int tolua_fltk_fltk_Fl_Tree_Item_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Tree_Item_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: activate of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_activate00
static int tolua_fltk_fltk_Fl_Tree_Item_activate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'activate'", NULL);
#endif
 {
  self->activate(val);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'activate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_add00
static int tolua_fltk_fltk_Fl_Tree_Item_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Fl_Tree_Prefs",0,&tolua_err)) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Tree_Prefs* prefs = ((const Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,2,0));
  const char* new_label = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->add(*prefs,new_label);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_add01
static int tolua_fltk_fltk_Fl_Tree_Item_add01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Fl_Tree_Prefs",0,&tolua_err)) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Tree_Prefs* prefs = ((const Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,2,0));
  char* arr = ((char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->add(*prefs,&arr);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 tolua_pushstring(tolua_S,(const char*)arr);
 }
 }
 return 2;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_Item_add00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: child of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_child00
static int tolua_fltk_fltk_Fl_Tree_Item_child00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'child'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->child(index);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'child'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: children of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_children00
static int tolua_fltk_fltk_Fl_Tree_Item_children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'children'", NULL);
#endif
 {
  int tolua_ret = (int)  self->children();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_children of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_clear_children00
static int tolua_fltk_fltk_Fl_Tree_Item_clear_children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_children'", NULL);
#endif
 {
  self->clear_children();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: close of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_close00
static int tolua_fltk_fltk_Fl_Tree_Item_close00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'close'", NULL);
#endif
 {
  self->close();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'close'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deactivate of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_deactivate00
static int tolua_fltk_fltk_Fl_Tree_Item_deactivate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deactivate'", NULL);
#endif
 {
  self->deactivate();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deactivate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: depth of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_depth00
static int tolua_fltk_fltk_Fl_Tree_Item_depth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'depth'", NULL);
#endif
 {
  int tolua_ret = (int)  self->depth();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'depth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deselect of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_deselect00
static int tolua_fltk_fltk_Fl_Tree_Item_deselect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deselect'", NULL);
#endif
 {
  self->deselect();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deselect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deselect_all of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_deselect_all00
static int tolua_fltk_fltk_Fl_Tree_Item_deselect_all00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deselect_all'", NULL);
#endif
 {
  int tolua_ret = (int)  self->deselect_all();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deselect_all'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_draw00
static int tolua_fltk_fltk_Fl_Tree_Item_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,5,"Fl_Widget",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"const Fl_Tree_Prefs",0,&tolua_err)) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  Fl_Widget* tree = ((Fl_Widget*)  tolua_tousertype(tolua_S,5,0));
  const Fl_Tree_Prefs* prefs = ((const Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,6,0));
  int lastchild = ((int)  tolua_tonumber(tolua_S,7,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
 {
  self->draw(X,Y,W,tree,*prefs,lastchild);
 tolua_pushnumber(tolua_S,(lua_Number)Y);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_on_collapse_icon of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_event_on_collapse_icon00
static int tolua_fltk_fltk_Fl_Tree_Item_event_on_collapse_icon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Fl_Tree_Prefs",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Tree_Prefs* prefs = ((const Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'event_on_collapse_icon'", NULL);
#endif
 {
  int tolua_ret = (int)  self->event_on_collapse_icon(*prefs);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_on_collapse_icon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_on_label of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_event_on_label00
static int tolua_fltk_fltk_Fl_Tree_Item_event_on_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Fl_Tree_Prefs",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Tree_Prefs* prefs = ((const Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'event_on_label'", NULL);
#endif
 {
  int tolua_ret = (int)  self->event_on_label(*prefs);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_on_label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_child of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_find_child00
static int tolua_fltk_fltk_Fl_Tree_Item_find_child00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_child'", NULL);
#endif
 {
  int tolua_ret = (int)  self->find_child(name);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find_child'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_child of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_find_child01
static int tolua_fltk_fltk_Fl_Tree_Item_find_child01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_child'", NULL);
#endif
 {
  int tolua_ret = (int)  self->find_child(item);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_Item_find_child00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_clicked of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_find_clicked00
static int tolua_fltk_fltk_Fl_Tree_Item_find_clicked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Fl_Tree_Prefs",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Tree_Prefs* prefs = ((const Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_clicked'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->find_clicked(*prefs);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find_clicked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find_item of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_find_item00
static int tolua_fltk_fltk_Fl_Tree_Item_find_item00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  char* arr = ((char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find_item'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->find_item(&arr);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 tolua_pushstring(tolua_S,(const char*)arr);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find_item'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: has_children of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_has_children00
static int tolua_fltk_fltk_Fl_Tree_Item_has_children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'has_children'", NULL);
#endif
 {
  int tolua_ret = (int)  self->has_children();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'has_children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_insert00
static int tolua_fltk_fltk_Fl_Tree_Item_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Fl_Tree_Prefs",0,&tolua_err)) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Tree_Prefs* prefs = ((const Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,2,0));
  const char* new_label = ((const char*)  tolua_tostring(tolua_S,3,0));
  int pos = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->insert(*prefs,new_label,pos);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert_above of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_insert_above00
static int tolua_fltk_fltk_Fl_Tree_Item_insert_above00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Fl_Tree_Prefs",0,&tolua_err)) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Tree_Prefs* prefs = ((const Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,2,0));
  const char* new_label = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert_above'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->insert_above(*prefs,new_label);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert_above'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_activated of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_is_activated00
static int tolua_fltk_fltk_Fl_Tree_Item_is_activated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_activated'", NULL);
#endif
 {
  char tolua_ret = (char)  self->is_activated();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_activated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_active of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_is_active00
static int tolua_fltk_fltk_Fl_Tree_Item_is_active00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_active'", NULL);
#endif
 {
  char tolua_ret = (char)  self->is_active();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_active'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_close of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_is_close00
static int tolua_fltk_fltk_Fl_Tree_Item_is_close00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_close'", NULL);
#endif
 {
  int tolua_ret = (int)  self->is_close();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_close'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_open of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_is_open00
static int tolua_fltk_fltk_Fl_Tree_Item_is_open00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_open'", NULL);
#endif
 {
  int tolua_ret = (int)  self->is_open();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_open'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_root of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_is_root00
static int tolua_fltk_fltk_Fl_Tree_Item_is_root00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_root'", NULL);
#endif
 {
  int tolua_ret = (int)  self->is_root();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_root'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: is_selected of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_is_selected00
static int tolua_fltk_fltk_Fl_Tree_Item_is_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'is_selected'", NULL);
#endif
 {
  char tolua_ret = (char)  self->is_selected();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'is_selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_label00
static int tolua_fltk_fltk_Fl_Tree_Item_label00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->label();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->label(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelbgcolor of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_labelbgcolor00
static int tolua_fltk_fltk_Fl_Tree_Item_labelbgcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelbgcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->labelbgcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->labelbgcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelbgcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelcolor of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_labelcolor00
static int tolua_fltk_fltk_Fl_Tree_Item_labelcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->labelcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->labelcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelfgcolor of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_labelfgcolor00
static int tolua_fltk_fltk_Fl_Tree_Item_labelfgcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelfgcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->labelfgcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->labelfgcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelfgcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelfont of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_labelfont00
static int tolua_fltk_fltk_Fl_Tree_Item_labelfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelfont'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->labelfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->labelfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelsize of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_labelsize00
static int tolua_fltk_fltk_Fl_Tree_Item_labelsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelsize'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->labelsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->labelsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: next of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_next00
static int tolua_fltk_fltk_Fl_Tree_Item_next00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'next'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->next();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'next'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: open of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_open00
static int tolua_fltk_fltk_Fl_Tree_Item_open00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'open'", NULL);
#endif
 {
  self->open();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'open'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: open_toggle of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_open_toggle00
static int tolua_fltk_fltk_Fl_Tree_Item_open_toggle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'open_toggle'", NULL);
#endif
 {
  self->open_toggle();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'open_toggle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: parent of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_parent00
static int tolua_fltk_fltk_Fl_Tree_Item_parent00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'parent'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->parent();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Tree_Item* opt = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
 self->parent(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: prev of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_prev00
static int tolua_fltk_fltk_Fl_Tree_Item_prev00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'prev'", NULL);
#endif
 {
  Fl_Tree_Item* tolua_ret = (Fl_Tree_Item*)  self->prev();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'prev'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_child of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_remove_child00
static int tolua_fltk_fltk_Fl_Tree_Item_remove_child00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove_child'", NULL);
#endif
 {
  int tolua_ret = (int)  self->remove_child(item);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_child'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_child of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_remove_child01
static int tolua_fltk_fltk_Fl_Tree_Item_remove_child01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  const char* new_label = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove_child'", NULL);
#endif
 {
  int tolua_ret = (int)  self->remove_child(new_label);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_Item_remove_child00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: select of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_select00
static int tolua_fltk_fltk_Fl_Tree_Item_select00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,1));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select'", NULL);
#endif
 {
  self->select(val);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_all of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_select_all00
static int tolua_fltk_fltk_Fl_Tree_Item_select_all00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_all'", NULL);
#endif
 {
  int tolua_ret = (int)  self->select_all();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_all'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_toggle of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_select_toggle00
static int tolua_fltk_fltk_Fl_Tree_Item_select_toggle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_toggle'", NULL);
#endif
 {
  self->select_toggle();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_toggle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show_self of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_show_self00
static int tolua_fltk_fltk_Fl_Tree_Item_show_self00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  const char* indent = ((const char*)  tolua_tostring(tolua_S,2,""));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show_self'", NULL);
#endif
 {
  self->show_self(indent);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show_self'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: swap_children of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_swap_children00
static int tolua_fltk_fltk_Fl_Tree_Item_swap_children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  int ax = ((int)  tolua_tonumber(tolua_S,2,0));
  int bx = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'swap_children'", NULL);
#endif
 {
  self->swap_children(ax,bx);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'swap_children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: swap_children of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_swap_children01
static int tolua_fltk_fltk_Fl_Tree_Item_swap_children01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* a = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
  Fl_Tree_Item* b = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'swap_children'", NULL);
#endif
 {
  int tolua_ret = (int)  self->swap_children(a,b);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_Item_swap_children00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: user_data of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_user_data00
static int tolua_fltk_fltk_Fl_Tree_Item_user_data00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'user_data'", NULL);
#endif
 {
 if(nparam < 2) {
  void* tolua_ret = (void*)  self->user_data();
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isuserdata(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  void* opt = ((void*)  tolua_touserdata(tolua_S,2,0));
 self->user_data(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'user_data'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: usericon of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_usericon00
static int tolua_fltk_fltk_Fl_Tree_Item_usericon00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'usericon'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Image* tolua_ret = (Fl_Image*)  self->usericon();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Image* opt = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
 self->usericon(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'usericon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: widget of class  Fl_Tree_Item */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_widget00
static int tolua_fltk_fltk_Fl_Tree_Item_widget00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item* self = (Fl_Tree_Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'widget'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->widget();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Widget* opt = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 self->widget(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'widget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Tree_Item_Array */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_Array_new00
static int tolua_fltk_fltk_Fl_Tree_Item_Array_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tree_Item_Array",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int new_chunksize = ((int)  tolua_tonumber(tolua_S,2,10));
 {
  Fl_Tree_Item_Array* tolua_ret = (Fl_Tree_Item_Array*)  Mtolua_new((Fl_Tree_Item_Array)(new_chunksize));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item_Array");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Tree_Item_Array */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_Array_new00_local
static int tolua_fltk_fltk_Fl_Tree_Item_Array_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Tree_Item_Array_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Tree_Item_Array */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_Array_new01
static int tolua_fltk_fltk_Fl_Tree_Item_Array_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tree_Item_Array",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Tree_Item_Array",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const Fl_Tree_Item_Array* o = ((const Fl_Tree_Item_Array*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl_Tree_Item_Array* tolua_ret = (Fl_Tree_Item_Array*)  Mtolua_new((Fl_Tree_Item_Array)(o));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Item_Array");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_Item_Array_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Tree_Item_Array */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_Array_new01_local
static int tolua_fltk_fltk_Fl_Tree_Item_Array_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Tree_Item_Array_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Fl_Tree_Item_Array */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_Array_add00
static int tolua_fltk_fltk_Fl_Tree_Item_Array_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item_Array",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item_Array* self = (Fl_Tree_Item_Array*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* val = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  self->add(val);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Fl_Tree_Item_Array */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_Array_clear00
static int tolua_fltk_fltk_Fl_Tree_Item_Array_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item_Array",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item_Array* self = (Fl_Tree_Item_Array*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Fl_Tree_Item_Array */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_Array_insert00
static int tolua_fltk_fltk_Fl_Tree_Item_Array_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item_Array",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item_Array* self = (Fl_Tree_Item_Array*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Tree_Item* new_item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  self->insert(pos,new_item);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  Fl_Tree_Item_Array */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_Array_remove00
static int tolua_fltk_fltk_Fl_Tree_Item_Array_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item_Array",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item_Array* self = (Fl_Tree_Item_Array*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
 {
  self->remove(index);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  Fl_Tree_Item_Array */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_Array_remove01
static int tolua_fltk_fltk_Fl_Tree_Item_Array_remove01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item_Array",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Tree_Item",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree_Item_Array* self = (Fl_Tree_Item_Array*)  tolua_tousertype(tolua_S,1,0);
  Fl_Tree_Item* item = ((Fl_Tree_Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'", NULL);
#endif
 {
  int tolua_ret = (int)  self->remove(item);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_Item_Array_remove00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: swap of class  Fl_Tree_Item_Array */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_Array_swap00
static int tolua_fltk_fltk_Fl_Tree_Item_Array_swap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item_Array",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item_Array* self = (Fl_Tree_Item_Array*)  tolua_tousertype(tolua_S,1,0);
  int ax = ((int)  tolua_tonumber(tolua_S,2,0));
  int bx = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'swap'", NULL);
#endif
 {
  self->swap(ax,bx);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'swap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: total of class  Fl_Tree_Item_Array */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Item_Array_total00
static int tolua_fltk_fltk_Fl_Tree_Item_Array_total00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Item_Array",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Item_Array* self = (Fl_Tree_Item_Array*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'total'", NULL);
#endif
 {
  int tolua_ret = (int)  self->total();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'total'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_new00
static int tolua_fltk_fltk_Fl_Tree_Prefs_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Tree_Prefs* tolua_ret = (Fl_Tree_Prefs*)  Mtolua_new((Fl_Tree_Prefs)());
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Tree_Prefs");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_new00_local
static int tolua_fltk_fltk_Fl_Tree_Prefs_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Tree_Prefs_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: bgcolor of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_bgcolor00
static int tolua_fltk_fltk_Fl_Tree_Prefs_bgcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bgcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->bgcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->bgcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bgcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: closeicon of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_closeicon00
static int tolua_fltk_fltk_Fl_Tree_Prefs_closeicon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'closeicon'", NULL);
#endif
 {
  Fl_Image* tolua_ret = (Fl_Image*)  self->closeicon();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closeicon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: closeicon of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_closeicon01
static int tolua_fltk_fltk_Fl_Tree_Prefs_closeicon01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
  Fl_Image* val = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'closeicon'", NULL);
#endif
 {
  self->closeicon(val);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Tree_Prefs_closeicon00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: connectorcolor of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_connectorcolor00
static int tolua_fltk_fltk_Fl_Tree_Prefs_connectorcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'connectorcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->connectorcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->connectorcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'connectorcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: connectorstyle of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_connectorstyle00
static int tolua_fltk_fltk_Fl_Tree_Prefs_connectorstyle00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'connectorstyle'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Tree_Connector tolua_ret = (Fl_Tree_Connector)  self->connectorstyle();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Tree_Connector opt = ((Fl_Tree_Connector) (int)  tolua_tonumber(tolua_S,2,0));
 self->connectorstyle(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'connectorstyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: connectorwidth of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_connectorwidth00
static int tolua_fltk_fltk_Fl_Tree_Prefs_connectorwidth00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'connectorwidth'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->connectorwidth();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->connectorwidth(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'connectorwidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fgcolor of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_fgcolor00
static int tolua_fltk_fltk_Fl_Tree_Prefs_fgcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fgcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->fgcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->fgcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fgcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inactivecolor of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_inactivecolor00
static int tolua_fltk_fltk_Fl_Tree_Prefs_inactivecolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inactivecolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->inactivecolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->inactivecolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inactivecolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelfont of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_labelfont00
static int tolua_fltk_fltk_Fl_Tree_Prefs_labelfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelfont'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->labelfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->labelfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelmarginleft of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_labelmarginleft00
static int tolua_fltk_fltk_Fl_Tree_Prefs_labelmarginleft00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelmarginleft'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->labelmarginleft();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->labelmarginleft(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelmarginleft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelsize of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_labelsize00
static int tolua_fltk_fltk_Fl_Tree_Prefs_labelsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'labelsize'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->labelsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->labelsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: linespacing of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_linespacing00
static int tolua_fltk_fltk_Fl_Tree_Prefs_linespacing00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'linespacing'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->linespacing();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->linespacing(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'linespacing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: marginleft of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_marginleft00
static int tolua_fltk_fltk_Fl_Tree_Prefs_marginleft00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'marginleft'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->marginleft();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->marginleft(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'marginleft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: margintop of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_margintop00
static int tolua_fltk_fltk_Fl_Tree_Prefs_margintop00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'margintop'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->margintop();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->margintop(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'margintop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: openchild_marginbottom of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_openchild_marginbottom00
static int tolua_fltk_fltk_Fl_Tree_Prefs_openchild_marginbottom00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'openchild_marginbottom'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->openchild_marginbottom();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->openchild_marginbottom(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'openchild_marginbottom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: openicon of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_openicon00
static int tolua_fltk_fltk_Fl_Tree_Prefs_openicon00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'openicon'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Image* tolua_ret = (Fl_Image*)  self->openicon();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Image* opt = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
 self->openicon(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'openicon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectbox of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_selectbox00
static int tolua_fltk_fltk_Fl_Tree_Prefs_selectbox00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectbox'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  self->selectbox();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Boxtype opt = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 self->selectbox(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectbox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectcolor of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_selectcolor00
static int tolua_fltk_fltk_Fl_Tree_Prefs_selectcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->selectcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->selectcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectmode of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_selectmode00
static int tolua_fltk_fltk_Fl_Tree_Prefs_selectmode00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectmode'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Tree_Select tolua_ret = (Fl_Tree_Select)  self->selectmode();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Tree_Select opt = ((Fl_Tree_Select) (int)  tolua_tonumber(tolua_S,2,0));
 self->selectmode(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectmode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: showcollapse of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_showcollapse00
static int tolua_fltk_fltk_Fl_Tree_Prefs_showcollapse00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'showcollapse'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->showcollapse();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->showcollapse(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'showcollapse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: showroot of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_showroot00
static int tolua_fltk_fltk_Fl_Tree_Prefs_showroot00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'showroot'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->showroot();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->showroot(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'showroot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sortorder of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_sortorder00
static int tolua_fltk_fltk_Fl_Tree_Prefs_sortorder00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sortorder'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Tree_Sort tolua_ret = (Fl_Tree_Sort)  self->sortorder();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Tree_Sort opt = ((Fl_Tree_Sort) (int)  tolua_tonumber(tolua_S,2,0));
 self->sortorder(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sortorder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: usericon of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_usericon00
static int tolua_fltk_fltk_Fl_Tree_Prefs_usericon00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'usericon'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Image* tolua_ret = (Fl_Image*)  self->usericon();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Image");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Image",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Image* opt = ((Fl_Image*)  tolua_tousertype(tolua_S,2,0));
 self->usericon(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'usericon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: usericonmarginleft of class  Fl_Tree_Prefs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Tree_Prefs_usericonmarginleft00
static int tolua_fltk_fltk_Fl_Tree_Prefs_usericonmarginleft00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Tree_Prefs",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Tree_Prefs* self = (Fl_Tree_Prefs*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'usericonmarginleft'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->usericonmarginleft();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->usericonmarginleft(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'usericonmarginleft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bounds of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_bounds00
static int tolua_fltk_fltk_Fl_Valuator_bounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
  double a = ((double)  tolua_tonumber(tolua_S,2,0));
  double b = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bounds'", NULL);
#endif
 {
  self->bounds(a,b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clamp of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_clamp00
static int tolua_fltk_fltk_Fl_Valuator_clamp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
  double tolua_var_120 = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clamp'", NULL);
#endif
 {
  double tolua_ret = (double)  self->clamp(tolua_var_120);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clamp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: format of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_format00
static int tolua_fltk_fltk_Fl_Valuator_format00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
  char* tolua_var_121 = ((char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'format'", NULL);
#endif
 {
  int tolua_ret = (int)  self->format(tolua_var_121);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'format'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: increment of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_increment00
static int tolua_fltk_fltk_Fl_Valuator_increment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
  double tolua_var_122 = ((double)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_123 = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'increment'", NULL);
#endif
 {
  double tolua_ret = (double)  self->increment(tolua_var_122,tolua_var_123);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'increment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: maximum of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_maximum00
static int tolua_fltk_fltk_Fl_Valuator_maximum00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'maximum'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->maximum();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->maximum(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'maximum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: minimum of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_minimum00
static int tolua_fltk_fltk_Fl_Valuator_minimum00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'minimum'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->minimum();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->minimum(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'minimum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: precision of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_precision00
static int tolua_fltk_fltk_Fl_Valuator_precision00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_124 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'precision'", NULL);
#endif
 {
  self->precision(tolua_var_124);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'precision'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: range of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_range00
static int tolua_fltk_fltk_Fl_Valuator_range00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
  double a = ((double)  tolua_tonumber(tolua_S,2,0));
  double b = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'range'", NULL);
#endif
 {
  self->range(a,b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'range'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: round of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_round00
static int tolua_fltk_fltk_Fl_Valuator_round00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
  double tolua_var_125 = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'round'", NULL);
#endif
 {
  double tolua_ret = (double)  self->round(tolua_var_125);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'round'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step_int of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_step_int00
static int tolua_fltk_fltk_Fl_Valuator_step_int00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
  int a = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step_int'", NULL);
#endif
 {
  self->step_int(a);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'step_int'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_step00
static int tolua_fltk_fltk_Fl_Valuator_step00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->step();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->step(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Valuator_value00
static int tolua_fltk_fltk_Fl_Valuator_value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Valuator",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Valuator* self = (Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Valuator : public Fl_Valuator, public ToluaBase {
public:
	 int  format( char* tolua_var_121) {
		if (push_method("format",  tolua_fltk_fltk_Fl_Valuator_format00)) {
			tolua_pushstring(lua_state, (const char*)tolua_var_121);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Valuator:: format(tolua_var_121);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Valuator:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Valuator:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Valuator:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Valuator:: draw();
		};
	};
	 int  handle( int event) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Widget_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)event);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Valuator:: handle(event);
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Valuator:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Valuator:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Valuator:: show();
		};
	};

	 int Fl_Valuator__format( char* tolua_var_121) {
		return ( int )Fl_Valuator::format(tolua_var_121);
	};
	 Fl_Group* Fl_Valuator__as_group( void ) {
		return ( Fl_Group* )Fl_Valuator::as_group();
	};
	 Fl_Window* Fl_Valuator__as_window( void ) {
		return ( Fl_Window* )Fl_Valuator::as_window();
	};
	 void Fl_Valuator__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Valuator::do_callback(o,arg);
	};
	 void Fl_Valuator__draw( void ) {
		Fl_Valuator::draw();
	};
	 int Fl_Valuator__handle( int event) {
		return ( int )Fl_Valuator::handle(event);
	};
	 void Fl_Valuator__hide( void ) {
		Fl_Valuator::hide();
	};
	 void Fl_Valuator__resize( int x, int y, int w, int h) {
		Fl_Valuator::resize(x,y,w,h);
	};
	 void Fl_Valuator__show( void ) {
		Fl_Valuator::show();
	};
};

/* method: tolua__set_instance of class  Lua__Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Valuator_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Valuator_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Valuator",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Valuator* self = (Lua__Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Valuator__format of class  Lua__Fl_Valuator */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Valuator_Fl_Valuator__format00
static int tolua_fltk_fltk_Lua__Fl_Valuator_Fl_Valuator__format00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Valuator",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Valuator* self = (Lua__Fl_Valuator*)  tolua_tousertype(tolua_S,1,0);
  char* tolua_var_121 = ((char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Valuator__format'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Valuator__format(tolua_var_121);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Valuator__format'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Adjuster */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Adjuster_new00
static int tolua_fltk_fltk_Fl_Adjuster_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Adjuster",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Adjuster* tolua_ret = (Fl_Adjuster*)  Mtolua_new((Fl_Adjuster)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Adjuster");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Adjuster */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Adjuster_new00_local
static int tolua_fltk_fltk_Fl_Adjuster_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Adjuster_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: soft of class  Fl_Adjuster */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Adjuster_soft00
static int tolua_fltk_fltk_Fl_Adjuster_soft00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Adjuster",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Adjuster* self = (Fl_Adjuster*)  tolua_tousertype(tolua_S,1,0);
  int s = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'soft'", NULL);
#endif
 {
  self->soft(s);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'soft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: soft of class  Fl_Adjuster */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Adjuster_soft01
static int tolua_fltk_fltk_Fl_Adjuster_soft01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Adjuster",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Adjuster* self = (Fl_Adjuster*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'soft'", NULL);
#endif
 {
  int tolua_ret = (int)  self->soft();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Adjuster_soft00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Counter_new00
static int tolua_fltk_fltk_Fl_Counter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Counter",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Counter* tolua_ret = (Fl_Counter*)  Mtolua_new((Fl_Counter)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Counter");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Counter_new00_local
static int tolua_fltk_fltk_Fl_Counter_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Counter_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Counter_handle00
static int tolua_fltk_fltk_Fl_Counter_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Counter",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Counter* self = (Fl_Counter*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_126 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_126);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: lstep of class  Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Counter_lstep00
static int tolua_fltk_fltk_Fl_Counter_lstep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Counter",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Counter* self = (Fl_Counter*)  tolua_tousertype(tolua_S,1,0);
  double a = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'lstep'", NULL);
#endif
 {
  self->lstep(a);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'lstep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Counter_step00
static int tolua_fltk_fltk_Fl_Counter_step00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Counter",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Counter* self = (Fl_Counter*)  tolua_tousertype(tolua_S,1,0);
  double a = ((double)  tolua_tonumber(tolua_S,2,0));
  double b = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
 {
  self->step(a,b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Counter_step01
static int tolua_fltk_fltk_Fl_Counter_step01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Counter",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Counter* self = (Fl_Counter*)  tolua_tousertype(tolua_S,1,0);
  double a = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
 {
  self->step(a);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Counter_step00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Counter_step02
static int tolua_fltk_fltk_Fl_Counter_step02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Counter",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Counter* self = (Fl_Counter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
 {
  double tolua_ret = (double)  self->step();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Counter_step01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Counter_textcolor00
static int tolua_fltk_fltk_Fl_Counter_textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Counter",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Counter* self = (Fl_Counter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Counter_textfont00
static int tolua_fltk_fltk_Fl_Counter_textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Counter",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Counter* self = (Fl_Counter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Counter_textsize00
static int tolua_fltk_fltk_Fl_Counter_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Counter",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Counter* self = (Fl_Counter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Counter : public Fl_Counter, public ToluaBase {
public:
	 int  handle( int tolua_var_126) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Counter_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_126);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Counter:: handle(tolua_var_126);
		};
	};
	 int  format( char* tolua_var_121) {
		if (push_method("format",  tolua_fltk_fltk_Fl_Valuator_format00)) {
			tolua_pushstring(lua_state, (const char*)tolua_var_121);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Counter:: format(tolua_var_121);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Counter:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Counter:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Counter:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Counter:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Counter:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Counter:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Counter:: show();
		};
	};

	 int Fl_Counter__handle( int tolua_var_126) {
		return ( int )Fl_Counter::handle(tolua_var_126);
	};
	 int Fl_Counter__format( char* tolua_var_121) {
		return ( int )Fl_Counter::format(tolua_var_121);
	};
	 Fl_Group* Fl_Counter__as_group( void ) {
		return ( Fl_Group* )Fl_Counter::as_group();
	};
	 Fl_Window* Fl_Counter__as_window( void ) {
		return ( Fl_Window* )Fl_Counter::as_window();
	};
	 void Fl_Counter__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Counter::do_callback(o,arg);
	};
	 void Fl_Counter__draw( void ) {
		Fl_Counter::draw();
	};
	 void Fl_Counter__hide( void ) {
		Fl_Counter::hide();
	};
	 void Fl_Counter__resize( int x, int y, int w, int h) {
		Fl_Counter::resize(x,y,w,h);
	};
	 void Fl_Counter__show( void ) {
		Fl_Counter::show();
	};
	 Lua__Fl_Counter( int X, int Y, int W, int H, const char* L = 0): Fl_Counter(X,Y,W,H,L){};
};

/* method: tolua__set_instance of class  Lua__Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Counter_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Counter_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Counter",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Counter* self = (Lua__Fl_Counter*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Counter__handle of class  Lua__Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Counter_Fl_Counter__handle00
static int tolua_fltk_fltk_Lua__Fl_Counter_Fl_Counter__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Counter",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Counter* self = (Lua__Fl_Counter*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_126 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Counter__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Counter__handle(tolua_var_126);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Counter__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Counter_new00
static int tolua_fltk_fltk_Lua__Fl_Counter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Counter",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Counter* tolua_ret = (Lua__Fl_Counter*)  Mtolua_new((Lua__Fl_Counter)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Counter");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Counter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Counter_new00_local
static int tolua_fltk_fltk_Lua__Fl_Counter_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Counter_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Counter (lua_State* tolua_S)
{
 Lua__Fl_Counter* self = (Lua__Fl_Counter*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Dial_new00
static int tolua_fltk_fltk_Fl_Dial_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Dial",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Dial* tolua_ret = (Fl_Dial*)  Mtolua_new((Fl_Dial)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Dial");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Dial_new00_local
static int tolua_fltk_fltk_Fl_Dial_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Dial_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: angle1 of class  Fl_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Dial_angle100
static int tolua_fltk_fltk_Fl_Dial_angle100(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Dial",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Dial* self = (Fl_Dial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'angle1'", NULL);
#endif
 {
 if(nparam < 2) {
  short tolua_ret = (short)  self->angle1();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  short opt = ((short)  tolua_tonumber(tolua_S,2,0));
 self->angle1(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'angle1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: angle2 of class  Fl_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Dial_angle200
static int tolua_fltk_fltk_Fl_Dial_angle200(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Dial",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Dial* self = (Fl_Dial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'angle2'", NULL);
#endif
 {
 if(nparam < 2) {
  short tolua_ret = (short)  self->angle2();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  short opt = ((short)  tolua_tonumber(tolua_S,2,0));
 self->angle2(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'angle2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: angles of class  Fl_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Dial_angles00
static int tolua_fltk_fltk_Fl_Dial_angles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Dial",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Dial* self = (Fl_Dial*)  tolua_tousertype(tolua_S,1,0);
  short a = ((short)  tolua_tonumber(tolua_S,2,0));
  short b = ((short)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'angles'", NULL);
#endif
 {
  self->angles(a,b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'angles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Dial_handle00
static int tolua_fltk_fltk_Fl_Dial_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Dial",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Dial* self = (Fl_Dial*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_127 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_127);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Dial : public Fl_Dial, public ToluaBase {
public:
	 int  handle( int tolua_var_127) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Dial_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_127);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Dial:: handle(tolua_var_127);
		};
	};
	 int  format( char* tolua_var_121) {
		if (push_method("format",  tolua_fltk_fltk_Fl_Valuator_format00)) {
			tolua_pushstring(lua_state, (const char*)tolua_var_121);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Dial:: format(tolua_var_121);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Dial:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Dial:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Dial:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Dial:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Dial:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Dial:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Dial:: show();
		};
	};

	 int Fl_Dial__handle( int tolua_var_127) {
		return ( int )Fl_Dial::handle(tolua_var_127);
	};
	 int Fl_Dial__format( char* tolua_var_121) {
		return ( int )Fl_Dial::format(tolua_var_121);
	};
	 Fl_Group* Fl_Dial__as_group( void ) {
		return ( Fl_Group* )Fl_Dial::as_group();
	};
	 Fl_Window* Fl_Dial__as_window( void ) {
		return ( Fl_Window* )Fl_Dial::as_window();
	};
	 void Fl_Dial__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Dial::do_callback(o,arg);
	};
	 void Fl_Dial__draw( void ) {
		Fl_Dial::draw();
	};
	 void Fl_Dial__hide( void ) {
		Fl_Dial::hide();
	};
	 void Fl_Dial__resize( int x, int y, int w, int h) {
		Fl_Dial::resize(x,y,w,h);
	};
	 void Fl_Dial__show( void ) {
		Fl_Dial::show();
	};
	 Lua__Fl_Dial( int x, int y, int w, int h, const char* l = 0): Fl_Dial(x,y,w,h,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Dial_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Dial_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Dial",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Dial* self = (Lua__Fl_Dial*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Dial__handle of class  Lua__Fl_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Dial_Fl_Dial__handle00
static int tolua_fltk_fltk_Lua__Fl_Dial_Fl_Dial__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Dial",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Dial* self = (Lua__Fl_Dial*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_127 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Dial__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Dial__handle(tolua_var_127);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Dial__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Dial_new00
static int tolua_fltk_fltk_Lua__Fl_Dial_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Dial",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Dial* tolua_ret = (Lua__Fl_Dial*)  Mtolua_new((Lua__Fl_Dial)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Dial");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Dial_new00_local
static int tolua_fltk_fltk_Lua__Fl_Dial_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Dial_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Dial (lua_State* tolua_S)
{
 Lua__Fl_Dial* self = (Lua__Fl_Dial*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Input_new00
static int tolua_fltk_fltk_Fl_Value_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Value_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Value_Input* tolua_ret = (Fl_Value_Input*)  Mtolua_new((Fl_Value_Input)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Value_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Input_new00_local
static int tolua_fltk_fltk_Fl_Value_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Value_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: cursor_color of class  Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Input_cursor_color00
static int tolua_fltk_fltk_Fl_Value_Input_cursor_color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Input",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Input* self = (Fl_Value_Input*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cursor_color'", NULL);
#endif
 {
  unsigned int tolua_ret = ( unsigned int)  self->cursor_color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cursor_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cursor_color of class  Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Input_cursor_color01
static int tolua_fltk_fltk_Fl_Value_Input_cursor_color01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Value_Input* self = (Fl_Value_Input*)  tolua_tousertype(tolua_S,1,0);
  unsigned int n = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cursor_color'", NULL);
#endif
 {
  self->cursor_color(n);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Value_Input_cursor_color00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Input_handle00
static int tolua_fltk_fltk_Fl_Value_Input_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Input* self = (Fl_Value_Input*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_128 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_128);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Input_resize00
static int tolua_fltk_fltk_Fl_Value_Input_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Input* self = (Fl_Value_Input*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_129 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_130 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_131 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_132 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(tolua_var_129,tolua_var_130,tolua_var_131,tolua_var_132);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shortcut of class  Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Input_shortcut00
static int tolua_fltk_fltk_Fl_Value_Input_shortcut00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Input",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Input* self = (Fl_Value_Input*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shortcut'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->shortcut();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->shortcut(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: soft of class  Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Input_soft00
static int tolua_fltk_fltk_Fl_Value_Input_soft00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Input",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Input* self = (Fl_Value_Input*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'soft'", NULL);
#endif
 {
 if(nparam < 2) {
  char tolua_ret = (char)  self->soft();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char opt = ((char)  tolua_tonumber(tolua_S,2,0));
 self->soft(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'soft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Input_textcolor00
static int tolua_fltk_fltk_Fl_Value_Input_textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Input",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Input* self = (Fl_Value_Input*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Input_textfont00
static int tolua_fltk_fltk_Fl_Value_Input_textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Input",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Input* self = (Fl_Value_Input*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Input_textsize00
static int tolua_fltk_fltk_Fl_Value_Input_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Input",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Input* self = (Fl_Value_Input*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Value_Input : public Fl_Value_Input, public ToluaBase {
public:
	 int  handle( int tolua_var_128) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Value_Input_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_128);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Value_Input:: handle(tolua_var_128);
		};
	};
	 int  format( char* tolua_var_121) {
		if (push_method("format",  tolua_fltk_fltk_Fl_Valuator_format00)) {
			tolua_pushstring(lua_state, (const char*)tolua_var_121);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Value_Input:: format(tolua_var_121);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Value_Input:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Value_Input:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Value_Input:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Value_Input:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Value_Input:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Value_Input:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Value_Input:: show();
		};
	};

	 int Fl_Value_Input__handle( int tolua_var_128) {
		return ( int )Fl_Value_Input::handle(tolua_var_128);
	};
	 int Fl_Value_Input__format( char* tolua_var_121) {
		return ( int )Fl_Value_Input::format(tolua_var_121);
	};
	 Fl_Group* Fl_Value_Input__as_group( void ) {
		return ( Fl_Group* )Fl_Value_Input::as_group();
	};
	 Fl_Window* Fl_Value_Input__as_window( void ) {
		return ( Fl_Window* )Fl_Value_Input::as_window();
	};
	 void Fl_Value_Input__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Value_Input::do_callback(o,arg);
	};
	 void Fl_Value_Input__draw( void ) {
		Fl_Value_Input::draw();
	};
	 void Fl_Value_Input__hide( void ) {
		Fl_Value_Input::hide();
	};
	 void Fl_Value_Input__resize( int x, int y, int w, int h) {
		Fl_Value_Input::resize(x,y,w,h);
	};
	 void Fl_Value_Input__show( void ) {
		Fl_Value_Input::show();
	};
	 Lua__Fl_Value_Input( int x, int y, int w, int h, const char* l = 0): Fl_Value_Input(x,y,w,h,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Value_Input_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Value_Input_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Value_Input",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Value_Input* self = (Lua__Fl_Value_Input*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Value_Input__handle of class  Lua__Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Value_Input_Fl_Value_Input__handle00
static int tolua_fltk_fltk_Lua__Fl_Value_Input_Fl_Value_Input__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Value_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Value_Input* self = (Lua__Fl_Value_Input*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_128 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Value_Input__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Value_Input__handle(tolua_var_128);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Value_Input__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Value_Input_new00
static int tolua_fltk_fltk_Lua__Fl_Value_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Value_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Value_Input* tolua_ret = (Lua__Fl_Value_Input*)  Mtolua_new((Lua__Fl_Value_Input)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Value_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Value_Input_new00_local
static int tolua_fltk_fltk_Lua__Fl_Value_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Value_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Value_Input (lua_State* tolua_S)
{
 Lua__Fl_Value_Input* self = (Lua__Fl_Value_Input*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Value_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Output_new00
static int tolua_fltk_fltk_Fl_Value_Output_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Value_Output",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Value_Output* tolua_ret = (Fl_Value_Output*)  Mtolua_new((Fl_Value_Output)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Value_Output");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Value_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Output_new00_local
static int tolua_fltk_fltk_Fl_Value_Output_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Value_Output_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Value_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Output_handle00
static int tolua_fltk_fltk_Fl_Value_Output_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Output",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Output* self = (Fl_Value_Output*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_133 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_133);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: soft of class  Fl_Value_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Output_soft00
static int tolua_fltk_fltk_Fl_Value_Output_soft00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Output",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Output* self = (Fl_Value_Output*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'soft'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned char tolua_ret = ( unsigned char)  self->soft();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned char opt = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
 self->soft(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'soft'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Value_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Output_textcolor00
static int tolua_fltk_fltk_Fl_Value_Output_textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Output",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Output* self = (Fl_Value_Output*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Value_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Output_textfont00
static int tolua_fltk_fltk_Fl_Value_Output_textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Output",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Output* self = (Fl_Value_Output*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Value_Output */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Output_textsize00
static int tolua_fltk_fltk_Fl_Value_Output_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Output",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Output* self = (Fl_Value_Output*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_new00
static int tolua_fltk_fltk_Fl_Window_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* title = ((const char*)  tolua_tostring(tolua_S,4,0));
 {
  Fl_Window* tolua_ret = (Fl_Window*)  Mtolua_new((Fl_Window)(w,h,title));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_new00_local
static int tolua_fltk_fltk_Fl_Window_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Window_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_new01
static int tolua_fltk_fltk_Fl_Window_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* title = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Window* tolua_ret = (Fl_Window*)  Mtolua_new((Fl_Window)(x,y,w,h,title));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Window_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_new01_local
static int tolua_fltk_fltk_Fl_Window_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Window_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: as_window of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_as_window00
static int tolua_fltk_fltk_Fl_Window_as_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'as_window'", NULL);
#endif
 {
  Fl_Window* tolua_ret = (Fl_Window*)  self->as_window();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'as_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: border of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_border00
static int tolua_fltk_fltk_Fl_Window_border00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'border'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->border();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->border(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_border of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_clear_border00
static int tolua_fltk_fltk_Fl_Window_clear_border00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_border'", NULL);
#endif
 {
  self->clear_border();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy_label of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_copy_label00
static int tolua_fltk_fltk_Fl_Window_copy_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  const char* a = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy_label'", NULL);
#endif
 {
  self->copy_label(a);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy_label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: current of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_current00
static int tolua_fltk_fltk_Fl_Window_current00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Window* tolua_ret = (Fl_Window*)  Fl_Window::current();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cursor of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_cursor00
static int tolua_fltk_fltk_Fl_Window_cursor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  Fl_Cursor tolua_var_134 = ((Fl_Cursor) (int)  tolua_tonumber(tolua_S,2,0));
  unsigned int tolua_var_135 = (( unsigned int)  tolua_tonumber(tolua_S,3,FL_BLACK));
  unsigned int tolua_var_136 = (( unsigned int)  tolua_tonumber(tolua_S,4,FL_WHITE));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cursor'", NULL);
#endif
 {
  self->cursor(tolua_var_134,tolua_var_135,tolua_var_136);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cursor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: default_callback of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_default_callback00
static int tolua_fltk_fltk_Fl_Window_default_callback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Window",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* tolua_var_137 = ((Fl_Window*)  tolua_tousertype(tolua_S,2,0));
  void* v = ((void*)  tolua_touserdata(tolua_S,3,0));
 {
  Fl_Window::default_callback(tolua_var_137,v);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'default_callback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: default_cursor of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_default_cursor00
static int tolua_fltk_fltk_Fl_Window_default_cursor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  Fl_Cursor tolua_var_138 = ((Fl_Cursor) (int)  tolua_tonumber(tolua_S,2,0));
  unsigned int tolua_var_139 = (( unsigned int)  tolua_tonumber(tolua_S,3,FL_BLACK));
  unsigned int tolua_var_140 = (( unsigned int)  tolua_tonumber(tolua_S,4,FL_WHITE));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'default_cursor'", NULL);
#endif
 {
  self->default_cursor(tolua_var_138,tolua_var_139,tolua_var_140);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'default_cursor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: free_position of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_free_position00
static int tolua_fltk_fltk_Fl_Window_free_position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'free_position'", NULL);
#endif
 {
  self->free_position();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'free_position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fullscreen of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_fullscreen00
static int tolua_fltk_fltk_Fl_Window_fullscreen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fullscreen'", NULL);
#endif
 {
  self->fullscreen();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fullscreen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fullscreen_off of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_fullscreen_off00
static int tolua_fltk_fltk_Fl_Window_fullscreen_off00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_141 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_142 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_143 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_144 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fullscreen_off'", NULL);
#endif
 {
  self->fullscreen_off(tolua_var_141,tolua_var_142,tolua_var_143,tolua_var_144);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fullscreen_off'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_handle00
static int tolua_fltk_fltk_Fl_Window_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_145 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_145);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hide of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_hide00
static int tolua_fltk_fltk_Fl_Window_hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hide'", NULL);
#endif
 {
  self->hide();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hotspot of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_hotspot00
static int tolua_fltk_fltk_Fl_Window_hotspot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int offscreen = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hotspot'", NULL);
#endif
 {
  self->hotspot(x,y,offscreen);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hotspot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hotspot of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_hotspot01
static int tolua_fltk_fltk_Fl_Window_hotspot01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  const Fl_Widget* tolua_var_146 = ((const Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int offscreen = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hotspot'", NULL);
#endif
 {
  self->hotspot(tolua_var_146,offscreen);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Window_hotspot00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: icon of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_icon00
static int tolua_fltk_fltk_Fl_Window_icon00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'icon'", NULL);
#endif
 {
 if(nparam < 2) {
  void* tolua_ret = (void*)  self->icon();
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isuserdata(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  void* opt = ((void*)  tolua_touserdata(tolua_S,2,0));
 self->icon(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'icon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_Fl_Window_load_icon of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_load_icon00
static int tolua_fltk_fltk_Fl_Window_load_icon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  char* id = ((char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fltk_Fl_Window_load_icon'", NULL);
#endif
 {
  fltk_Fl_Window_load_icon(self,id);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load_icon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: iconize of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_iconize00
static int tolua_fltk_fltk_Fl_Window_iconize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'iconize'", NULL);
#endif
 {
  self->iconize();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'iconize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: iconlabel of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_iconlabel00
static int tolua_fltk_fltk_Fl_Window_iconlabel00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'iconlabel'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->iconlabel();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->iconlabel(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'iconlabel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: label of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_label00
static int tolua_fltk_fltk_Fl_Window_label00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'label'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->label();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->label(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: make_current of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_make_current00
static int tolua_fltk_fltk_Fl_Window_make_current00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'make_current'", NULL);
#endif
 {
  self->make_current();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'make_current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: menu_window of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_menu_window00
static int tolua_fltk_fltk_Fl_Window_menu_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'menu_window'", NULL);
#endif
 {
  int tolua_ret = (int)  self->menu_window();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'menu_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: modal of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_modal00
static int tolua_fltk_fltk_Fl_Window_modal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'modal'", NULL);
#endif
 {
  int tolua_ret = (int)  self->modal();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'modal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: non_modal of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_non_modal00
static int tolua_fltk_fltk_Fl_Window_non_modal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'non_modal'", NULL);
#endif
 {
  int tolua_ret = (int)  self->non_modal();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'non_modal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: override of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_override00
static int tolua_fltk_fltk_Fl_Window_override00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'override'", NULL);
#endif
 {
  int tolua_ret = (int)  self->override();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'override'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_resize00
static int tolua_fltk_fltk_Fl_Window_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_147 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_148 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_149 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_150 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(tolua_var_147,tolua_var_148,tolua_var_149,tolua_var_150);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_menu_window of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_set_menu_window00
static int tolua_fltk_fltk_Fl_Window_set_menu_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_menu_window'", NULL);
#endif
 {
  self->set_menu_window();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_menu_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_modal of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_set_modal00
static int tolua_fltk_fltk_Fl_Window_set_modal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_modal'", NULL);
#endif
 {
  self->set_modal();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_modal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_non_modal of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_set_non_modal00
static int tolua_fltk_fltk_Fl_Window_set_non_modal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_non_modal'", NULL);
#endif
 {
  self->set_non_modal();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_non_modal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_override of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_set_override00
static int tolua_fltk_fltk_Fl_Window_set_override00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_override'", NULL);
#endif
 {
  self->set_override();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_override'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_tooltip_window of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_set_tooltip_window00
static int tolua_fltk_fltk_Fl_Window_set_tooltip_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_tooltip_window'", NULL);
#endif
 {
  self->set_tooltip_window();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_tooltip_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_show00
static int tolua_fltk_fltk_Fl_Window_show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show'", NULL);
#endif
 {
  self->show();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_Fl_Window_show of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_show_main00
static int tolua_fltk_fltk_Fl_Window_show_main00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fltk_Fl_Window_show'", NULL);
#endif
 {
  fltk_Fl_Window_show(self,L);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show_main'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shown of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_shown00
static int tolua_fltk_fltk_Fl_Window_shown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shown'", NULL);
#endif
 {
  int tolua_ret = (int)  self->shown();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size_range of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_size_range00
static int tolua_fltk_fltk_Fl_Window_size_range00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  int a = ((int)  tolua_tonumber(tolua_S,2,0));
  int b = ((int)  tolua_tonumber(tolua_S,3,0));
  int c = ((int)  tolua_tonumber(tolua_S,4,0));
  int d = ((int)  tolua_tonumber(tolua_S,5,0));
  int e = ((int)  tolua_tonumber(tolua_S,6,0));
  int f = ((int)  tolua_tonumber(tolua_S,7,0));
  int g = ((int)  tolua_tonumber(tolua_S,8,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size_range'", NULL);
#endif
 {
  self->size_range(a,b,c,d,e,f,g);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size_range'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tooltip_window of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_tooltip_window00
static int tolua_fltk_fltk_Fl_Window_tooltip_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tooltip_window'", NULL);
#endif
 {
  int tolua_ret = (int)  self->tooltip_window();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tooltip_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: x_root of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_x_root00
static int tolua_fltk_fltk_Fl_Window_x_root00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'x_root'", NULL);
#endif
 {
  int tolua_ret = (int)  self->x_root();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'x_root'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: xclass of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_xclass00
static int tolua_fltk_fltk_Fl_Window_xclass00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'xclass'", NULL);
#endif
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  self->xclass();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 self->xclass(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'xclass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: y_root of class  Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Window_y_root00
static int tolua_fltk_fltk_Fl_Window_y_root00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* self = (Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'y_root'", NULL);
#endif
 {
  int tolua_ret = (int)  self->y_root();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'y_root'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Window : public Fl_Window, public ToluaBase {
public:
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Window_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Window:: as_window();
		};
	};
	 int  handle( int tolua_var_145) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Window_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_145);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Window:: handle(tolua_var_145);
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Window_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Window:: hide();
		};
	};
	 void  resize( int tolua_var_147, int tolua_var_148, int tolua_var_149, int tolua_var_150) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Window_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_147);
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_148);
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_149);
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_150);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Window:: resize(tolua_var_147,tolua_var_148,tolua_var_149,tolua_var_150);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Window_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Window:: show();
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Window:: as_group();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Window:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Window:: draw();
		};
	};

	 Fl_Window* Fl_Window__as_window( void ) {
		return ( Fl_Window* )Fl_Window::as_window();
	};
	 int Fl_Window__handle( int tolua_var_145) {
		return ( int )Fl_Window::handle(tolua_var_145);
	};
	 void Fl_Window__hide( void ) {
		Fl_Window::hide();
	};
	 void Fl_Window__resize( int tolua_var_147, int tolua_var_148, int tolua_var_149, int tolua_var_150) {
		Fl_Window::resize(tolua_var_147,tolua_var_148,tolua_var_149,tolua_var_150);
	};
	 void Fl_Window__show( void ) {
		Fl_Window::show();
	};
	 Fl_Group* Fl_Window__as_group( void ) {
		return ( Fl_Group* )Fl_Window::as_group();
	};
	 void Fl_Window__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Window::do_callback(o,arg);
	};
	 void Fl_Window__draw( void ) {
		Fl_Window::draw();
	};
	 Lua__Fl_Window( int w, int h, const char* title = 0): Fl_Window(w,h,title){};
	 Lua__Fl_Window( int x, int y, int w, int h, const char* title = 0): Fl_Window(x,y,w,h,title){};
};

/* method: tolua__set_instance of class  Lua__Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Window_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Window_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Window* self = (Lua__Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Window__as_window of class  Lua__Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__as_window00
static int tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__as_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Window* self = (Lua__Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Window__as_window'", NULL);
#endif
 {
  Fl_Window* tolua_ret = (Fl_Window*)  self->Fl_Window__as_window();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Window__as_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Window__handle of class  Lua__Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__handle00
static int tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Window* self = (Lua__Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_145 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Window__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Window__handle(tolua_var_145);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Window__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Window__hide of class  Lua__Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__hide00
static int tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Window* self = (Lua__Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Window__hide'", NULL);
#endif
 {
  self->Fl_Window__hide();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Window__hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Window__resize of class  Lua__Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__resize00
static int tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Window* self = (Lua__Fl_Window*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_147 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_148 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_149 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_150 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Window__resize'", NULL);
#endif
 {
  self->Fl_Window__resize(tolua_var_147,tolua_var_148,tolua_var_149,tolua_var_150);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Window__resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Window__show of class  Lua__Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__show00
static int tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Window* self = (Lua__Fl_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Window__show'", NULL);
#endif
 {
  self->Fl_Window__show();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Window__show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Window_new00
static int tolua_fltk_fltk_Lua__Fl_Window_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* title = ((const char*)  tolua_tostring(tolua_S,4,0));
 {
  Lua__Fl_Window* tolua_ret = (Lua__Fl_Window*)  Mtolua_new((Lua__Fl_Window)(w,h,title));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Window_new00_local
static int tolua_fltk_fltk_Lua__Fl_Window_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Window_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Window_new01
static int tolua_fltk_fltk_Lua__Fl_Window_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* title = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Window* tolua_ret = (Lua__Fl_Window*)  Mtolua_new((Lua__Fl_Window)(x,y,w,h,title));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Window");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Lua__Fl_Window_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Window_new01_local
static int tolua_fltk_fltk_Lua__Fl_Window_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Window_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Window (lua_State* tolua_S)
{
 Lua__Fl_Window* self = (Lua__Fl_Window*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Wizard */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Wizard_new00
static int tolua_fltk_fltk_Fl_Wizard_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Wizard",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_151 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_152 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_153 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_154 = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* tolua_var_155 = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Wizard* tolua_ret = (Fl_Wizard*)  Mtolua_new((Fl_Wizard)(tolua_var_151,tolua_var_152,tolua_var_153,tolua_var_154,tolua_var_155));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Wizard");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Wizard */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Wizard_new00_local
static int tolua_fltk_fltk_Fl_Wizard_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Wizard_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: next of class  Fl_Wizard */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Wizard_next00
static int tolua_fltk_fltk_Fl_Wizard_next00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Wizard",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Wizard* self = (Fl_Wizard*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'next'", NULL);
#endif
 {
  self->next();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'next'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: prev of class  Fl_Wizard */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Wizard_prev00
static int tolua_fltk_fltk_Fl_Wizard_prev00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Wizard",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Wizard* self = (Fl_Wizard*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'prev'", NULL);
#endif
 {
  self->prev();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'prev'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Wizard */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Wizard_value00
static int tolua_fltk_fltk_Fl_Wizard_value00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Wizard",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Wizard* self = (Fl_Wizard*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->value();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Widget* opt = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 self->value(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_XBM_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_XBM_Image_new00
static int tolua_fltk_fltk_Fl_XBM_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_XBM_Image",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  Fl_XBM_Image* tolua_ret = (Fl_XBM_Image*)  Mtolua_new((Fl_XBM_Image)(filename));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_XBM_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_XBM_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_XBM_Image_new00_local
static int tolua_fltk_fltk_Fl_XBM_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_XBM_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_XPM_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_XPM_Image_new00
static int tolua_fltk_fltk_Fl_XPM_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_XPM_Image",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  Fl_XPM_Image* tolua_ret = (Fl_XPM_Image*)  Mtolua_new((Fl_XPM_Image)(filename));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_XPM_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_XPM_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_XPM_Image_new00_local
static int tolua_fltk_fltk_Fl_XPM_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_XPM_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Flcc_HueBox */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Flcc_HueBox_new00
static int tolua_fltk_fltk_Flcc_HueBox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Flcc_HueBox",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  Flcc_HueBox* tolua_ret = (Flcc_HueBox*)  Mtolua_new((Flcc_HueBox)(X,Y,W,H));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flcc_HueBox");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Flcc_HueBox */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Flcc_HueBox_new00_local
static int tolua_fltk_fltk_Flcc_HueBox_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Flcc_HueBox_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Flcc_HueBox */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Flcc_HueBox_handle00
static int tolua_fltk_fltk_Flcc_HueBox_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flcc_HueBox",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flcc_HueBox* self = (Flcc_HueBox*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_156 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_156);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Flcc_ValueBox */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Flcc_ValueBox_new00
static int tolua_fltk_fltk_Flcc_ValueBox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Flcc_ValueBox",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  Flcc_ValueBox* tolua_ret = (Flcc_ValueBox*)  Mtolua_new((Flcc_ValueBox)(X,Y,W,H));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flcc_ValueBox");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Flcc_ValueBox */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Flcc_ValueBox_new00_local
static int tolua_fltk_fltk_Flcc_ValueBox_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Flcc_ValueBox_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Flcc_ValueBox */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Flcc_ValueBox_handle00
static int tolua_fltk_fltk_Flcc_ValueBox_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flcc_ValueBox",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flcc_ValueBox* self = (Flcc_ValueBox*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_157 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_157);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Flcc_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Flcc_Value_Input_new00
static int tolua_fltk_fltk_Flcc_Value_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Flcc_Value_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  Flcc_Value_Input* tolua_ret = (Flcc_Value_Input*)  Mtolua_new((Flcc_Value_Input)(X,Y,W,H));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flcc_Value_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Flcc_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Flcc_Value_Input_new00_local
static int tolua_fltk_fltk_Flcc_Value_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Flcc_Value_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: format of class  Flcc_Value_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Flcc_Value_Input_format00
static int tolua_fltk_fltk_Flcc_Value_Input_format00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flcc_Value_Input",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flcc_Value_Input* self = (Flcc_Value_Input*)  tolua_tousertype(tolua_S,1,0);
  char* tolua_var_158 = ((char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'format'", NULL);
#endif
 {
  int tolua_ret = (int)  self->format(tolua_var_158);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'format'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_number of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_number
static int tolua_get_Fl_e_number(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_number);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_number of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_number
static int tolua_set_Fl_e_number(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_number = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_x of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_x
static int tolua_get_Fl_e_x(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_x of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_x
static int tolua_set_Fl_e_x(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_x = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_y of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_y
static int tolua_get_Fl_e_y(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_y of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_y
static int tolua_set_Fl_e_y(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_y = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_x_root of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_x_root
static int tolua_get_Fl_e_x_root(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_x_root);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_x_root of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_x_root
static int tolua_set_Fl_e_x_root(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_x_root = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_y_root of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_y_root
static int tolua_get_Fl_e_y_root(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_y_root);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_y_root of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_y_root
static int tolua_set_Fl_e_y_root(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_y_root = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_dx of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_dx
static int tolua_get_Fl_e_dx(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_dx);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_dx of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_dx
static int tolua_set_Fl_e_dx(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_dx = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_dy of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_dy
static int tolua_get_Fl_e_dy(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_dy);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_dy of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_dy
static int tolua_set_Fl_e_dy(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_dy = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_state of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_state
static int tolua_get_Fl_e_state(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_state);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_state of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_state
static int tolua_set_Fl_e_state(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_state = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_clicks of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_clicks
static int tolua_get_Fl_e_clicks(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_clicks);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_clicks of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_clicks
static int tolua_set_Fl_e_clicks(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_clicks = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_is_click of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_is_click
static int tolua_get_Fl_e_is_click(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_is_click);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_is_click of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_is_click
static int tolua_set_Fl_e_is_click(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_is_click = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_keysym of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_keysym
static int tolua_get_Fl_e_keysym(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_keysym);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_keysym of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_keysym
static int tolua_set_Fl_e_keysym(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_keysym = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_text of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_text
static int tolua_get_Fl_e_text(lua_State* tolua_S)
{
 tolua_pushstring(tolua_S,(const char*)Fl::e_text);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_text of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_text
static int tolua_set_Fl_e_text(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isstring(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_text = ((char*)  tolua_tostring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: e_length of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_e_length
static int tolua_get_Fl_e_length(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::e_length);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: e_length of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_e_length
static int tolua_set_Fl_e_length(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::e_length = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: belowmouse_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_belowmouse__ptr
static int tolua_get_Fl_belowmouse__ptr(lua_State* tolua_S)
{
  tolua_pushusertype(tolua_S,(void*)Fl::belowmouse_,"Fl_Widget");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: belowmouse_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_belowmouse__ptr
static int tolua_set_Fl_belowmouse__ptr(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::belowmouse_ = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: pushed_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_pushed__ptr
static int tolua_get_Fl_pushed__ptr(lua_State* tolua_S)
{
  tolua_pushusertype(tolua_S,(void*)Fl::pushed_,"Fl_Widget");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: pushed_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_pushed__ptr
static int tolua_set_Fl_pushed__ptr(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::pushed_ = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: focus_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_focus__ptr
static int tolua_get_Fl_focus__ptr(lua_State* tolua_S)
{
  tolua_pushusertype(tolua_S,(void*)Fl::focus_,"Fl_Widget");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: focus_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_focus__ptr
static int tolua_set_Fl_focus__ptr(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::focus_ = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: damage_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_damage_
static int tolua_get_Fl_damage_(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::damage_);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: damage_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_damage_
static int tolua_set_Fl_damage_(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::damage_ = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: selection_owner_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_selection_owner__ptr
static int tolua_get_Fl_selection_owner__ptr(lua_State* tolua_S)
{
  tolua_pushusertype(tolua_S,(void*)Fl::selection_owner_,"Fl_Widget");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: selection_owner_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_selection_owner__ptr
static int tolua_set_Fl_selection_owner__ptr(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::selection_owner_ = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: modal_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_modal__ptr
static int tolua_get_Fl_modal__ptr(lua_State* tolua_S)
{
  tolua_pushusertype(tolua_S,(void*)Fl::modal_,"Fl_Window");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: modal_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_modal__ptr
static int tolua_set_Fl_modal__ptr(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isusertype(tolua_S,2,"Fl_Window",0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::modal_ = ((Fl_Window*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: grab_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_grab__ptr
static int tolua_get_Fl_grab__ptr(lua_State* tolua_S)
{
  tolua_pushusertype(tolua_S,(void*)Fl::grab_,"Fl_Window");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: grab_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_grab__ptr
static int tolua_set_Fl_grab__ptr(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isusertype(tolua_S,2,"Fl_Window",0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::grab_ = ((Fl_Window*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: compose_state of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_compose_state
static int tolua_get_Fl_compose_state(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::compose_state);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: compose_state of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_compose_state
static int tolua_set_Fl_compose_state(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::compose_state = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: visible_focus_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_visible_focus_
static int tolua_get_Fl_visible_focus_(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::visible_focus_);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: visible_focus_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_visible_focus_
static int tolua_set_Fl_visible_focus_(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::visible_focus_ = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: dnd_text_ops_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_get_Fl_dnd_text_ops_
static int tolua_get_Fl_dnd_text_ops_(lua_State* tolua_S)
{
 tolua_pushnumber(tolua_S,(lua_Number)Fl::dnd_text_ops_);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: dnd_text_ops_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_set_Fl_dnd_text_ops_
static int tolua_set_Fl_dnd_text_ops_(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Fl::dnd_text_ops_ = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_awake_handler_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_add_awake_handler_00
static int tolua_fltk_fltk_Fl_add_awake_handler_00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Awake_Handler",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Awake_Handler tolua_var_159 = *((Fl_Awake_Handler*)  tolua_tousertype(tolua_S,2,0));
  void* tolua_var_160 = ((void*)  tolua_touserdata(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl::add_awake_handler_(tolua_var_159,tolua_var_160);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_awake_handler_'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_check of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_add_check00
static int tolua_fltk_fltk_Fl_add_check00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Timeout_Handler",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Timeout_Handler tolua_var_161 = *((Fl_Timeout_Handler*)  tolua_tousertype(tolua_S,2,0));
  void* tolua_var_162 = ((void*)  tolua_touserdata(tolua_S,3,0));
 {
  Fl::add_check(tolua_var_161,tolua_var_162);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_check'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_fd of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_add_fd00
static int tolua_fltk_fltk_Fl_add_fd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Fl_FD_Handler",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,5,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int fd = ((int)  tolua_tonumber(tolua_S,2,0));
  int when = ((int)  tolua_tonumber(tolua_S,3,0));
  Fl_FD_Handler cb = *((Fl_FD_Handler*)  tolua_tousertype(tolua_S,4,0));
  void* tolua_var_163 = ((void*)  tolua_touserdata(tolua_S,5,0));
 {
  Fl::add_fd(fd,when,cb,tolua_var_163);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_fd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_fd of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_add_fd01
static int tolua_fltk_fltk_Fl_add_fd01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Fl_FD_Handler",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int fd = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_FD_Handler cb = *((Fl_FD_Handler*)  tolua_tousertype(tolua_S,3,0));
  void* tolua_var_164 = ((void*)  tolua_touserdata(tolua_S,4,0));
 {
  Fl::add_fd(fd,cb,tolua_var_164);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_add_fd00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_fltk_fl_add_handler of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_add_handler00
static int tolua_fltk_fltk_Fl_add_handler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,2,0));
 {
  tolua_outside int tolua_ret = (tolua_outside int)  set_fltk_fl_add_handler(L,luaFunc);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_handler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_fl_remove_handler of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_remove_handler00
static int tolua_fltk_fltk_Fl_remove_handler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  int ref = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  fltk_fl_remove_handler(L,ref);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_handler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_fltk_fl_add_idle of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_add_idle00
static int tolua_fltk_fltk_Fl_add_idle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,2,0));
  lua_Object obj = ((lua_Object)  tolua_tovalue(tolua_S,3,0));
 {
  tolua_outside int tolua_ret = (tolua_outside int)  set_fltk_fl_add_idle(L,luaFunc,obj);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_idle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_fl_remove_idle of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_remove_idle00
static int tolua_fltk_fltk_Fl_remove_idle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  int ref = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  fltk_fl_remove_idle(L,ref);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_idle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_fltk_fl_add_timeout of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_add_timeout00
static int tolua_fltk_fltk_Fl_add_timeout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  double t = ((double)  tolua_tonumber(tolua_S,2,0));
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,3,0));
  lua_Object obj = ((lua_Object)  tolua_tovalue(tolua_S,4,0));
 {
  tolua_outside int tolua_ret = (tolua_outside int)  set_fltk_fl_add_timeout(L,t,luaFunc,obj);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_timeout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_fl_remove_timeout of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_remove_timeout00
static int tolua_fltk_fltk_Fl_remove_timeout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  int ref = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  fltk_fl_remove_timeout(L,ref);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_timeout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_fltk_fl_repeat_timeout of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_repeat_timeout00
static int tolua_fltk_fltk_Fl_repeat_timeout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  double t = ((double)  tolua_tonumber(tolua_S,2,0));
  int ref = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  set_fltk_fl_repeat_timeout(L,t,ref);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'repeat_timeout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: arg of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_arg00
static int tolua_fltk_fltk_Fl_arg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_165 = ((int)  tolua_tonumber(tolua_S,2,0));
  char* tolua_var_166 = ((char*)  tolua_tostring(tolua_S,3,0));
  int tolua_var_167 = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  int tolua_ret = (int)  Fl::arg(tolua_var_165,&tolua_var_166,tolua_var_167);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushstring(tolua_S,(const char*)tolua_var_166);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_var_167);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'arg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: awake of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_awake00
static int tolua_fltk_fltk_Fl_awake00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  void* message = ((void*)  tolua_touserdata(tolua_S,2,0));
 {
  Fl::awake(message);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'awake'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: awake of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_awake01
static int tolua_fltk_fltk_Fl_awake01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Awake_Handler",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Awake_Handler cb = *((Fl_Awake_Handler*)  tolua_tousertype(tolua_S,2,0));
  void* message = ((void*)  tolua_touserdata(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl::awake(cb,message);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_awake00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: background of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_background00
static int tolua_fltk_fltk_Fl_background00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned char tolua_var_168 = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
  unsigned char tolua_var_169 = (( unsigned char)  tolua_tonumber(tolua_S,3,0));
  unsigned char tolua_var_170 = (( unsigned char)  tolua_tonumber(tolua_S,4,0));
 {
  Fl::background(tolua_var_168,tolua_var_169,tolua_var_170);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'background'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: background2 of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_background200
static int tolua_fltk_fltk_Fl_background200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned char tolua_var_171 = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
  unsigned char tolua_var_172 = (( unsigned char)  tolua_tonumber(tolua_S,3,0));
  unsigned char tolua_var_173 = (( unsigned char)  tolua_tonumber(tolua_S,4,0));
 {
  Fl::background2(tolua_var_171,tolua_var_172,tolua_var_173);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'background2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: belowmouse of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_belowmouse00
static int tolua_fltk_fltk_Fl_belowmouse00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  Fl_Widget* tolua_ret = (Fl_Widget*)  Fl::belowmouse();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Widget* opt = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 Fl::belowmouse(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'belowmouse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: box_dh of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_box_dh00
static int tolua_fltk_fltk_Fl_box_dh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Boxtype tolua_var_174 = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  Fl::box_dh(tolua_var_174);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'box_dh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: box_dw of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_box_dw00
static int tolua_fltk_fltk_Fl_box_dw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Boxtype tolua_var_175 = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  Fl::box_dw(tolua_var_175);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'box_dw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: box_dx of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_box_dx00
static int tolua_fltk_fltk_Fl_box_dx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Boxtype tolua_var_176 = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  Fl::box_dx(tolua_var_176);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'box_dx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: box_dy of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_box_dy00
static int tolua_fltk_fltk_Fl_box_dy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Boxtype tolua_var_177 = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  Fl::box_dy(tolua_var_177);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'box_dy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: check of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_check00
static int tolua_fltk_fltk_Fl_check00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::check();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'check'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_widget_pointer of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_clear_widget_pointer00
static int tolua_fltk_fltk_Fl_clear_widget_pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget const* w = ((Fl_Widget const*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl::clear_widget_pointer(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_widget_pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: compose of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_compose00
static int tolua_fltk_fltk_Fl_compose00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int del = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  Fl::compose(del);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)del);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'compose'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: compose_reset of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_compose_reset00
static int tolua_fltk_fltk_Fl_compose_reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl::compose_reset();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'compose_reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_copy00
static int tolua_fltk_fltk_Fl_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* stuff = ((const char*)  tolua_tostring(tolua_S,2,0));
  int len = ((int)  tolua_tonumber(tolua_S,3,0));
  int clipboard = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Fl::copy(stuff,len,clipboard);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: damage of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_damage00
static int tolua_fltk_fltk_Fl_damage00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  int tolua_ret = (int)  Fl::damage();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 Fl::damage(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'damage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: default_atclose of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_default_atclose00
static int tolua_fltk_fltk_Fl_default_atclose00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Window",0,&tolua_err) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Window* tolua_var_178 = ((Fl_Window*)  tolua_tousertype(tolua_S,2,0));
  void* tolua_var_179 = ((void*)  tolua_touserdata(tolua_S,3,0));
 {
  Fl::default_atclose(tolua_var_178,tolua_var_179);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'default_atclose'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete_widget of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_delete_widget00
static int tolua_fltk_fltk_Fl_delete_widget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl::delete_widget(w);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete_widget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: display of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_display00
static int tolua_fltk_fltk_Fl_display00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* tolua_var_180 = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  Fl::display(tolua_var_180);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'display'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dnd of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_dnd00
static int tolua_fltk_fltk_Fl_dnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::dnd();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dnd_text_ops of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_dnd_text_ops00
static int tolua_fltk_fltk_Fl_dnd_text_ops00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  int tolua_ret = (int)  Fl::dnd_text_ops();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 Fl::dnd_text_ops(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dnd_text_ops'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: do_widget_deletion of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_do_widget_deletion00
static int tolua_fltk_fltk_Fl_do_widget_deletion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl::do_widget_deletion();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'do_widget_deletion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw_box_active of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_draw_box_active00
static int tolua_fltk_fltk_Fl_draw_box_active00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::draw_box_active();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw_box_active'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event00
static int tolua_fltk_fltk_Fl_event00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_alt of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_alt00
static int tolua_fltk_fltk_Fl_event_alt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_alt();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_alt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_button of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_button00
static int tolua_fltk_fltk_Fl_event_button00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_button();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_button'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_button1 of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_button100
static int tolua_fltk_fltk_Fl_event_button100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_button1();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_button1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_button2 of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_button200
static int tolua_fltk_fltk_Fl_event_button200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_button2();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_button2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_button3 of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_button300
static int tolua_fltk_fltk_Fl_event_button300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_button3();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_button3'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_buttons of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_buttons00
static int tolua_fltk_fltk_Fl_event_buttons00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_buttons();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_buttons'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_clicks of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_clicks00
static int tolua_fltk_fltk_Fl_event_clicks00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  int tolua_ret = (int)  Fl::event_clicks();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 Fl::event_clicks(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_clicks'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_command of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_command00
static int tolua_fltk_fltk_Fl_event_command00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_command();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_command'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_ctrl of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_ctrl00
static int tolua_fltk_fltk_Fl_event_ctrl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_ctrl();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_ctrl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_dx of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_dx00
static int tolua_fltk_fltk_Fl_event_dx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_dx();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_dx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_dy of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_dy00
static int tolua_fltk_fltk_Fl_event_dy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_dy();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_dy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_inside of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_inside00
static int tolua_fltk_fltk_Fl_event_inside00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_181 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_182 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_183 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_184 = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  int tolua_ret = (int)  Fl::event_inside(tolua_var_181,tolua_var_182,tolua_var_183,tolua_var_184);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_inside'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_inside of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_inside01
static int tolua_fltk_fltk_Fl_event_inside01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const Fl_Widget* tolua_var_185 = ((const Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 {
  int tolua_ret = (int)  Fl::event_inside(tolua_var_185);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_event_inside00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_is_click of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_is_click00
static int tolua_fltk_fltk_Fl_event_is_click00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  int tolua_ret = (int)  Fl::event_is_click();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 Fl::event_is_click(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_is_click'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_key of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_key00
static int tolua_fltk_fltk_Fl_event_key00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  int tolua_ret = (int)  Fl::event_key();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 Fl::event_key(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_key'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_length of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_length00
static int tolua_fltk_fltk_Fl_event_length00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_length();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_length'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_original_key of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_original_key00
static int tolua_fltk_fltk_Fl_event_original_key00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_original_key();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_original_key'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_shift of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_shift00
static int tolua_fltk_fltk_Fl_event_shift00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_shift();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_shift'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_state of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_state00
static int tolua_fltk_fltk_Fl_event_state00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  int tolua_ret = (int)  Fl::event_state();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 Fl::event_state(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_state'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_text of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_text00
static int tolua_fltk_fltk_Fl_event_text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  char* tolua_ret = (char*)  Fl::event_text();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_x of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_x00
static int tolua_fltk_fltk_Fl_event_x00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_x();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_x'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_x_root of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_x_root00
static int tolua_fltk_fltk_Fl_event_x_root00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_x_root();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_x_root'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_y of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_y00
static int tolua_fltk_fltk_Fl_event_y00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_y();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_y'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: event_y_root of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_event_y_root00
static int tolua_fltk_fltk_Fl_event_y_root00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::event_y_root();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'event_y_root'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: first_window of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_first_window00
static int tolua_fltk_fltk_Fl_first_window00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  Fl_Window* tolua_ret = (Fl_Window*)  Fl::first_window();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Window",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Window* opt = ((Fl_Window*)  tolua_tousertype(tolua_S,2,0));
 Fl::first_window(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'first_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: flush of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_flush00
static int tolua_fltk_fltk_Fl_flush00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl::flush();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'flush'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: focus of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_focus00
static int tolua_fltk_fltk_Fl_focus00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  Fl_Widget* tolua_ret = (Fl_Widget*)  Fl::focus();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Widget* opt = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 Fl::focus(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'focus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_fl_add_focus_changing_handler of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_add_focus_changing_handler00
static int tolua_fltk_fltk_Fl_add_focus_changing_handler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  lua_Function luaFunc = ((lua_Function)  tolua_tovalue(tolua_S,2,0));
 {
  tolua_outside int tolua_ret = (tolua_outside int)  fltk_fl_add_focus_changing_handler(L,luaFunc);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_focus_changing_handler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: has_focus_changing_handler of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_has_focus_changing_handler00
static int tolua_fltk_fltk_Fl_has_focus_changing_handler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::has_focus_changing_handler();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'has_focus_changing_handler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fltk_fl_remove_focus_changing_handler of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_remove_focus_changing_handler00
static int tolua_fltk_fltk_Fl_remove_focus_changing_handler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
 {
  fltk_fl_remove_focus_changing_handler(L);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_focus_changing_handler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: foreground of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_foreground00
static int tolua_fltk_fltk_Fl_foreground00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned char tolua_var_186 = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
  unsigned char tolua_var_187 = (( unsigned char)  tolua_tonumber(tolua_S,3,0));
  unsigned char tolua_var_188 = (( unsigned char)  tolua_tonumber(tolua_S,4,0));
 {
  Fl::foreground(tolua_var_186,tolua_var_187,tolua_var_188);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'foreground'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: free_color of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_free_color00
static int tolua_fltk_fltk_Fl_free_color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int tolua_var_189 = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  int overlay = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  Fl::free_color(tolua_var_189,overlay);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'free_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_awake_handler_ of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_get_awake_handler_00
static int tolua_fltk_fltk_Fl_get_awake_handler_00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Awake_Handler",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Awake_Handler* tolua_var_190 = ((Fl_Awake_Handler*)  tolua_tousertype(tolua_S,2,0));
  void* tolua_var_191 = ((void*)  tolua_touserdata(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl::get_awake_handler_(*tolua_var_190,tolua_var_191);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushuserdata(tolua_S,(void*)tolua_var_191);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_awake_handler_'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_boxtype of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_get_boxtype00
static int tolua_fltk_fltk_Fl_get_boxtype00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Boxtype tolua_var_192 = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 {
  Fl_Box_Draw_F* tolua_ret = (Fl_Box_Draw_F*)  Fl::get_boxtype(tolua_var_192);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Box_Draw_F");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_boxtype'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_color of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_get_color00
static int tolua_fltk_fltk_Fl_get_color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int tolua_var_193 = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 {
  unsigned int tolua_ret = (unsigned int)  Fl::get_color(tolua_var_193);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_color of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_get_color_rgb00
static int tolua_fltk_fltk_Fl_get_color_rgb00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int tolua_var_194 = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned char tolua_var_195 = (( unsigned char)  tolua_tonumber(tolua_S,3,0));
  unsigned char tolua_var_196 = (( unsigned char)  tolua_tonumber(tolua_S,4,0));
  unsigned char tolua_var_197 = (( unsigned char)  tolua_tonumber(tolua_S,5,0));
 {
  Fl::get_color(tolua_var_194,tolua_var_195,tolua_var_196,tolua_var_197);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_var_195);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_var_196);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_var_197);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_color_rgb'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_font of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_get_font00
static int tolua_fltk_fltk_Fl_get_font00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
   int tolua_var_198 = ((  int)  tolua_tonumber(tolua_S,2,0));
 {
  char* tolua_ret = (char*)  Fl::get_font(tolua_var_198);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_font'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_font_name of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_get_font_name00
static int tolua_fltk_fltk_Fl_get_font_name00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
   int tolua_var_199 = ((  int)  tolua_tonumber(tolua_S,2,0));
  int attributes = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  char* tolua_ret = (char*)  Fl::get_font_name(tolua_var_199,&attributes);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)attributes);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_font_name'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_key of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_get_key00
static int tolua_fltk_fltk_Fl_get_key00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int key = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  Fl::get_key(key);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_key'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_mouse of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_get_mouse00
static int tolua_fltk_fltk_Fl_get_mouse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_200 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_201 = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  Fl::get_mouse(tolua_var_200,tolua_var_201);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_var_200);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_var_201);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_mouse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_system_colors of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_get_system_colors00
static int tolua_fltk_fltk_Fl_get_system_colors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl::get_system_colors();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_system_colors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_grab00
static int tolua_fltk_fltk_Fl_grab00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  Fl_Window* tolua_ret = (Fl_Window*)  Fl::grab();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Window",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Window* opt = ((Fl_Window*)  tolua_tousertype(tolua_S,2,0));
 Fl::grab(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: h of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_h00
static int tolua_fltk_fltk_Fl_h00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::h();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'h'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_handle00
static int tolua_fltk_fltk_Fl_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_202 = ((int)  tolua_tonumber(tolua_S,2,0));
  Fl_Window* tolua_var_203 = ((Fl_Window*)  tolua_tousertype(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl::handle(tolua_var_202,tolua_var_203);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: has_check of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_has_check00
static int tolua_fltk_fltk_Fl_has_check00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Timeout_Handler",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Timeout_Handler tolua_var_204 = *((Fl_Timeout_Handler*)  tolua_tousertype(tolua_S,2,0));
  void* tolua_var_205 = ((void*)  tolua_touserdata(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl::has_check(tolua_var_204,tolua_var_205);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'has_check'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: has_idle of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_has_idle00
static int tolua_fltk_fltk_Fl_has_idle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Idle_Handler",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Idle_Handler cb = *((Fl_Idle_Handler*)  tolua_tousertype(tolua_S,2,0));
  void* data = ((void*)  tolua_touserdata(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl::has_idle(cb,data);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'has_idle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: has_timeout of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_has_timeout00
static int tolua_fltk_fltk_Fl_has_timeout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Timeout_Handler",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Timeout_Handler tolua_var_206 = *((Fl_Timeout_Handler*)  tolua_tousertype(tolua_S,2,0));
  void* tolua_var_207 = ((void*)  tolua_touserdata(tolua_S,3,0));
 {
  int tolua_ret = (int)  Fl::has_timeout(tolua_var_206,tolua_var_207);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'has_timeout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: lock of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_lock00
static int tolua_fltk_fltk_Fl_lock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl::lock();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'lock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: modal of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_modal00
static int tolua_fltk_fltk_Fl_modal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Window* tolua_ret = (Fl_Window*)  Fl::modal();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'modal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: next_window of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_next_window00
static int tolua_fltk_fltk_Fl_next_window00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"const Fl_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const Fl_Window* tolua_var_208 = ((const Fl_Window*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl_Window* tolua_ret = (Fl_Window*)  Fl::next_window(tolua_var_208);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'next_window'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: own_colormap of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_own_colormap00
static int tolua_fltk_fltk_Fl_own_colormap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl::own_colormap();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'own_colormap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: paste of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_paste00
static int tolua_fltk_fltk_Fl_paste00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err)) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* receiver = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int clipboard = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  Fl::paste(*receiver,clipboard);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'paste'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: paste of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_paste01
static int tolua_fltk_fltk_Fl_paste01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Widget* receiver = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl::paste(*receiver);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_paste00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: pushed of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_pushed00
static int tolua_fltk_fltk_Fl_pushed00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  Fl_Widget* tolua_ret = (Fl_Widget*)  Fl::pushed();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Widget* opt = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 Fl::pushed(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pushed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: readqueue of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_readqueue00
static int tolua_fltk_fltk_Fl_readqueue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Widget* tolua_ret = (Fl_Widget*)  Fl::readqueue();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readqueue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ready of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_ready00
static int tolua_fltk_fltk_Fl_ready00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::ready();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ready'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: redraw of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_redraw00
static int tolua_fltk_fltk_Fl_redraw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl::redraw();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'redraw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: release of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_release00
static int tolua_fltk_fltk_Fl_release00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl::release();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'release'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: release_widget_pointer of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_release_widget_pointer00
static int tolua_fltk_fltk_Fl_release_widget_pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl::release_widget_pointer(w);
  tolua_pushusertype(tolua_S,(void*)w,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'release_widget_pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reload_scheme of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_reload_scheme00
static int tolua_fltk_fltk_Fl_reload_scheme00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::reload_scheme();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reload_scheme'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_check of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_remove_check00
static int tolua_fltk_fltk_Fl_remove_check00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Timeout_Handler",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Timeout_Handler tolua_var_209 = *((Fl_Timeout_Handler*)  tolua_tousertype(tolua_S,2,0));
  void* tolua_var_210 = ((void*)  tolua_touserdata(tolua_S,3,0));
 {
  Fl::remove_check(tolua_var_209,tolua_var_210);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_check'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_fd of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_remove_fd00
static int tolua_fltk_fltk_Fl_remove_fd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_211 = ((int)  tolua_tonumber(tolua_S,2,0));
  int when = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  Fl::remove_fd(tolua_var_211,when);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove_fd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove_fd of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_remove_fd01
static int tolua_fltk_fltk_Fl_remove_fd01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int tolua_var_212 = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  Fl::remove_fd(tolua_var_212);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_remove_fd00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: run of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_run00
static int tolua_fltk_fltk_Fl_run00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::run();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'run'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scheme of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_scheme00
static int tolua_fltk_fltk_Fl_scheme00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  char* tolua_ret = (char*)  Fl::scheme();
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isstring(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  char* opt = ((char*)  tolua_tostring(tolua_S,2,0));
 Fl::scheme(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scheme'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: screen_count of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_screen_count00
static int tolua_fltk_fltk_Fl_screen_count00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::screen_count();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'screen_count'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: screen_xywh of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_screen_xywh00
static int tolua_fltk_fltk_Fl_screen_xywh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  Fl::screen_xywh(X,Y,W,H);
 tolua_pushnumber(tolua_S,(lua_Number)X);
 tolua_pushnumber(tolua_S,(lua_Number)Y);
 tolua_pushnumber(tolua_S,(lua_Number)W);
 tolua_pushnumber(tolua_S,(lua_Number)H);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'screen_xywh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: screen_xywh of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_screen_xywh01
static int tolua_fltk_fltk_Fl_screen_xywh01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int mx = ((int)  tolua_tonumber(tolua_S,6,0));
  int my = ((int)  tolua_tonumber(tolua_S,7,0));
 {
  Fl::screen_xywh(X,Y,W,H,mx,my);
 tolua_pushnumber(tolua_S,(lua_Number)X);
 tolua_pushnumber(tolua_S,(lua_Number)Y);
 tolua_pushnumber(tolua_S,(lua_Number)W);
 tolua_pushnumber(tolua_S,(lua_Number)H);
 }
 }
 return 4;
tolua_lerror:
 return tolua_fltk_fltk_Fl_screen_xywh00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: screen_xywh of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_screen_xywh02
static int tolua_fltk_fltk_Fl_screen_xywh02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int n = ((int)  tolua_tonumber(tolua_S,6,0));
 {
  Fl::screen_xywh(X,Y,W,H,n);
 tolua_pushnumber(tolua_S,(lua_Number)X);
 tolua_pushnumber(tolua_S,(lua_Number)Y);
 tolua_pushnumber(tolua_S,(lua_Number)W);
 tolua_pushnumber(tolua_S,(lua_Number)H);
 }
 }
 return 4;
tolua_lerror:
 return tolua_fltk_fltk_Fl_screen_xywh01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollbar_size of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_scrollbar_size00
static int tolua_fltk_fltk_Fl_scrollbar_size00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  int tolua_ret = (int)  Fl::scrollbar_size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 Fl::scrollbar_size(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollbar_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selection of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_selection00
static int tolua_fltk_fltk_Fl_selection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err)) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* owner = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  const char* tolua_var_213 = ((const char*)  tolua_tostring(tolua_S,3,0));
  int len = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  Fl::selection(*owner,tolua_var_213,len);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selection_owner of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_selection_owner00
static int tolua_fltk_fltk_Fl_selection_owner00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  Fl_Widget* tolua_ret = (Fl_Widget*)  Fl::selection_owner();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Widget* opt = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 Fl::selection_owner(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selection_owner'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_abort of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_set_abort00
static int tolua_fltk_fltk_Fl_set_abort00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Abort_Handler",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Abort_Handler f = *((Fl_Abort_Handler*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl::set_abort(f);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_abort'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_atclose of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_set_atclose00
static int tolua_fltk_fltk_Fl_set_atclose00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Atclose_Handler",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Atclose_Handler f = *((Fl_Atclose_Handler*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl::set_atclose(f);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_atclose'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_boxtype of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_set_boxtype00
static int tolua_fltk_fltk_Fl_set_boxtype00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"Fl_Box_Draw_F",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Boxtype tolua_var_214 = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
  Fl_Box_Draw_F* tolua_var_215 = ((Fl_Box_Draw_F*)  tolua_tousertype(tolua_S,3,0));
  unsigned char tolua_var_216 = (( unsigned char)  tolua_tonumber(tolua_S,4,0));
  unsigned char tolua_var_217 = (( unsigned char)  tolua_tonumber(tolua_S,5,0));
  unsigned char tolua_var_218 = (( unsigned char)  tolua_tonumber(tolua_S,6,0));
  unsigned char tolua_var_219 = (( unsigned char)  tolua_tonumber(tolua_S,7,0));
 {
  Fl::set_boxtype(tolua_var_214,tolua_var_215,tolua_var_216,tolua_var_217,tolua_var_218,tolua_var_219);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_boxtype'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_boxtype of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_set_boxtype01
static int tolua_fltk_fltk_Fl_set_boxtype01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Boxtype tolua_var_220 = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
  Fl_Boxtype from = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,3,0));
 {
  Fl::set_boxtype(tolua_var_220,from);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_set_boxtype00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_color of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_set_color00
static int tolua_fltk_fltk_Fl_set_color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int tolua_var_221 = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned char tolua_var_222 = (( unsigned char)  tolua_tonumber(tolua_S,3,0));
  unsigned char tolua_var_223 = (( unsigned char)  tolua_tonumber(tolua_S,4,0));
  unsigned char tolua_var_224 = (( unsigned char)  tolua_tonumber(tolua_S,5,0));
 {
  Fl::set_color(tolua_var_221,tolua_var_222,tolua_var_223,tolua_var_224);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_color of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_set_color01
static int tolua_fltk_fltk_Fl_set_color01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  unsigned int tolua_var_225 = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned tolua_var_226 = ((unsigned)  tolua_tonumber(tolua_S,3,0));
 {
  Fl::set_color(tolua_var_225,tolua_var_226);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_set_color00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_font of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_set_font00
static int tolua_fltk_fltk_Fl_set_font00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
   int tolua_var_227 = ((  int)  tolua_tonumber(tolua_S,2,0));
  const char* tolua_var_228 = ((const char*)  tolua_tostring(tolua_S,3,0));
 {
  Fl::set_font(tolua_var_227,tolua_var_228);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_font'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_font of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_set_font01
static int tolua_fltk_fltk_Fl_set_font01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
   int tolua_var_229 = ((  int)  tolua_tonumber(tolua_S,2,0));
   int tolua_var_230 = ((  int)  tolua_tonumber(tolua_S,3,0));
 {
  Fl::set_font(tolua_var_229,tolua_var_230);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_set_font00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_fonts of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_set_fonts00
static int tolua_fltk_fltk_Fl_set_fonts00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* tolua_var_231 = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  int tolua_ret = (int)  Fl::set_fonts(tolua_var_231);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_fonts'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_idle of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_set_idle00
static int tolua_fltk_fltk_Fl_set_idle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Fl_Old_Idle_Handler",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Old_Idle_Handler cb = *((Fl_Old_Idle_Handler*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl::set_idle(cb);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_idle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: test_shortcut of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_test_shortcut00
static int tolua_fltk_fltk_Fl_test_shortcut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int tolua_var_232 = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  Fl::test_shortcut(tolua_var_232);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'test_shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: thread_message of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_thread_message00
static int tolua_fltk_fltk_Fl_thread_message00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  void* tolua_ret = (void*)  Fl::thread_message();
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'thread_message'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unlock of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_unlock00
static int tolua_fltk_fltk_Fl_unlock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl::unlock();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unlock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: version of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_version00
static int tolua_fltk_fltk_Fl_version00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  double tolua_ret = (double)  Fl::version();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'version'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visible_focus of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_visible_focus00
static int tolua_fltk_fltk_Fl_visible_focus00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  int tolua_ret = (int)  Fl::visible_focus();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 Fl::visible_focus(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visible_focus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visual of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_visual00
static int tolua_fltk_fltk_Fl_visual00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int tolua_var_233 = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  Fl::visual(tolua_var_233);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visual'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: w of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_w00
static int tolua_fltk_fltk_Fl_w00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::w();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'w'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: wait of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_wait00
static int tolua_fltk_fltk_Fl_wait00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
 if(nparam < 2) {
  double tolua_ret = (double)  Fl::wait();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 Fl::wait(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'wait'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: watch_widget_pointer of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_watch_widget_pointer00
static int tolua_fltk_fltk_Fl_watch_widget_pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* w = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl::watch_widget_pointer(w);
  tolua_pushusertype(tolua_S,(void*)w,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'watch_widget_pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: x of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_x00
static int tolua_fltk_fltk_Fl_x00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::x();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'x'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: y of class  Fl */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_y00
static int tolua_fltk_fltk_Fl_y00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  Fl::y();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'y'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Widget_Tracker */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_Tracker_new00
static int tolua_fltk_fltk_Fl_Widget_Tracker_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Widget_Tracker",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget* wi = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 {
  Fl_Widget_Tracker* tolua_ret = (Fl_Widget_Tracker*)  Mtolua_new((Fl_Widget_Tracker)(wi));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget_Tracker");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Widget_Tracker */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_Tracker_new00_local
static int tolua_fltk_fltk_Fl_Widget_Tracker_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Widget_Tracker_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: deleted of class  Fl_Widget_Tracker */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_Tracker_deleted00
static int tolua_fltk_fltk_Fl_Widget_Tracker_deleted00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget_Tracker",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget_Tracker* self = (Fl_Widget_Tracker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deleted'", NULL);
#endif
 {
  int tolua_ret = (int)  self->deleted();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deleted'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: exists of class  Fl_Widget_Tracker */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_Tracker_exists00
static int tolua_fltk_fltk_Fl_Widget_Tracker_exists00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget_Tracker",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget_Tracker* self = (Fl_Widget_Tracker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'exists'", NULL);
#endif
 {
  int tolua_ret = (int)  self->exists();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exists'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: widget of class  Fl_Widget_Tracker */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Widget_Tracker_widget00
static int tolua_fltk_fltk_Fl_Widget_Tracker_widget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Widget_Tracker",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Widget_Tracker* self = (Fl_Widget_Tracker*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'widget'", NULL);
#endif
 {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->widget();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'widget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Double_Window_new00
static int tolua_fltk_fltk_Fl_Double_Window_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Double_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,4,0));
 {
  Fl_Double_Window* tolua_ret = (Fl_Double_Window*)  Mtolua_new((Fl_Double_Window)(W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Double_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Double_Window_new00_local
static int tolua_fltk_fltk_Fl_Double_Window_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Double_Window_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Double_Window_new01
static int tolua_fltk_fltk_Fl_Double_Window_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Double_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Double_Window* tolua_ret = (Fl_Double_Window*)  Mtolua_new((Fl_Double_Window)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Double_Window");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Double_Window_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Double_Window_new01_local
static int tolua_fltk_fltk_Fl_Double_Window_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Double_Window_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: flush of class  Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Double_Window_flush00
static int tolua_fltk_fltk_Fl_Double_Window_flush00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Double_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Double_Window* self = (Fl_Double_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'flush'", NULL);
#endif
 {
  self->flush();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'flush'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hide of class  Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Double_Window_hide00
static int tolua_fltk_fltk_Fl_Double_Window_hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Double_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Double_Window* self = (Fl_Double_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hide'", NULL);
#endif
 {
  self->hide();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Double_Window_resize00
static int tolua_fltk_fltk_Fl_Double_Window_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Double_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Double_Window* self = (Fl_Double_Window*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_234 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_235 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_236 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_237 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(tolua_var_234,tolua_var_235,tolua_var_236,tolua_var_237);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show of class  Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Double_Window_show00
static int tolua_fltk_fltk_Fl_Double_Window_show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Double_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Double_Window* self = (Fl_Double_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show'", NULL);
#endif
 {
  self->show();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Double_Window_handle00
static int tolua_fltk_fltk_Fl_Double_Window_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Double_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Double_Window* self = (Fl_Double_Window*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Double_Window : public Fl_Double_Window, public ToluaBase {
public:
	 int  handle( int event) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Double_Window_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)event);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Double_Window:: handle(event);
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Window_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Double_Window:: as_window();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Window_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Double_Window:: hide();
		};
	};
	 void  resize( int tolua_var_147, int tolua_var_148, int tolua_var_149, int tolua_var_150) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Window_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_147);
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_148);
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_149);
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_150);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Double_Window:: resize(tolua_var_147,tolua_var_148,tolua_var_149,tolua_var_150);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Window_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Double_Window:: show();
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Double_Window:: as_group();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Double_Window:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Double_Window:: draw();
		};
	};

	 int Fl_Double_Window__handle( int event) {
		return ( int )Fl_Double_Window::handle(event);
	};
	 Fl_Window* Fl_Double_Window__as_window( void ) {
		return ( Fl_Window* )Fl_Double_Window::as_window();
	};
	 void Fl_Double_Window__hide( void ) {
		Fl_Double_Window::hide();
	};
	 void Fl_Double_Window__resize( int tolua_var_147, int tolua_var_148, int tolua_var_149, int tolua_var_150) {
		Fl_Double_Window::resize(tolua_var_147,tolua_var_148,tolua_var_149,tolua_var_150);
	};
	 void Fl_Double_Window__show( void ) {
		Fl_Double_Window::show();
	};
	 Fl_Group* Fl_Double_Window__as_group( void ) {
		return ( Fl_Group* )Fl_Double_Window::as_group();
	};
	 void Fl_Double_Window__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Double_Window::do_callback(o,arg);
	};
	 void Fl_Double_Window__draw( void ) {
		Fl_Double_Window::draw();
	};
	 Lua__Fl_Double_Window( int W, int H, const char* l = 0): Fl_Double_Window(W,H,l){};
	 Lua__Fl_Double_Window( int X, int Y, int W, int H, const char* l = 0): Fl_Double_Window(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Double_Window_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Double_Window_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Double_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Double_Window* self = (Lua__Fl_Double_Window*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Double_Window__handle of class  Lua__Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Double_Window_Fl_Double_Window__handle00
static int tolua_fltk_fltk_Lua__Fl_Double_Window_Fl_Double_Window__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Double_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Double_Window* self = (Lua__Fl_Double_Window*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Double_Window__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Double_Window__handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Double_Window__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Double_Window_new00
static int tolua_fltk_fltk_Lua__Fl_Double_Window_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Double_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,4,0));
 {
  Lua__Fl_Double_Window* tolua_ret = (Lua__Fl_Double_Window*)  Mtolua_new((Lua__Fl_Double_Window)(W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Double_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Double_Window_new00_local
static int tolua_fltk_fltk_Lua__Fl_Double_Window_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Double_Window_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Double_Window_new01
static int tolua_fltk_fltk_Lua__Fl_Double_Window_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Double_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Double_Window* tolua_ret = (Lua__Fl_Double_Window*)  Mtolua_new((Lua__Fl_Double_Window)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Double_Window");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Lua__Fl_Double_Window_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Double_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Double_Window_new01_local
static int tolua_fltk_fltk_Lua__Fl_Double_Window_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Double_Window_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Double_Window (lua_State* tolua_S)
{
 Lua__Fl_Double_Window* self = (Lua__Fl_Double_Window*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Line_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Line_Dial_new00
static int tolua_fltk_fltk_Fl_Line_Dial_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Line_Dial",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Line_Dial* tolua_ret = (Fl_Line_Dial*)  Mtolua_new((Fl_Line_Dial)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Line_Dial");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Line_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Line_Dial_new00_local
static int tolua_fltk_fltk_Fl_Line_Dial_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Line_Dial_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Single_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Single_Window_new00
static int tolua_fltk_fltk_Fl_Single_Window_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Single_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,4,0));
 {
  Fl_Single_Window* tolua_ret = (Fl_Single_Window*)  Mtolua_new((Fl_Single_Window)(W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Single_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Single_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Single_Window_new00_local
static int tolua_fltk_fltk_Fl_Single_Window_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Single_Window_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Single_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Single_Window_new01
static int tolua_fltk_fltk_Fl_Single_Window_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Single_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Single_Window* tolua_ret = (Fl_Single_Window*)  Mtolua_new((Fl_Single_Window)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Single_Window");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Single_Window_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Single_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Single_Window_new01_local
static int tolua_fltk_fltk_Fl_Single_Window_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Single_Window_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: flush of class  Fl_Single_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Single_Window_flush00
static int tolua_fltk_fltk_Fl_Single_Window_flush00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Single_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Single_Window* self = (Fl_Single_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'flush'", NULL);
#endif
 {
  self->flush();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'flush'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show of class  Fl_Single_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Single_Window_show00
static int tolua_fltk_fltk_Fl_Single_Window_show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Single_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Single_Window* self = (Fl_Single_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show'", NULL);
#endif
 {
  self->show();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Slider_new00
static int tolua_fltk_fltk_Fl_Slider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Slider* tolua_ret = (Fl_Slider*)  Mtolua_new((Fl_Slider)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Slider");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Slider_new00_local
static int tolua_fltk_fltk_Fl_Slider_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Slider_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Slider_new01
static int tolua_fltk_fltk_Fl_Slider_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isstring(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  unsigned char t = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
  int X = ((int)  tolua_tonumber(tolua_S,3,0));
  int Y = ((int)  tolua_tonumber(tolua_S,4,0));
  int W = ((int)  tolua_tonumber(tolua_S,5,0));
  int H = ((int)  tolua_tonumber(tolua_S,6,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,7,0));
 {
  Fl_Slider* tolua_ret = (Fl_Slider*)  Mtolua_new((Fl_Slider)(t,X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Slider");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Slider_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Slider_new01_local
static int tolua_fltk_fltk_Fl_Slider_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Slider_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: bounds of class  Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Slider_bounds00
static int tolua_fltk_fltk_Fl_Slider_bounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Slider* self = (Fl_Slider*)  tolua_tousertype(tolua_S,1,0);
  double a = ((double)  tolua_tonumber(tolua_S,2,0));
  double b = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bounds'", NULL);
#endif
 {
  self->bounds(a,b);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Slider_handle00
static int tolua_fltk_fltk_Fl_Slider_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Slider* self = (Fl_Slider*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_238 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_238);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollvalue of class  Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Slider_scrollvalue00
static int tolua_fltk_fltk_Fl_Slider_scrollvalue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Slider* self = (Fl_Slider*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
  int size = ((int)  tolua_tonumber(tolua_S,3,0));
  int first = ((int)  tolua_tonumber(tolua_S,4,0));
  int total = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollvalue'", NULL);
#endif
 {
  int tolua_ret = (int)  self->scrollvalue(pos,size,first,total);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollvalue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: slider of class  Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Slider_slider00
static int tolua_fltk_fltk_Fl_Slider_slider00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Slider",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Slider* self = (Fl_Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'slider'", NULL);
#endif
 {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  self->slider();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'slider'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: slider of class  Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Slider_slider01
static int tolua_fltk_fltk_Fl_Slider_slider01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Slider* self = (Fl_Slider*)  tolua_tousertype(tolua_S,1,0);
  Fl_Boxtype c = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'slider'", NULL);
#endif
 {
  self->slider(c);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Slider_slider00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: slider_size of class  Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Slider_slider_size00
static int tolua_fltk_fltk_Fl_Slider_slider_size00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Slider",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Slider* self = (Fl_Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'slider_size'", NULL);
#endif
 {
 if(nparam < 2) {
  double tolua_ret = (double)  self->slider_size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  double opt = ((double)  tolua_tonumber(tolua_S,2,0));
 self->slider_size(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'slider_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Slider : public Fl_Slider, public ToluaBase {
public:
	 int  handle( int tolua_var_238) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Slider_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_238);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Slider:: handle(tolua_var_238);
		};
	};
	 int  format( char* tolua_var_121) {
		if (push_method("format",  tolua_fltk_fltk_Fl_Valuator_format00)) {
			tolua_pushstring(lua_state, (const char*)tolua_var_121);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Slider:: format(tolua_var_121);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Slider:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Slider:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Slider:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Slider:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Slider:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Slider:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Slider:: show();
		};
	};

	 int Fl_Slider__handle( int tolua_var_238) {
		return ( int )Fl_Slider::handle(tolua_var_238);
	};
	 int Fl_Slider__format( char* tolua_var_121) {
		return ( int )Fl_Slider::format(tolua_var_121);
	};
	 Fl_Group* Fl_Slider__as_group( void ) {
		return ( Fl_Group* )Fl_Slider::as_group();
	};
	 Fl_Window* Fl_Slider__as_window( void ) {
		return ( Fl_Window* )Fl_Slider::as_window();
	};
	 void Fl_Slider__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Slider::do_callback(o,arg);
	};
	 void Fl_Slider__draw( void ) {
		Fl_Slider::draw();
	};
	 void Fl_Slider__hide( void ) {
		Fl_Slider::hide();
	};
	 void Fl_Slider__resize( int x, int y, int w, int h) {
		Fl_Slider::resize(x,y,w,h);
	};
	 void Fl_Slider__show( void ) {
		Fl_Slider::show();
	};
	 Lua__Fl_Slider( int X, int Y, int W, int H, const char* L = 0): Fl_Slider(X,Y,W,H,L){};
	 Lua__Fl_Slider( unsigned char t, int X, int Y, int W, int H, const char* L): Fl_Slider(t,X,Y,W,H,L){};
};

/* method: tolua__set_instance of class  Lua__Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Slider_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Slider_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Slider",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Slider* self = (Lua__Fl_Slider*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Slider__handle of class  Lua__Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Slider_Fl_Slider__handle00
static int tolua_fltk_fltk_Lua__Fl_Slider_Fl_Slider__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Slider* self = (Lua__Fl_Slider*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_238 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Slider__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Slider__handle(tolua_var_238);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Slider__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Slider_new00
static int tolua_fltk_fltk_Lua__Fl_Slider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Slider* tolua_ret = (Lua__Fl_Slider*)  Mtolua_new((Lua__Fl_Slider)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Slider");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Slider_new00_local
static int tolua_fltk_fltk_Lua__Fl_Slider_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Slider_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Slider_new01
static int tolua_fltk_fltk_Lua__Fl_Slider_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isstring(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  unsigned char t = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
  int X = ((int)  tolua_tonumber(tolua_S,3,0));
  int Y = ((int)  tolua_tonumber(tolua_S,4,0));
  int W = ((int)  tolua_tonumber(tolua_S,5,0));
  int H = ((int)  tolua_tonumber(tolua_S,6,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,7,0));
 {
  Lua__Fl_Slider* tolua_ret = (Lua__Fl_Slider*)  Mtolua_new((Lua__Fl_Slider)(t,X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Slider");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Lua__Fl_Slider_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Slider_new01_local
static int tolua_fltk_fltk_Lua__Fl_Slider_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Slider_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Slider (lua_State* tolua_S)
{
 Lua__Fl_Slider* self = (Lua__Fl_Slider*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Slider_new00
static int tolua_fltk_fltk_Fl_Value_Slider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Value_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Value_Slider* tolua_ret = (Fl_Value_Slider*)  Mtolua_new((Fl_Value_Slider)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Value_Slider");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Slider_new00_local
static int tolua_fltk_fltk_Fl_Value_Slider_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Value_Slider_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Slider_handle00
static int tolua_fltk_fltk_Fl_Value_Slider_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Slider* self = (Fl_Value_Slider*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_239 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_239);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textcolor of class  Fl_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Slider_textcolor00
static int tolua_fltk_fltk_Fl_Value_Slider_textcolor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Slider",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Slider* self = (Fl_Value_Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textcolor'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->textcolor();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->textcolor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textcolor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textfont of class  Fl_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Slider_textfont00
static int tolua_fltk_fltk_Fl_Value_Slider_textfont00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Slider",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Slider* self = (Fl_Value_Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textfont'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textfont();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textfont(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textfont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textsize of class  Fl_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Value_Slider_textsize00
static int tolua_fltk_fltk_Fl_Value_Slider_textsize00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Value_Slider",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Value_Slider* self = (Fl_Value_Slider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textsize'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->textsize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->textsize(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Value_Slider : public Fl_Value_Slider, public ToluaBase {
public:
	 int  handle( int tolua_var_239) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Value_Slider_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_239);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Value_Slider:: handle(tolua_var_239);
		};
	};
	 int  format( char* tolua_var_121) {
		if (push_method("format",  tolua_fltk_fltk_Fl_Valuator_format00)) {
			tolua_pushstring(lua_state, (const char*)tolua_var_121);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Value_Slider:: format(tolua_var_121);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Value_Slider:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Value_Slider:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Value_Slider:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Value_Slider:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Value_Slider:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Value_Slider:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Value_Slider:: show();
		};
	};

	 int Fl_Value_Slider__handle( int tolua_var_239) {
		return ( int )Fl_Value_Slider::handle(tolua_var_239);
	};
	 int Fl_Value_Slider__format( char* tolua_var_121) {
		return ( int )Fl_Value_Slider::format(tolua_var_121);
	};
	 Fl_Group* Fl_Value_Slider__as_group( void ) {
		return ( Fl_Group* )Fl_Value_Slider::as_group();
	};
	 Fl_Window* Fl_Value_Slider__as_window( void ) {
		return ( Fl_Window* )Fl_Value_Slider::as_window();
	};
	 void Fl_Value_Slider__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Value_Slider::do_callback(o,arg);
	};
	 void Fl_Value_Slider__draw( void ) {
		Fl_Value_Slider::draw();
	};
	 void Fl_Value_Slider__hide( void ) {
		Fl_Value_Slider::hide();
	};
	 void Fl_Value_Slider__resize( int x, int y, int w, int h) {
		Fl_Value_Slider::resize(x,y,w,h);
	};
	 void Fl_Value_Slider__show( void ) {
		Fl_Value_Slider::show();
	};
	 Lua__Fl_Value_Slider( int x, int y, int w, int h, const char* l = 0): Fl_Value_Slider(x,y,w,h,l){};
};

/* method: tolua__set_instance of class  Lua__Fl_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Value_Slider_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Value_Slider_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Value_Slider",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Value_Slider* self = (Lua__Fl_Value_Slider*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Value_Slider__handle of class  Lua__Fl_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Value_Slider_Fl_Value_Slider__handle00
static int tolua_fltk_fltk_Lua__Fl_Value_Slider_Fl_Value_Slider__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Value_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Value_Slider* self = (Lua__Fl_Value_Slider*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_239 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Value_Slider__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Value_Slider__handle(tolua_var_239);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Value_Slider__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Value_Slider_new00
static int tolua_fltk_fltk_Lua__Fl_Value_Slider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Value_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Value_Slider* tolua_ret = (Lua__Fl_Value_Slider*)  Mtolua_new((Lua__Fl_Value_Slider)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Value_Slider");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Value_Slider_new00_local
static int tolua_fltk_fltk_Lua__Fl_Value_Slider_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Value_Slider_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Value_Slider (lua_State* tolua_S)
{
 Lua__Fl_Value_Slider* self = (Lua__Fl_Value_Slider*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Fl_Fill_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Fill_Slider_new00
static int tolua_fltk_fltk_Fl_Fill_Slider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Fill_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Fill_Slider* tolua_ret = (Fl_Fill_Slider*)  Mtolua_new((Fl_Fill_Slider)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Fill_Slider");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Fill_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Fill_Slider_new00_local
static int tolua_fltk_fltk_Fl_Fill_Slider_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Fill_Slider_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Hor_Fill_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Hor_Fill_Slider_new00
static int tolua_fltk_fltk_Fl_Hor_Fill_Slider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Hor_Fill_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Hor_Fill_Slider* tolua_ret = (Fl_Hor_Fill_Slider*)  Mtolua_new((Fl_Hor_Fill_Slider)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Hor_Fill_Slider");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Hor_Fill_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Hor_Fill_Slider_new00_local
static int tolua_fltk_fltk_Fl_Hor_Fill_Slider_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Hor_Fill_Slider_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Hor_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Hor_Slider_new00
static int tolua_fltk_fltk_Fl_Hor_Slider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Hor_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Hor_Slider* tolua_ret = (Fl_Hor_Slider*)  Mtolua_new((Fl_Hor_Slider)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Hor_Slider");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Hor_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Hor_Slider_new00_local
static int tolua_fltk_fltk_Fl_Hor_Slider_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Hor_Slider_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Hor_Nice_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Hor_Nice_Slider_new00
static int tolua_fltk_fltk_Fl_Hor_Nice_Slider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Hor_Nice_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Hor_Nice_Slider* tolua_ret = (Fl_Hor_Nice_Slider*)  Mtolua_new((Fl_Hor_Nice_Slider)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Hor_Nice_Slider");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Hor_Nice_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Hor_Nice_Slider_new00_local
static int tolua_fltk_fltk_Fl_Hor_Nice_Slider_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Hor_Nice_Slider_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Hor_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Hor_Value_Slider_new00
static int tolua_fltk_fltk_Fl_Hor_Value_Slider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Hor_Value_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Hor_Value_Slider* tolua_ret = (Fl_Hor_Value_Slider*)  Mtolua_new((Fl_Hor_Value_Slider)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Hor_Value_Slider");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Hor_Value_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Hor_Value_Slider_new00_local
static int tolua_fltk_fltk_Fl_Hor_Value_Slider_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Hor_Value_Slider_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Fill_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Fill_Dial_new00
static int tolua_fltk_fltk_Fl_Fill_Dial_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Fill_Dial",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Fill_Dial* tolua_ret = (Fl_Fill_Dial*)  Mtolua_new((Fl_Fill_Dial)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Fill_Dial");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Fill_Dial */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Fill_Dial_new00_local
static int tolua_fltk_fltk_Fl_Fill_Dial_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Fill_Dial_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Menu_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Window_new00
static int tolua_fltk_fltk_Fl_Menu_Window_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Menu_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int W = ((int)  tolua_tonumber(tolua_S,2,0));
  int H = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,4,0));
 {
  Fl_Menu_Window* tolua_ret = (Fl_Menu_Window*)  Mtolua_new((Fl_Menu_Window)(W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Window");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Menu_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Window_new00_local
static int tolua_fltk_fltk_Fl_Menu_Window_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Menu_Window_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Menu_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Window_new01
static int tolua_fltk_fltk_Fl_Menu_Window_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Menu_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Menu_Window* tolua_ret = (Fl_Menu_Window*)  Mtolua_new((Fl_Menu_Window)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Menu_Window");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Menu_Window_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Menu_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Window_new01_local
static int tolua_fltk_fltk_Fl_Menu_Window_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Menu_Window_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_overlay of class  Fl_Menu_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Window_clear_overlay00
static int tolua_fltk_fltk_Fl_Menu_Window_clear_overlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Window* self = (Fl_Menu_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_overlay'", NULL);
#endif
 {
  self->clear_overlay();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_overlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: erase of class  Fl_Menu_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Window_erase00
static int tolua_fltk_fltk_Fl_Menu_Window_erase00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Window* self = (Fl_Menu_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'erase'", NULL);
#endif
 {
  self->erase();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'erase'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: flush of class  Fl_Menu_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Window_flush00
static int tolua_fltk_fltk_Fl_Menu_Window_flush00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Window* self = (Fl_Menu_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'flush'", NULL);
#endif
 {
  self->flush();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'flush'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hide of class  Fl_Menu_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Window_hide00
static int tolua_fltk_fltk_Fl_Menu_Window_hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Window* self = (Fl_Menu_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hide'", NULL);
#endif
 {
  self->hide();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: overlay of class  Fl_Menu_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Window_overlay00
static int tolua_fltk_fltk_Fl_Menu_Window_overlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Window* self = (Fl_Menu_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'overlay'", NULL);
#endif
 {
  int tolua_ret = (int)  self->overlay();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'overlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_overlay of class  Fl_Menu_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Window_set_overlay00
static int tolua_fltk_fltk_Fl_Menu_Window_set_overlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Window* self = (Fl_Menu_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_overlay'", NULL);
#endif
 {
  self->set_overlay();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_overlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show of class  Fl_Menu_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Menu_Window_show00
static int tolua_fltk_fltk_Fl_Menu_Window_show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Menu_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Menu_Window* self = (Fl_Menu_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show'", NULL);
#endif
 {
  self->show();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Nice_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Nice_Slider_new00
static int tolua_fltk_fltk_Fl_Nice_Slider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Nice_Slider",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Nice_Slider* tolua_ret = (Fl_Nice_Slider*)  Mtolua_new((Fl_Nice_Slider)(x,y,w,h,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Nice_Slider");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Nice_Slider */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Nice_Slider_new00_local
static int tolua_fltk_fltk_Fl_Nice_Slider_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Nice_Slider_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: can_do_overlay of class  Fl_Overlay_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Overlay_Window_can_do_overlay00
static int tolua_fltk_fltk_Fl_Overlay_Window_can_do_overlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Overlay_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Overlay_Window* self = (Fl_Overlay_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'can_do_overlay'", NULL);
#endif
 {
  int tolua_ret = (int)  self->can_do_overlay();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'can_do_overlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: flush of class  Fl_Overlay_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Overlay_Window_flush00
static int tolua_fltk_fltk_Fl_Overlay_Window_flush00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Overlay_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Overlay_Window* self = (Fl_Overlay_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'flush'", NULL);
#endif
 {
  self->flush();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'flush'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hide of class  Fl_Overlay_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Overlay_Window_hide00
static int tolua_fltk_fltk_Fl_Overlay_Window_hide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Overlay_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Overlay_Window* self = (Fl_Overlay_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hide'", NULL);
#endif
 {
  self->hide();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: redraw_overlay of class  Fl_Overlay_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Overlay_Window_redraw_overlay00
static int tolua_fltk_fltk_Fl_Overlay_Window_redraw_overlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Overlay_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Overlay_Window* self = (Fl_Overlay_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'redraw_overlay'", NULL);
#endif
 {
  self->redraw_overlay();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'redraw_overlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Fl_Overlay_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Overlay_Window_resize00
static int tolua_fltk_fltk_Fl_Overlay_Window_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Overlay_Window",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Overlay_Window* self = (Fl_Overlay_Window*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_240 = ((int)  tolua_tonumber(tolua_S,2,0));
  int tolua_var_241 = ((int)  tolua_tonumber(tolua_S,3,0));
  int tolua_var_242 = ((int)  tolua_tonumber(tolua_S,4,0));
  int tolua_var_243 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(tolua_var_240,tolua_var_241,tolua_var_242,tolua_var_243);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: show of class  Fl_Overlay_Window */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Overlay_Window_show00
static int tolua_fltk_fltk_Fl_Overlay_Window_show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Overlay_Window",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Overlay_Window* self = (Fl_Overlay_Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'show'", NULL);
#endif
 {
  self->show();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_PNG_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PNG_Image_new00
static int tolua_fltk_fltk_Fl_PNG_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_PNG_Image",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  Fl_PNG_Image* tolua_ret = (Fl_PNG_Image*)  Mtolua_new((Fl_PNG_Image)(filename));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_PNG_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_PNG_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PNG_Image_new00_local
static int tolua_fltk_fltk_Fl_PNG_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_PNG_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_PNM_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PNM_Image_new00
static int tolua_fltk_fltk_Fl_PNM_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_PNM_Image",0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  Fl_PNM_Image* tolua_ret = (Fl_PNM_Image*)  Mtolua_new((Fl_PNM_Image)(filename));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_PNM_Image");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_PNM_Image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_PNM_Image_new00_local
static int tolua_fltk_fltk_Fl_PNM_Image_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_PNM_Image_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Roller */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Roller_new00
static int tolua_fltk_fltk_Fl_Roller_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Roller",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Roller* tolua_ret = (Fl_Roller*)  Mtolua_new((Fl_Roller)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Roller");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Roller */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Roller_new00_local
static int tolua_fltk_fltk_Fl_Roller_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Roller_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Roller */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Roller_handle00
static int tolua_fltk_fltk_Fl_Roller_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Roller",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Roller* self = (Fl_Roller*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_244 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_244);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scrollbar_new00
static int tolua_fltk_fltk_Fl_Scrollbar_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Fl_Scrollbar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Fl_Scrollbar* tolua_ret = (Fl_Scrollbar*)  Mtolua_new((Fl_Scrollbar)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Scrollbar");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scrollbar_new00_local
static int tolua_fltk_fltk_Fl_Scrollbar_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Fl_Scrollbar_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scrollbar_handle00
static int tolua_fltk_fltk_Fl_Scrollbar_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scrollbar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Scrollbar* self = (Fl_Scrollbar*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_245 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(tolua_var_245);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: linesize of class  Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scrollbar_linesize00
static int tolua_fltk_fltk_Fl_Scrollbar_linesize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scrollbar",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Scrollbar* self = (Fl_Scrollbar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'linesize'", NULL);
#endif
 {
  int tolua_ret = (int)  self->linesize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'linesize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: linesize of class  Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scrollbar_linesize01
static int tolua_fltk_fltk_Fl_Scrollbar_linesize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scrollbar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Scrollbar* self = (Fl_Scrollbar*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'linesize'", NULL);
#endif
 {
  self->linesize(i);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Scrollbar_linesize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scrollbar_value00
static int tolua_fltk_fltk_Fl_Scrollbar_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scrollbar",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Scrollbar* self = (Fl_Scrollbar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scrollbar_value01
static int tolua_fltk_fltk_Fl_Scrollbar_value01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scrollbar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Scrollbar* self = (Fl_Scrollbar*)  tolua_tousertype(tolua_S,1,0);
  int p = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value(p);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Scrollbar_value00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: value of class  Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Fl_Scrollbar_value02
static int tolua_fltk_fltk_Fl_Scrollbar_value02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Fl_Scrollbar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Scrollbar* self = (Fl_Scrollbar*)  tolua_tousertype(tolua_S,1,0);
  int pos = ((int)  tolua_tonumber(tolua_S,2,0));
  int size = ((int)  tolua_tonumber(tolua_S,3,0));
  int first = ((int)  tolua_tonumber(tolua_S,4,0));
  int total = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'value'", NULL);
#endif
 {
  int tolua_ret = (int)  self->value(pos,size,first,total);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_Fl_Scrollbar_value01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Fl_Scrollbar : public Fl_Scrollbar, public ToluaBase {
public:
	 int  handle( int tolua_var_245) {
		if (push_method("handle",  tolua_fltk_fltk_Fl_Scrollbar_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)tolua_var_245);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Scrollbar:: handle(tolua_var_245);
		};
	};
	 int  format( char* tolua_var_121) {
		if (push_method("format",  tolua_fltk_fltk_Fl_Valuator_format00)) {
			tolua_pushstring(lua_state, (const char*)tolua_var_121);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Fl_Scrollbar:: format(tolua_var_121);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Widget_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Fl_Scrollbar:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Fl_Scrollbar:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Fl_Scrollbar:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Scrollbar:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Scrollbar:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Fl_Scrollbar:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Fl_Scrollbar:: show();
		};
	};

	 int Fl_Scrollbar__handle( int tolua_var_245) {
		return ( int )Fl_Scrollbar::handle(tolua_var_245);
	};
	 int Fl_Scrollbar__format( char* tolua_var_121) {
		return ( int )Fl_Scrollbar::format(tolua_var_121);
	};
	 Fl_Group* Fl_Scrollbar__as_group( void ) {
		return ( Fl_Group* )Fl_Scrollbar::as_group();
	};
	 Fl_Window* Fl_Scrollbar__as_window( void ) {
		return ( Fl_Window* )Fl_Scrollbar::as_window();
	};
	 void Fl_Scrollbar__do_callback( Fl_Widget* o, void* arg = 0) {
		Fl_Scrollbar::do_callback(o,arg);
	};
	 void Fl_Scrollbar__draw( void ) {
		Fl_Scrollbar::draw();
	};
	 void Fl_Scrollbar__hide( void ) {
		Fl_Scrollbar::hide();
	};
	 void Fl_Scrollbar__resize( int x, int y, int w, int h) {
		Fl_Scrollbar::resize(x,y,w,h);
	};
	 void Fl_Scrollbar__show( void ) {
		Fl_Scrollbar::show();
	};
	 Lua__Fl_Scrollbar( int X, int Y, int W, int H, const char* L = 0): Fl_Scrollbar(X,Y,W,H,L){};
};

/* method: tolua__set_instance of class  Lua__Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Scrollbar_tolua__set_instance00
static int tolua_fltk_fltk_Lua__Fl_Scrollbar_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Scrollbar",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Scrollbar* self = (Lua__Fl_Scrollbar*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Fl_Scrollbar__handle of class  Lua__Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Scrollbar_Fl_Scrollbar__handle00
static int tolua_fltk_fltk_Lua__Fl_Scrollbar_Fl_Scrollbar__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Fl_Scrollbar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Fl_Scrollbar* self = (Lua__Fl_Scrollbar*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_245 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Fl_Scrollbar__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Fl_Scrollbar__handle(tolua_var_245);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Fl_Scrollbar__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Scrollbar_new00
static int tolua_fltk_fltk_Lua__Fl_Scrollbar_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Fl_Scrollbar",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* L = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Fl_Scrollbar* tolua_ret = (Lua__Fl_Scrollbar*)  Mtolua_new((Lua__Fl_Scrollbar)(X,Y,W,H,L));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Fl_Scrollbar");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Fl_Scrollbar */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_Lua__Fl_Scrollbar_new00_local
static int tolua_fltk_fltk_Lua__Fl_Scrollbar_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_fltk_Lua__Fl_Scrollbar_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Fl_Scrollbar (lua_State* tolua_S)
{
 Lua__Fl_Scrollbar* self = (Lua__Fl_Scrollbar*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* function: fl_box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_box00
static int tolua_fltk_fltk_fl_box00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Boxtype b = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,1,0));
 {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  fl_box(b);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_box'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_down */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_down00
static int tolua_fltk_fltk_fl_down00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Boxtype b = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,1,0));
 {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  fl_down(b);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_down'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_frame */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_frame00
static int tolua_fltk_fltk_fl_frame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Boxtype b = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,1,0));
 {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  fl_frame(b);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_frame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_color_average */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_color_average00
static int tolua_fltk_fltk_fl_color_average00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int c1 = (( unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int c2 = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  float weight = ((float)  tolua_tonumber(tolua_S,3,0));
 {
  unsigned int tolua_ret = ( unsigned int)  fl_color_average(c1,c2,weight);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_color_average'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_color_cube */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_color_cube00
static int tolua_fltk_fltk_fl_color_cube00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int r = ((int)  tolua_tonumber(tolua_S,1,0));
  int g = ((int)  tolua_tonumber(tolua_S,2,0));
  int b = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  unsigned int tolua_ret = ( unsigned int)  fl_color_cube(r,g,b);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_color_cube'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_contrast */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_contrast00
static int tolua_fltk_fltk_fl_contrast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int fg = (( unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int bg = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 {
  unsigned int tolua_ret = ( unsigned int)  fl_contrast(fg,bg);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_contrast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_darker */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_darker00
static int tolua_fltk_fltk_fl_darker00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,1,0));
 {
  unsigned int tolua_ret = ( unsigned int)  fl_darker(c);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_darker'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_gray_ramp */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_gray_ramp00
static int tolua_fltk_fltk_fl_gray_ramp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int i = ((int)  tolua_tonumber(tolua_S,1,0));
 {
  unsigned int tolua_ret = ( unsigned int)  fl_gray_ramp(i);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_gray_ramp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_inactive */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_inactive00
static int tolua_fltk_fltk_fl_inactive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,1,0));
 {
  unsigned int tolua_ret = ( unsigned int)  fl_inactive(c);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_inactive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_lighter */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_lighter00
static int tolua_fltk_fltk_fl_lighter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,1,0));
 {
  unsigned int tolua_ret = ( unsigned int)  fl_lighter(c);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_lighter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_rgb_color */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_rgb_color00
static int tolua_fltk_fltk_fl_rgb_color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned char g = (( unsigned char)  tolua_tonumber(tolua_S,1,0));
 {
  unsigned int tolua_ret = ( unsigned int)  fl_rgb_color(g);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_rgb_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_rgb_color */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_rgb_color01
static int tolua_fltk_fltk_fl_rgb_color01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  unsigned char r = (( unsigned char)  tolua_tonumber(tolua_S,1,0));
  unsigned char g = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
  unsigned char b = (( unsigned char)  tolua_tonumber(tolua_S,3,0));
 {
  unsigned int tolua_ret = ( unsigned int)  fl_rgb_color(r,g,b);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_fl_rgb_color00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: exit */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_exit00
static int tolua_fltk_fltk_exit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int result = ((int)  tolua_tonumber(tolua_S,1,0));
 {
  exit(result);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_message_icon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_message_icon00
static int tolua_fltk_fltk_fl_message_icon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Widget* tolua_ret = (Fl_Widget*)  fl_message_icon();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_message_icon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_input00
static int tolua_fltk_fltk_fl_input00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* label = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* deflt = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  char* tolua_ret = (char*)  fl_input(label,deflt);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_input'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_password */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_password00
static int tolua_fltk_fltk_fl_password00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* label = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* deflt = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  char* tolua_ret = (char*)  fl_password(label,deflt);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_password'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_ask */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_ask00
static int tolua_fltk_fltk_fl_ask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* tolua_var_246 = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_ask(tolua_var_246);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_ask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_choice */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_choice00
static int tolua_fltk_fltk_fl_choice00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isstring(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* q = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* b0 = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* b1 = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* b2 = ((const char*)  tolua_tostring(tolua_S,4,0));
 {
  int tolua_ret = (int)  fl_choice(q,b0,b1,b2);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_choice'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_alert */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_alert00
static int tolua_fltk_fltk_fl_alert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* tolua_var_247 = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  fl_alert(tolua_var_247);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_alert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_beep */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_beep00
static int tolua_fltk_fltk_fl_beep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int type = ((int)  tolua_tonumber(tolua_S,1,FL_BEEP_DEFAULT));
 {
  fl_beep(type);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_beep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_message */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_message00
static int tolua_fltk_fltk_fl_message00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* tolua_var_248 = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  fl_message(tolua_var_248);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_message'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_message_font */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_message_font00
static int tolua_fltk_fltk_fl_message_font00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
   int f = ((  int)  tolua_tonumber(tolua_S,1,0));
   int s = ((  int)  tolua_tonumber(tolua_S,2,0));
 {
  fl_message_font(f,s);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_message_font'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_input */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_input01
static int tolua_fltk_fltk_fl_input01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* label = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* deflt = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  const char* tolua_ret = (const char*)  fl_input(label,deflt);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_fl_input00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_password */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_password01
static int tolua_fltk_fltk_fl_password01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* label = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* deflt = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  const char* tolua_ret = (const char*)  fl_password(label,deflt);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_fl_password00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_message_font */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_message_font01
static int tolua_fltk_fltk_fl_message_font01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
   int f = ((  int)  tolua_tonumber(tolua_S,1,0));
   int s = ((  int)  tolua_tonumber(tolua_S,2,0));
 {
  fl_message_font(f,s);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_message_font00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: fl_no */
#ifndef TOLUA_DISABLE_tolua_get_fltk_fl_no
static int tolua_get_fltk_fl_no(lua_State* tolua_S)
{
 tolua_pushstring(tolua_S,(const char*)fl_no);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: fl_yes */
#ifndef TOLUA_DISABLE_tolua_get_fltk_fl_yes
static int tolua_get_fltk_fl_yes(lua_State* tolua_S)
{
 tolua_pushstring(tolua_S,(const char*)fl_yes);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: fl_ok */
#ifndef TOLUA_DISABLE_tolua_get_fltk_fl_ok
static int tolua_get_fltk_fl_ok(lua_State* tolua_S)
{
 tolua_pushstring(tolua_S,(const char*)fl_ok);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: fl_cancel */
#ifndef TOLUA_DISABLE_tolua_get_fltk_fl_cancel
static int tolua_get_fltk_fl_cancel(lua_State* tolua_S)
{
 tolua_pushstring(tolua_S,(const char*)fl_cancel);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: fl_close */
#ifndef TOLUA_DISABLE_tolua_get_fltk_fl_close
static int tolua_get_fltk_fl_close(lua_State* tolua_S)
{
 tolua_pushstring(tolua_S,(const char*)fl_close);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_color */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_color00
static int tolua_fltk_fltk_fl_color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  unsigned int tolua_ret = ( unsigned int)  fl_color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_font */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_font00
static int tolua_fltk_fltk_fl_font00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
   int tolua_ret = (  int)  fl_font();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_font'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_size */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_size00
static int tolua_fltk_fltk_fl_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
   int tolua_ret = (  int)  fl_size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_clip_region */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_clip_region00
static int tolua_fltk_fltk_fl_clip_region00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Region tolua_ret = (Fl_Region)  fl_clip_region();
 {
#ifdef __cplusplus
 void* tolua_obj = Mtolua_new((Fl_Region)(tolua_ret));
  tolua_pushusertype(tolua_S,tolua_obj,"Fl_Region");
 tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
 void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Fl_Region));
  tolua_pushusertype(tolua_S,tolua_obj,"Fl_Region");
 tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
 }
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_clip_region'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_latin1_to_local */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_latin1_to_local00
static int tolua_fltk_fltk_fl_latin1_to_local00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* t = ((const char*)  tolua_tostring(tolua_S,1,0));
  int n = ((int)  tolua_tonumber(tolua_S,2,-1));
 {
  char* tolua_ret = (char*)  fl_latin1_to_local(t,n);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_latin1_to_local'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_local_to_latin1 */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_local_to_latin100
static int tolua_fltk_fltk_fl_local_to_latin100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* t = ((const char*)  tolua_tostring(tolua_S,1,0));
  int n = ((int)  tolua_tonumber(tolua_S,2,-1));
 {
  char* tolua_ret = (char*)  fl_local_to_latin1(t,n);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_local_to_latin1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_local_to_mac_roman */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_local_to_mac_roman00
static int tolua_fltk_fltk_fl_local_to_mac_roman00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* t = ((const char*)  tolua_tostring(tolua_S,1,0));
  int n = ((int)  tolua_tonumber(tolua_S,2,-1));
 {
  char* tolua_ret = (char*)  fl_local_to_mac_roman(t,n);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_local_to_mac_roman'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_mac_roman_to_local */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_mac_roman_to_local00
static int tolua_fltk_fltk_fl_mac_roman_to_local00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* t = ((const char*)  tolua_tostring(tolua_S,1,0));
  int n = ((int)  tolua_tonumber(tolua_S,2,-1));
 {
  char* tolua_ret = (char*)  fl_mac_roman_to_local(t,n);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_mac_roman_to_local'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_can_do_alpha_blending */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_can_do_alpha_blending00
static int tolua_fltk_fltk_fl_can_do_alpha_blending00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  char tolua_ret = (char)  fl_can_do_alpha_blending();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_can_do_alpha_blending'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_expand_text */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_expand_text00
static int tolua_fltk_fltk_fl_expand_text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* from = ((const char*)  tolua_tostring(tolua_S,1,0));
  char* buf = ((char*)  tolua_tostring(tolua_S,2,0));
  int maxbuf = ((int)  tolua_tonumber(tolua_S,3,0));
  double maxw = ((double)  tolua_tonumber(tolua_S,4,0));
  int n = ((int)  tolua_tonumber(tolua_S,5,0));
  double width = ((double)  tolua_tonumber(tolua_S,6,0));
  int wrap = ((int)  tolua_tonumber(tolua_S,7,0));
  int draw_symbols = ((int)  tolua_tonumber(tolua_S,8,0));
 {
  char* tolua_ret = (char*)  fl_expand_text(from,buf,maxbuf,maxw,n,width,wrap,draw_symbols);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)n);
 tolua_pushnumber(tolua_S,(lua_Number)width);
 }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_expand_text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_shortcut_label */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_shortcut_label00
static int tolua_fltk_fltk_fl_shortcut_label00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int shortcut = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
 {
  char* tolua_ret = (char*)  fl_shortcut_label(shortcut);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_shortcut_label'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_shortcut_label */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_shortcut_label01
static int tolua_fltk_fltk_fl_shortcut_label01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  unsigned int shortcut = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  const char* eom = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  char* tolua_ret = (char*)  fl_shortcut_label(shortcut,&eom);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 tolua_pushstring(tolua_S,(const char*)eom);
 }
 }
 return 2;
tolua_lerror:
 return tolua_fltk_fltk_fl_shortcut_label00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_transform_dx */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_transform_dx00
static int tolua_fltk_fltk_fl_transform_dx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double x = ((double)  tolua_tonumber(tolua_S,1,0));
  double y = ((double)  tolua_tonumber(tolua_S,2,0));
 {
  double tolua_ret = (double)  fl_transform_dx(x,y);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_transform_dx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_transform_dy */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_transform_dy00
static int tolua_fltk_fltk_fl_transform_dy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double x = ((double)  tolua_tonumber(tolua_S,1,0));
  double y = ((double)  tolua_tonumber(tolua_S,2,0));
 {
  double tolua_ret = (double)  fl_transform_dy(x,y);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_transform_dy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_transform_x */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_transform_x00
static int tolua_fltk_fltk_fl_transform_x00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double x = ((double)  tolua_tonumber(tolua_S,1,0));
  double y = ((double)  tolua_tonumber(tolua_S,2,0));
 {
  double tolua_ret = (double)  fl_transform_x(x,y);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_transform_x'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_transform_y */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_transform_y00
static int tolua_fltk_fltk_fl_transform_y00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double x = ((double)  tolua_tonumber(tolua_S,1,0));
  double y = ((double)  tolua_tonumber(tolua_S,2,0));
 {
  double tolua_ret = (double)  fl_transform_y(x,y);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_transform_y'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_width */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_width00
static int tolua_fltk_fltk_fl_width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* txt = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  double tolua_ret = (double)  fl_width(txt);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_width */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_width01
static int tolua_fltk_fltk_fl_width01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* txt = ((const char*)  tolua_tostring(tolua_S,1,0));
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  double tolua_ret = (double)  fl_width(txt,n);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_fl_width00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_width */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_width02
static int tolua_fltk_fltk_fl_width02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  unsigned int tolua_var_249 = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
 {
  double tolua_ret = (double)  fl_width(tolua_var_249);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_fl_width01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_descent */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_descent00
static int tolua_fltk_fltk_fl_descent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  fl_descent();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_descent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_height */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_height00
static int tolua_fltk_fltk_fl_height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  fl_height();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_clip_box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_clip_box00
static int tolua_fltk_fltk_fl_clip_box00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int w = ((int)  tolua_tonumber(tolua_S,3,0));
  int h = ((int)  tolua_tonumber(tolua_S,4,0));
  int X = ((int)  tolua_tonumber(tolua_S,5,0));
  int Y = ((int)  tolua_tonumber(tolua_S,6,0));
  int W = ((int)  tolua_tonumber(tolua_S,7,0));
  int H = ((int)  tolua_tonumber(tolua_S,8,0));
 {
  int tolua_ret = (int)  fl_clip_box(x,y,w,h,X,Y,W,H);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)X);
 tolua_pushnumber(tolua_S,(lua_Number)Y);
 tolua_pushnumber(tolua_S,(lua_Number)W);
 tolua_pushnumber(tolua_S,(lua_Number)H);
 }
 }
 return 5;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_clip_box'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw_pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw_pixmap00
static int tolua_fltk_fltk_fl_draw_pixmap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  char* data = ((char*)  tolua_tostring(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  unsigned int tolua_var_250 = (( unsigned int)  tolua_tonumber(tolua_S,4,FL_GRAY));
 {
  int tolua_ret = (int)  fl_draw_pixmap(&data,x,y,tolua_var_250);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushstring(tolua_S,(const char*)data);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_draw_pixmap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw_pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw_pixmap01
static int tolua_fltk_fltk_fl_draw_pixmap01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* cdata = ((const char*)  tolua_tostring(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  unsigned int tolua_var_251 = (( unsigned int)  tolua_tonumber(tolua_S,4,FL_GRAY));
 {
  int tolua_ret = (int)  fl_draw_pixmap(&cdata,x,y,tolua_var_251);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushstring(tolua_S,(const char*)cdata);
 }
 }
 return 2;
tolua_lerror:
 return tolua_fltk_fltk_fl_draw_pixmap00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw_symbol */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw_symbol00
static int tolua_fltk_fltk_fl_draw_symbol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* label = ((const char*)  tolua_tostring(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  unsigned int tolua_var_252 = (( unsigned int)  tolua_tonumber(tolua_S,6,0));
 {
  int tolua_ret = (int)  fl_draw_symbol(label,x,y,w,h,tolua_var_252);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_draw_symbol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_height */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_height01
static int tolua_fltk_fltk_fl_height01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int font = ((int)  tolua_tonumber(tolua_S,1,0));
  int size = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_height(font,size);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_fl_height00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_measure_pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_measure_pixmap00
static int tolua_fltk_fltk_fl_measure_pixmap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  char* data = ((char*)  tolua_tostring(tolua_S,1,0));
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  int tolua_ret = (int)  fl_measure_pixmap(&data,w,h);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushstring(tolua_S,(const char*)data);
 tolua_pushnumber(tolua_S,(lua_Number)w);
 tolua_pushnumber(tolua_S,(lua_Number)h);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_measure_pixmap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_measure_pixmap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_measure_pixmap01
static int tolua_fltk_fltk_fl_measure_pixmap01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* cdata = ((const char*)  tolua_tostring(tolua_S,1,0));
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  int tolua_ret = (int)  fl_measure_pixmap(&cdata,w,h);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushstring(tolua_S,(const char*)cdata);
 tolua_pushnumber(tolua_S,(lua_Number)w);
 tolua_pushnumber(tolua_S,(lua_Number)h);
 }
 }
 return 4;
tolua_lerror:
 return tolua_fltk_fltk_fl_measure_pixmap00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_not_clipped */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_not_clipped00
static int tolua_fltk_fltk_fl_not_clipped00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int w = ((int)  tolua_tonumber(tolua_S,3,0));
  int h = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  int tolua_ret = (int)  fl_not_clipped(x,y,w,h);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_not_clipped'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_old_shortcut */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_old_shortcut00
static int tolua_fltk_fltk_fl_old_shortcut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* s = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_old_shortcut(s);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_old_shortcut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_read_image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_read_image00
static int tolua_fltk_fltk_fl_read_image00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned char p = (( unsigned char)  tolua_tonumber(tolua_S,1,0));
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int alpha = ((int)  tolua_tonumber(tolua_S,6,0));
 {
  void* tolua_ret = (void*)  fl_read_image(&p,X,Y,W,H,alpha);
 tolua_pushuserdata(tolua_S,(void*)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)p);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_read_image'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_color */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_color01
static int tolua_fltk_fltk_fl_color01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,1,0));
 {
  fl_color(c);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_color00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_color */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_color02
static int tolua_fltk_fltk_fl_color02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  unsigned char r = (( unsigned char)  tolua_tonumber(tolua_S,1,0));
  unsigned char g = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
  unsigned char b = (( unsigned char)  tolua_tonumber(tolua_S,3,0));
 {
  fl_color(r,g,b);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_color01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_arc */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_arc00
static int tolua_fltk_fltk_fl_arc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double x = ((double)  tolua_tonumber(tolua_S,1,0));
  double y = ((double)  tolua_tonumber(tolua_S,2,0));
  double r = ((double)  tolua_tonumber(tolua_S,3,0));
  double start = ((double)  tolua_tonumber(tolua_S,4,0));
  double end = ((double)  tolua_tonumber(tolua_S,5,0));
 {
  fl_arc(x,y,r,start,end);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_arc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_arc */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_arc01
static int tolua_fltk_fltk_fl_arc01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int w = ((int)  tolua_tonumber(tolua_S,3,0));
  int h = ((int)  tolua_tonumber(tolua_S,4,0));
  double a1 = ((double)  tolua_tonumber(tolua_S,5,0));
  double a2 = ((double)  tolua_tonumber(tolua_S,6,0));
 {
  fl_arc(x,y,w,h,a1,a2);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_arc00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_begin_complex_polygon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_begin_complex_polygon00
static int tolua_fltk_fltk_fl_begin_complex_polygon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_begin_complex_polygon();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_begin_complex_polygon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_begin_line */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_begin_line00
static int tolua_fltk_fltk_fl_begin_line00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_begin_line();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_begin_line'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_begin_loop */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_begin_loop00
static int tolua_fltk_fltk_fl_begin_loop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_begin_loop();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_begin_loop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_begin_points */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_begin_points00
static int tolua_fltk_fltk_fl_begin_points00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_begin_points();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_begin_points'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_begin_polygon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_begin_polygon00
static int tolua_fltk_fltk_fl_begin_polygon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_begin_polygon();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_begin_polygon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_circle */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_circle00
static int tolua_fltk_fltk_fl_circle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double x = ((double)  tolua_tonumber(tolua_S,1,0));
  double y = ((double)  tolua_tonumber(tolua_S,2,0));
  double r = ((double)  tolua_tonumber(tolua_S,3,0));
 {
  fl_circle(x,y,r);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_circle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_clip_region */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_clip_region01
static int tolua_fltk_fltk_fl_clip_region01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"Fl_Region",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Fl_Region r = *((Fl_Region*)  tolua_tousertype(tolua_S,1,0));
 {
  fl_clip_region(r);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_clip_region00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_color */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_color03
static int tolua_fltk_fltk_fl_color03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int c = ((int)  tolua_tonumber(tolua_S,1,0));
 {
  fl_color(c);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_color02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_cursor */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_cursor00
static int tolua_fltk_fltk_fl_cursor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Cursor tolua_var_253 = ((Fl_Cursor) (int)  tolua_tonumber(tolua_S,1,0));
  unsigned int fg = (( unsigned int)  tolua_tonumber(tolua_S,2,FL_BLACK));
  unsigned int bg = (( unsigned int)  tolua_tonumber(tolua_S,3,FL_WHITE));
 {
  fl_cursor(tolua_var_253,fg,bg);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_cursor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_curve */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_curve00
static int tolua_fltk_fltk_fl_curve00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double X0 = ((double)  tolua_tonumber(tolua_S,1,0));
  double Y0 = ((double)  tolua_tonumber(tolua_S,2,0));
  double X1 = ((double)  tolua_tonumber(tolua_S,3,0));
  double Y1 = ((double)  tolua_tonumber(tolua_S,4,0));
  double X2 = ((double)  tolua_tonumber(tolua_S,5,0));
  double Y2 = ((double)  tolua_tonumber(tolua_S,6,0));
  double X3 = ((double)  tolua_tonumber(tolua_S,7,0));
  double Y3 = ((double)  tolua_tonumber(tolua_S,8,0));
 {
  fl_curve(X0,Y0,X1,Y1,X2,Y2,X3,Y3);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_curve'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw00
static int tolua_fltk_fltk_fl_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* str = ((const char*)  tolua_tostring(tolua_S,1,0));
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  fl_draw(str,n,x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw01
static int tolua_fltk_fltk_fl_draw01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* str = ((const char*)  tolua_tostring(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  fl_draw(str,x,y);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_draw00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw02
static int tolua_fltk_fltk_fl_draw02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,7,"Fl_Image",1,&tolua_err) ||
 !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* str = ((const char*)  tolua_tostring(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
   unsigned align = ((  unsigned)  tolua_tonumber(tolua_S,6,0));
  Fl_Image* img = ((Fl_Image*)  tolua_tousertype(tolua_S,7,0));
  int draw_symbols = ((int)  tolua_tonumber(tolua_S,8,1));
 {
  fl_draw(str,x,y,w,h,align,img,draw_symbols);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_draw01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw03
static int tolua_fltk_fltk_fl_draw03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int angle = ((int)  tolua_tonumber(tolua_S,1,0));
  const char* str = ((const char*)  tolua_tostring(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  fl_draw(angle,str,x,y);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_draw02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw04
static int tolua_fltk_fltk_fl_draw04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int angle = ((int)  tolua_tonumber(tolua_S,1,0));
  const char* str = ((const char*)  tolua_tostring(tolua_S,2,0));
  int n = ((int)  tolua_tonumber(tolua_S,3,0));
  int x = ((int)  tolua_tonumber(tolua_S,4,0));
  int y = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  fl_draw(angle,str,n,x,y);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_draw03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw_box */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw_box00
static int tolua_fltk_fltk_fl_draw_box00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Boxtype tolua_var_254 = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
  unsigned int tolua_var_255 = (( unsigned int)  tolua_tonumber(tolua_S,6,0));
 {
  fl_draw_box(tolua_var_254,x,y,w,h,tolua_var_255);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_draw_box'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw_image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw_image00
static int tolua_fltk_fltk_fl_draw_image00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"Fl_Draw_Image_Cb",0,&tolua_err)) ||
 !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Fl_Draw_Image_Cb cb = *((Fl_Draw_Image_Cb*)  tolua_tousertype(tolua_S,1,0));
  void* data = ((void*)  tolua_touserdata(tolua_S,2,0));
  int X = ((int)  tolua_tonumber(tolua_S,3,0));
  int Y = ((int)  tolua_tonumber(tolua_S,4,0));
  int W = ((int)  tolua_tonumber(tolua_S,5,0));
  int H = ((int)  tolua_tonumber(tolua_S,6,0));
  int D = ((int)  tolua_tonumber(tolua_S,7,3));
 {
  fl_draw_image(cb,data,X,Y,W,H,D);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_draw_image'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw_image */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw_image01
static int tolua_fltk_fltk_fl_draw_image01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  unsigned const char buf = ((unsigned const char)  tolua_tonumber(tolua_S,1,0));
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int D = ((int)  tolua_tonumber(tolua_S,6,3));
  int L = ((int)  tolua_tonumber(tolua_S,7,0));
 {
  fl_draw_image(&buf,X,Y,W,H,D,L);
 tolua_pushnumber(tolua_S,(lua_Number)buf);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_fltk_fl_draw_image00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_draw_image_mono */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_draw_image_mono00
static int tolua_fltk_fltk_fl_draw_image_mono00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned const char buf = ((unsigned const char)  tolua_tonumber(tolua_S,1,0));
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int D = ((int)  tolua_tonumber(tolua_S,6,1));
  int L = ((int)  tolua_tonumber(tolua_S,7,0));
 {
  fl_draw_image_mono(&buf,X,Y,W,H,D,L);
 tolua_pushnumber(tolua_S,(lua_Number)buf);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_draw_image_mono'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_end_complex_polygon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_end_complex_polygon00
static int tolua_fltk_fltk_fl_end_complex_polygon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_end_complex_polygon();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_end_complex_polygon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_end_line */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_end_line00
static int tolua_fltk_fltk_fl_end_line00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_end_line();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_end_line'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_end_loop */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_end_loop00
static int tolua_fltk_fltk_fl_end_loop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_end_loop();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_end_loop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_end_points */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_end_points00
static int tolua_fltk_fltk_fl_end_points00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_end_points();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_end_points'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_end_polygon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_end_polygon00
static int tolua_fltk_fltk_fl_end_polygon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_end_polygon();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_end_polygon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_font */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_font01
static int tolua_fltk_fltk_fl_font01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
   int face = ((  int)  tolua_tonumber(tolua_S,1,0));
   int size = ((  int)  tolua_tonumber(tolua_S,2,0));
 {
  fl_font(face,size);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_font00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_frame */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_frame01
static int tolua_fltk_fltk_fl_frame01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* s = ((const char*)  tolua_tostring(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  fl_frame(s,x,y,w,h);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_frame00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_frame2 */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_frame200
static int tolua_fltk_fltk_fl_frame200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* s = ((const char*)  tolua_tostring(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  fl_frame2(s,x,y,w,h);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_frame2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_gap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_gap00
static int tolua_fltk_fltk_fl_gap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_gap();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_gap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_line */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_line00
static int tolua_fltk_fltk_fl_line00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int x1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int y1 = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  fl_line(x,y,x1,y1);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_line'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_line */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_line01
static int tolua_fltk_fltk_fl_line01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int x1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int y1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,5,0));
  int y2 = ((int)  tolua_tonumber(tolua_S,6,0));
 {
  fl_line(x,y,x1,y1,x2,y2);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_line00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_line_style */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_line_style00
static int tolua_fltk_fltk_fl_line_style00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
 !tolua_isstring(tolua_S,3,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int style = ((int)  tolua_tonumber(tolua_S,1,0));
  int width = ((int)  tolua_tonumber(tolua_S,2,0));
  char* dashes = ((char*)  tolua_tostring(tolua_S,3,0));
 {
  fl_line_style(style,width,dashes);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_line_style'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_loop */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_loop00
static int tolua_fltk_fltk_fl_loop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int x1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int y1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,5,0));
  int y2 = ((int)  tolua_tonumber(tolua_S,6,0));
 {
  fl_loop(x,y,x1,y1,x2,y2);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_loop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_loop */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_loop01
static int tolua_fltk_fltk_fl_loop01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int x1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int y1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,5,0));
  int y2 = ((int)  tolua_tonumber(tolua_S,6,0));
  int x3 = ((int)  tolua_tonumber(tolua_S,7,0));
  int y3 = ((int)  tolua_tonumber(tolua_S,8,0));
 {
  fl_loop(x,y,x1,y1,x2,y2,x3,y3);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_loop00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_measure */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_measure00
static int tolua_fltk_fltk_fl_measure00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* str = ((const char*)  tolua_tostring(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int draw_symbols = ((int)  tolua_tonumber(tolua_S,4,1));
 {
  fl_measure(str,x,y,draw_symbols);
 tolua_pushnumber(tolua_S,(lua_Number)x);
 tolua_pushnumber(tolua_S,(lua_Number)y);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_measure'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_mult_matrix */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_mult_matrix00
static int tolua_fltk_fltk_fl_mult_matrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double a = ((double)  tolua_tonumber(tolua_S,1,0));
  double b = ((double)  tolua_tonumber(tolua_S,2,0));
  double c = ((double)  tolua_tonumber(tolua_S,3,0));
  double d = ((double)  tolua_tonumber(tolua_S,4,0));
  double x = ((double)  tolua_tonumber(tolua_S,5,0));
  double y = ((double)  tolua_tonumber(tolua_S,6,0));
 {
  fl_mult_matrix(a,b,c,d,x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_mult_matrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_overlay_clear */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_overlay_clear00
static int tolua_fltk_fltk_fl_overlay_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_overlay_clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_overlay_clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_overlay_rect */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_overlay_rect00
static int tolua_fltk_fltk_fl_overlay_rect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int w = ((int)  tolua_tonumber(tolua_S,3,0));
  int h = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  fl_overlay_rect(x,y,w,h);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_overlay_rect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_pie */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_pie00
static int tolua_fltk_fltk_fl_pie00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int w = ((int)  tolua_tonumber(tolua_S,3,0));
  int h = ((int)  tolua_tonumber(tolua_S,4,0));
  double a1 = ((double)  tolua_tonumber(tolua_S,5,0));
  double a2 = ((double)  tolua_tonumber(tolua_S,6,0));
 {
  fl_pie(x,y,w,h,a1,a2);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_pie'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_point */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_point00
static int tolua_fltk_fltk_fl_point00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  fl_point(x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_point'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_polygon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_polygon00
static int tolua_fltk_fltk_fl_polygon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int x1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int y1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,5,0));
  int y2 = ((int)  tolua_tonumber(tolua_S,6,0));
 {
  fl_polygon(x,y,x1,y1,x2,y2);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_polygon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_polygon */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_polygon01
static int tolua_fltk_fltk_fl_polygon01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int x1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int y1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,5,0));
  int y2 = ((int)  tolua_tonumber(tolua_S,6,0));
  int x3 = ((int)  tolua_tonumber(tolua_S,7,0));
  int y3 = ((int)  tolua_tonumber(tolua_S,8,0));
 {
  fl_polygon(x,y,x1,y1,x2,y2,x3,y3);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_polygon00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_pop_clip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_pop_clip00
static int tolua_fltk_fltk_fl_pop_clip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_pop_clip();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_pop_clip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_pop_matrix */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_pop_matrix00
static int tolua_fltk_fltk_fl_pop_matrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_pop_matrix();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_pop_matrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_push_clip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_push_clip00
static int tolua_fltk_fltk_fl_push_clip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int w = ((int)  tolua_tonumber(tolua_S,3,0));
  int h = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  fl_push_clip(x,y,w,h);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_push_clip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_push_matrix */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_push_matrix00
static int tolua_fltk_fltk_fl_push_matrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_push_matrix();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_push_matrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_push_no_clip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_push_no_clip00
static int tolua_fltk_fltk_fl_push_no_clip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_push_no_clip();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_push_no_clip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_rect */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_rect00
static int tolua_fltk_fltk_fl_rect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int w = ((int)  tolua_tonumber(tolua_S,3,0));
  int h = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  fl_rect(x,y,w,h);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_rect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_rect */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_rect01
static int tolua_fltk_fltk_fl_rect01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int w = ((int)  tolua_tonumber(tolua_S,3,0));
  int h = ((int)  tolua_tonumber(tolua_S,4,0));
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,5,0));
 {
  fl_rect(x,y,w,h,c);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_rect00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_rectf */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_rectf00
static int tolua_fltk_fltk_fl_rectf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int w = ((int)  tolua_tonumber(tolua_S,3,0));
  int h = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  fl_rectf(x,y,w,h);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_rectf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_rectf */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_rectf01
static int tolua_fltk_fltk_fl_rectf01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int w = ((int)  tolua_tonumber(tolua_S,3,0));
  int h = ((int)  tolua_tonumber(tolua_S,4,0));
  unsigned int c = (( unsigned int)  tolua_tonumber(tolua_S,5,0));
 {
  fl_rectf(x,y,w,h,c);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_rectf00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_rectf */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_rectf02
static int tolua_fltk_fltk_fl_rectf02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int w = ((int)  tolua_tonumber(tolua_S,3,0));
  int h = ((int)  tolua_tonumber(tolua_S,4,0));
  unsigned char r = (( unsigned char)  tolua_tonumber(tolua_S,5,0));
  unsigned char g = (( unsigned char)  tolua_tonumber(tolua_S,6,0));
  unsigned char b = (( unsigned char)  tolua_tonumber(tolua_S,7,0));
 {
  fl_rectf(x,y,w,h,r,g,b);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_rectf01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_reset_spot */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_reset_spot00
static int tolua_fltk_fltk_fl_reset_spot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_reset_spot();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_reset_spot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_restore_clip */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_restore_clip00
static int tolua_fltk_fltk_fl_restore_clip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  fl_restore_clip();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_restore_clip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_rotate */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_rotate00
static int tolua_fltk_fltk_fl_rotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double d = ((double)  tolua_tonumber(tolua_S,1,0));
 {
  fl_rotate(d);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_rotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_rtl_draw */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_rtl_draw00
static int tolua_fltk_fltk_fl_rtl_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* tolua_var_256 = ((const char*)  tolua_tostring(tolua_S,1,0));
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  fl_rtl_draw(tolua_var_256,n,x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_rtl_draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_scale */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_scale00
static int tolua_fltk_fltk_fl_scale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double x = ((double)  tolua_tonumber(tolua_S,1,0));
 {
  fl_scale(x);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_scale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_scale */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_scale01
static int tolua_fltk_fltk_fl_scale01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  double x = ((double)  tolua_tonumber(tolua_S,1,0));
  double y = ((double)  tolua_tonumber(tolua_S,2,0));
 {
  fl_scale(x,y);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_scale00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_set_spot */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_set_spot00
static int tolua_fltk_fltk_fl_set_spot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,7,"Fl_Window",1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int font = ((int)  tolua_tonumber(tolua_S,1,0));
  int size = ((int)  tolua_tonumber(tolua_S,2,0));
  int X = ((int)  tolua_tonumber(tolua_S,3,0));
  int Y = ((int)  tolua_tonumber(tolua_S,4,0));
  int W = ((int)  tolua_tonumber(tolua_S,5,0));
  int H = ((int)  tolua_tonumber(tolua_S,6,0));
  Fl_Window* win = ((Fl_Window*)  tolua_tousertype(tolua_S,7,0));
 {
  fl_set_spot(font,size,X,Y,W,H,win);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_set_spot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_set_status */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_set_status00
static int tolua_fltk_fltk_fl_set_status00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,1,0));
  int Y = ((int)  tolua_tonumber(tolua_S,2,0));
  int W = ((int)  tolua_tonumber(tolua_S,3,0));
  int H = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  fl_set_status(X,Y,W,H);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_set_status'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_text_extents */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_text_extents00
static int tolua_fltk_fltk_fl_text_extents00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* tolua_var_257 = ((const char*)  tolua_tostring(tolua_S,1,0));
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
  int dx = ((int)  tolua_tonumber(tolua_S,3,0));
  int dy = ((int)  tolua_tonumber(tolua_S,4,0));
  int w = ((int)  tolua_tonumber(tolua_S,5,0));
  int h = ((int)  tolua_tonumber(tolua_S,6,0));
 {
  fl_text_extents(tolua_var_257,n,dx,dy,w,h);
 tolua_pushnumber(tolua_S,(lua_Number)dx);
 tolua_pushnumber(tolua_S,(lua_Number)dy);
 tolua_pushnumber(tolua_S,(lua_Number)w);
 tolua_pushnumber(tolua_S,(lua_Number)h);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_text_extents'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_text_extents */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_text_extents01
static int tolua_fltk_fltk_fl_text_extents01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  const char* tolua_var_258 = ((const char*)  tolua_tostring(tolua_S,1,0));
  int dx = ((int)  tolua_tonumber(tolua_S,2,0));
  int dy = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  fl_text_extents(tolua_var_258,dx,dy,w,h);
 tolua_pushnumber(tolua_S,(lua_Number)dx);
 tolua_pushnumber(tolua_S,(lua_Number)dy);
 tolua_pushnumber(tolua_S,(lua_Number)w);
 tolua_pushnumber(tolua_S,(lua_Number)h);
 }
 }
 return 4;
tolua_lerror:
 return tolua_fltk_fltk_fl_text_extents00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_transformed_vertex */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_transformed_vertex00
static int tolua_fltk_fltk_fl_transformed_vertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double xf = ((double)  tolua_tonumber(tolua_S,1,0));
  double yf = ((double)  tolua_tonumber(tolua_S,2,0));
 {
  fl_transformed_vertex(xf,yf);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_transformed_vertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_translate */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_translate00
static int tolua_fltk_fltk_fl_translate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double x = ((double)  tolua_tonumber(tolua_S,1,0));
  double y = ((double)  tolua_tonumber(tolua_S,2,0));
 {
  fl_translate(x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_translate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_vertex */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_vertex00
static int tolua_fltk_fltk_fl_vertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  double x = ((double)  tolua_tonumber(tolua_S,1,0));
  double y = ((double)  tolua_tonumber(tolua_S,2,0));
 {
  fl_vertex(x,y);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_vertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_xyline */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_xyline00
static int tolua_fltk_fltk_fl_xyline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int x1 = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  fl_xyline(x,y,x1);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_xyline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_xyline */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_xyline01
static int tolua_fltk_fltk_fl_xyline01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int x1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int y2 = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  fl_xyline(x,y,x1,y2);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_xyline00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_xyline */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_xyline02
static int tolua_fltk_fltk_fl_xyline02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int x1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int y2 = ((int)  tolua_tonumber(tolua_S,4,0));
  int x3 = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  fl_xyline(x,y,x1,y2,x3);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_xyline01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_yxline */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_yxline00
static int tolua_fltk_fltk_fl_yxline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int y1 = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  fl_yxline(x,y,y1);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_yxline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_yxline */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_yxline01
static int tolua_fltk_fltk_fl_yxline01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int y1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,4,0));
 {
  fl_yxline(x,y,y1,x2);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_yxline00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_yxline */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_yxline02
static int tolua_fltk_fltk_fl_yxline02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int x = ((int)  tolua_tonumber(tolua_S,1,0));
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
  int y1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,4,0));
  int y3 = ((int)  tolua_tonumber(tolua_S,5,0));
 {
  fl_yxline(x,y,y1,x2,y3);
 }
 }
 return 0;
tolua_lerror:
 return tolua_fltk_fltk_fl_yxline01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_show_colormap */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_show_colormap00
static int tolua_fltk_fltk_fl_show_colormap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int oldcol = (( unsigned int)  tolua_tonumber(tolua_S,1,0));
 {
  unsigned int tolua_ret = ( unsigned int)  fl_show_colormap(oldcol);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_show_colormap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_fopen */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_fopen00
static int tolua_fltk_fltk_fl_fopen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* f = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* mode = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  FILE* tolua_ret = (FILE*)  fl_fopen(f,mode);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"FILE");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_fopen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_locale_to_utf8 */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_locale_to_utf800
static int tolua_fltk_fltk_fl_locale_to_utf800(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* s = ((const char*)  tolua_tostring(tolua_S,1,0));
  int len = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int codepage = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
 {
  char* tolua_ret = (char*)  fl_locale_to_utf8(s,len,codepage);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_locale_to_utf8'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8_to_locale */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8_to_locale00
static int tolua_fltk_fltk_fl_utf8_to_locale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* s = ((const char*)  tolua_tostring(tolua_S,1,0));
  int len = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int codepage = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
 {
  char* tolua_ret = (char*)  fl_utf8_to_locale(s,len,codepage);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8_to_locale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_make_path */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_make_path00
static int tolua_fltk_fltk_fl_make_path00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* path = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  char tolua_ret = (char)  fl_make_path(path);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_make_path'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_getcwd */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_getcwd00
static int tolua_fltk_fltk_fl_getcwd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  char* buf = ((char*)  tolua_tostring(tolua_S,1,0));
  int maxlen = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  char* tolua_ret = (char*)  fl_getcwd(buf,maxlen);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_getcwd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_getenv */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_getenv00
static int tolua_fltk_fltk_fl_getenv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* name = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  char* tolua_ret = (char*)  fl_getenv(name);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_getenv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf2mbcs */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf2mbcs00
static int tolua_fltk_fltk_fl_utf2mbcs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* src = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  char* tolua_ret = (char*)  fl_utf2mbcs(src);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf2mbcs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8back */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8back00
static int tolua_fltk_fltk_fl_utf8back00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* p = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* start = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* end = ((const char*)  tolua_tostring(tolua_S,3,0));
 {
  char* tolua_ret = (char*)  fl_utf8back(p,start,end);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8back'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8fwd */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8fwd00
static int tolua_fltk_fltk_fl_utf8fwd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* p = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* start = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* end = ((const char*)  tolua_tostring(tolua_S,3,0));
 {
  char* tolua_ret = (char*)  fl_utf8fwd(p,start,end);
 tolua_pushstring(tolua_S,(const char*)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8fwd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_access */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_access00
static int tolua_fltk_fltk_fl_access00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* f = ((const char*)  tolua_tostring(tolua_S,1,0));
  int mode = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_access(f,mode);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_access'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_chmod */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_chmod00
static int tolua_fltk_fltk_fl_chmod00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* f = ((const char*)  tolua_tostring(tolua_S,1,0));
  int mode = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_chmod(f,mode);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_chmod'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_execvp */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_execvp00
static int tolua_fltk_fltk_fl_execvp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* file = ((const char*)  tolua_tostring(tolua_S,1,0));
  char* argv = ((char*)  tolua_tostring(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_execvp(file,&argv);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushstring(tolua_S,(const char*)argv);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_execvp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_mkdir */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_mkdir00
static int tolua_fltk_fltk_fl_mkdir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* f = ((const char*)  tolua_tostring(tolua_S,1,0));
  int mode = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_mkdir(f,mode);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_mkdir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_nonspacing */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_nonspacing00
static int tolua_fltk_fltk_fl_nonspacing00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int ucs = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_nonspacing(ucs);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_nonspacing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_open */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_open00
static int tolua_fltk_fltk_fl_open00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* f = ((const char*)  tolua_tostring(tolua_S,1,0));
  int o = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_open(f,o);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_open'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_rename */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_rename00
static int tolua_fltk_fltk_fl_rename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* f = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* t = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_rename(f,t);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_rename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_rmdir */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_rmdir00
static int tolua_fltk_fltk_fl_rmdir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* f = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_rmdir(f);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_rmdir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_stat */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_stat00
static int tolua_fltk_fltk_fl_stat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"stat",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* path = ((const char*)  tolua_tostring(tolua_S,1,0));
  struct stat* buffer = ((struct stat*)  tolua_tousertype(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_stat(path,buffer);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_stat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_system */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_system00
static int tolua_fltk_fltk_fl_system00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* f = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_system(f);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_system'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_tolower */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_tolower00
static int tolua_fltk_fltk_fl_tolower00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int ucs = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_tolower(ucs);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_tolower'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_toupper */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_toupper00
static int tolua_fltk_fltk_fl_toupper00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int ucs = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_toupper(ucs);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_toupper'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_unlink */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_unlink00
static int tolua_fltk_fltk_fl_unlink00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* f = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_unlink(f);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_unlink'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8bytes */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8bytes00
static int tolua_fltk_fltk_fl_utf8bytes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned ucs = ((unsigned)  tolua_tonumber(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_utf8bytes(ucs);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8bytes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8encode */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8encode00
static int tolua_fltk_fltk_fl_utf8encode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned ucs = ((unsigned)  tolua_tonumber(tolua_S,1,0));
  char* buf = ((char*)  tolua_tostring(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_utf8encode(ucs,buf);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8encode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8len */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8len00
static int tolua_fltk_fltk_fl_utf8len00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  char c = ((char)  tolua_tonumber(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_utf8len(c);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8len'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8locale */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8locale00
static int tolua_fltk_fltk_fl_utf8locale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  int tolua_ret = (int)  fl_utf8locale();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8locale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8test */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8test00
static int tolua_fltk_fltk_fl_utf8test00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* src = ((const char*)  tolua_tostring(tolua_S,1,0));
  unsigned len = ((unsigned)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_utf8test(src,len);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8test'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf_nb_char */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf_nb_char00
static int tolua_fltk_fltk_fl_utf_nb_char00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned const char* buf = ((unsigned const char*)  tolua_tostring(tolua_S,1,0));
  int len = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_utf_nb_char(buf,len);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf_nb_char'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf_strcasecmp */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf_strcasecmp00
static int tolua_fltk_fltk_fl_utf_strcasecmp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* s1 = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* s2 = ((const char*)  tolua_tostring(tolua_S,2,0));
 {
  int tolua_ret = (int)  fl_utf_strcasecmp(s1,s2);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf_strcasecmp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf_strncasecmp */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf_strncasecmp00
static int tolua_fltk_fltk_fl_utf_strncasecmp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* s1 = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* s2 = ((const char*)  tolua_tostring(tolua_S,2,0));
  int n = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  int tolua_ret = (int)  fl_utf_strncasecmp(s1,s2,n);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf_strncasecmp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf_tolower */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf_tolower00
static int tolua_fltk_fltk_fl_utf_tolower00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned const char* str = ((unsigned const char*)  tolua_tostring(tolua_S,1,0));
  int len = ((int)  tolua_tonumber(tolua_S,2,0));
  char* buf = ((char*)  tolua_tostring(tolua_S,3,0));
 {
  int tolua_ret = (int)  fl_utf_tolower(str,len,buf);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf_tolower'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf_toupper */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf_toupper00
static int tolua_fltk_fltk_fl_utf_toupper00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned const char* str = ((unsigned const char*)  tolua_tostring(tolua_S,1,0));
  int len = ((int)  tolua_tonumber(tolua_S,2,0));
  char* buf = ((char*)  tolua_tostring(tolua_S,3,0));
 {
  int tolua_ret = (int)  fl_utf_toupper(str,len,buf);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf_toupper'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_wcwidth */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_wcwidth00
static int tolua_fltk_fltk_fl_wcwidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* src = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_wcwidth(src);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_wcwidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_wcwidth_ */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_wcwidth_00
static int tolua_fltk_fltk_fl_wcwidth_00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  unsigned int ucs = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
 {
  int tolua_ret = (int)  fl_wcwidth_(ucs);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_wcwidth_'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8decode */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8decode00
static int tolua_fltk_fltk_fl_utf8decode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isstring(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* p = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* end = ((const char*)  tolua_tostring(tolua_S,2,0));
  int len = ((int)  tolua_tonumber(tolua_S,3,0));
 {
  unsigned tolua_ret = (unsigned)  fl_utf8decode(p,end,&len);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)len);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8decode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8from_mb */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8from_mb00
static int tolua_fltk_fltk_fl_utf8from_mb00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  char* dst = ((char*)  tolua_tostring(tolua_S,1,0));
  unsigned dstlen = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  const char* src = ((const char*)  tolua_tostring(tolua_S,3,0));
  unsigned srclen = ((unsigned)  tolua_tonumber(tolua_S,4,0));
 {
  unsigned tolua_ret = (unsigned)  fl_utf8from_mb(dst,dstlen,src,srclen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8from_mb'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8froma */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8froma00
static int tolua_fltk_fltk_fl_utf8froma00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  char* dst = ((char*)  tolua_tostring(tolua_S,1,0));
  unsigned dstlen = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  const char* src = ((const char*)  tolua_tostring(tolua_S,3,0));
  unsigned srclen = ((unsigned)  tolua_tonumber(tolua_S,4,0));
 {
  unsigned tolua_ret = (unsigned)  fl_utf8froma(dst,dstlen,src,srclen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8froma'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8fromwc */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8fromwc00
static int tolua_fltk_fltk_fl_utf8fromwc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"const wchar_t",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  char* dst = ((char*)  tolua_tostring(tolua_S,1,0));
  unsigned dstlen = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  const wchar_t* src = ((const wchar_t*)  tolua_tousertype(tolua_S,3,0));
  unsigned srclen = ((unsigned)  tolua_tonumber(tolua_S,4,0));
 {
  unsigned tolua_ret = (unsigned)  fl_utf8fromwc(dst,dstlen,src,srclen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8fromwc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8toUtf16 */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8toUtf1600
static int tolua_fltk_fltk_fl_utf8toUtf1600(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* src = ((const char*)  tolua_tostring(tolua_S,1,0));
  unsigned srclen = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned short dst = ((unsigned short)  tolua_tonumber(tolua_S,3,0));
  unsigned dstlen = ((unsigned)  tolua_tonumber(tolua_S,4,0));
 {
  unsigned tolua_ret = (unsigned)  fl_utf8toUtf16(src,srclen,&dst,dstlen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)dst);
 }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8toUtf16'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8to_mb */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8to_mb00
static int tolua_fltk_fltk_fl_utf8to_mb00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* src = ((const char*)  tolua_tostring(tolua_S,1,0));
  unsigned srclen = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  char* dst = ((char*)  tolua_tostring(tolua_S,3,0));
  unsigned dstlen = ((unsigned)  tolua_tonumber(tolua_S,4,0));
 {
  unsigned tolua_ret = (unsigned)  fl_utf8to_mb(src,srclen,dst,dstlen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8to_mb'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8toa */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8toa00
static int tolua_fltk_fltk_fl_utf8toa00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isstring(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* src = ((const char*)  tolua_tostring(tolua_S,1,0));
  unsigned srclen = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  char* dst = ((char*)  tolua_tostring(tolua_S,3,0));
  unsigned dstlen = ((unsigned)  tolua_tonumber(tolua_S,4,0));
 {
  unsigned tolua_ret = (unsigned)  fl_utf8toa(src,srclen,dst,dstlen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8toa'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_utf8towc */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_utf8towc00
static int tolua_fltk_fltk_fl_utf8towc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isusertype(tolua_S,3,"wchar_t",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* src = ((const char*)  tolua_tostring(tolua_S,1,0));
  unsigned srclen = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  wchar_t* dst = ((wchar_t*)  tolua_tousertype(tolua_S,3,0));
  unsigned dstlen = ((unsigned)  tolua_tonumber(tolua_S,4,0));
 {
  unsigned tolua_ret = (unsigned)  fl_utf8towc(src,srclen,dst,dstlen);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_utf8towc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_make_path_for_file */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_make_path_for_file00
static int tolua_fltk_fltk_fl_make_path_for_file00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isstring(tolua_S,1,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  const char* path = ((const char*)  tolua_tostring(tolua_S,1,0));
 {
  fl_make_path_for_file(path);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_make_path_for_file'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_SHADOW_LABEL */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_SHADOW_LABEL00
static int tolua_fltk_fltk_fl_define_FL_SHADOW_LABEL00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Labeltype tolua_ret = (Fl_Labeltype)  fl_define_FL_SHADOW_LABEL();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_SHADOW_LABEL'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_ENGRAVED_LABEL */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_ENGRAVED_LABEL00
static int tolua_fltk_fltk_fl_define_FL_ENGRAVED_LABEL00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Labeltype tolua_ret = (Fl_Labeltype)  fl_define_FL_ENGRAVED_LABEL();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_ENGRAVED_LABEL'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_EMBOSSED_LABEL */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_EMBOSSED_LABEL00
static int tolua_fltk_fltk_fl_define_FL_EMBOSSED_LABEL00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Labeltype tolua_ret = (Fl_Labeltype)  fl_define_FL_EMBOSSED_LABEL();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_EMBOSSED_LABEL'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_ROUND_UP_BOX */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_ROUND_UP_BOX00
static int tolua_fltk_fltk_fl_define_FL_ROUND_UP_BOX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  fl_define_FL_ROUND_UP_BOX();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_ROUND_UP_BOX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_SHADOW_BOX */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_SHADOW_BOX00
static int tolua_fltk_fltk_fl_define_FL_SHADOW_BOX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  FL_EXPORT Fl_Boxtype tolua_ret = (FL_EXPORT Fl_Boxtype)  fl_define_FL_SHADOW_BOX();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_SHADOW_BOX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_ROUNDED_BOX */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_ROUNDED_BOX00
static int tolua_fltk_fltk_fl_define_FL_ROUNDED_BOX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  FL_EXPORT Fl_Boxtype tolua_ret = (FL_EXPORT Fl_Boxtype)  fl_define_FL_ROUNDED_BOX();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_ROUNDED_BOX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_RFLAT_BOX */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_RFLAT_BOX00
static int tolua_fltk_fltk_fl_define_FL_RFLAT_BOX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  FL_EXPORT Fl_Boxtype tolua_ret = (FL_EXPORT Fl_Boxtype)  fl_define_FL_RFLAT_BOX();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_RFLAT_BOX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_RSHADOW_BOX */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_RSHADOW_BOX00
static int tolua_fltk_fltk_fl_define_FL_RSHADOW_BOX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  FL_EXPORT Fl_Boxtype tolua_ret = (FL_EXPORT Fl_Boxtype)  fl_define_FL_RSHADOW_BOX();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_RSHADOW_BOX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_DIAMOND_BOX */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_DIAMOND_BOX00
static int tolua_fltk_fltk_fl_define_FL_DIAMOND_BOX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  FL_EXPORT Fl_Boxtype tolua_ret = (FL_EXPORT Fl_Boxtype)  fl_define_FL_DIAMOND_BOX();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_DIAMOND_BOX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_OVAL_BOX */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_OVAL_BOX00
static int tolua_fltk_fltk_fl_define_FL_OVAL_BOX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  FL_EXPORT Fl_Boxtype tolua_ret = (FL_EXPORT Fl_Boxtype)  fl_define_FL_OVAL_BOX();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_OVAL_BOX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_PLASTIC_UP_BOX */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_PLASTIC_UP_BOX00
static int tolua_fltk_fltk_fl_define_FL_PLASTIC_UP_BOX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  FL_EXPORT Fl_Boxtype tolua_ret = (FL_EXPORT Fl_Boxtype)  fl_define_FL_PLASTIC_UP_BOX();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_PLASTIC_UP_BOX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: fl_define_FL_GTK_UP_BOX */
#ifndef TOLUA_DISABLE_tolua_fltk_fltk_fl_define_FL_GTK_UP_BOX00
static int tolua_fltk_fltk_fl_define_FL_GTK_UP_BOX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  FL_EXPORT Fl_Boxtype tolua_ret = (FL_EXPORT Fl_Boxtype)  fl_define_FL_GTK_UP_BOX();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fl_define_FL_GTK_UP_BOX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_new00
static int tolua_fltk_flvw_Flv_Style_List_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Flv_Style_List* tolua_ret = (Flv_Style_List*)  Mtolua_new((Flv_Style_List)());
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_Style_List");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_new00_local
static int tolua_fltk_flvw_Flv_Style_List_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_flvw_Flv_Style_List_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_clear00
static int tolua_fltk_flvw_Flv_Style_List_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
 {
  self->clear();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_current of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_clear_current00
static int tolua_fltk_flvw_Flv_Style_List_clear_current00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_current'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->clear_current();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: compact of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_compact00
static int tolua_fltk_flvw_Flv_Style_List_compact00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'compact'", NULL);
#endif
 {
  self->compact();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'compact'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: count of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_count00
static int tolua_fltk_flvw_Flv_Style_List_count00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count'", NULL);
#endif
 {
  int tolua_ret = (int)  self->count();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: current of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_current00
static int tolua_fltk_flvw_Flv_Style_List_current00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'current'", NULL);
#endif
 {
  Flv_Style* tolua_ret = (Flv_Style*)  self->current();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_Style");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: find of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_find00
static int tolua_fltk_flvw_Flv_Style_List_find00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'find'", NULL);
#endif
 {
  Flv_Style* tolua_ret = (Flv_Style*)  self->find(n);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_Style");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'find'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: first of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_first00
static int tolua_fltk_flvw_Flv_Style_List_first00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'first'", NULL);
#endif
 {
  Flv_Style* tolua_ret = (Flv_Style*)  self->first();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_Style");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'first'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_insert00
static int tolua_fltk_flvw_Flv_Style_List_insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
  Flv_Style* n = ((Flv_Style*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->insert(n);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: next of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_next00
static int tolua_fltk_flvw_Flv_Style_List_next00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'next'", NULL);
#endif
 {
  Flv_Style* tolua_ret = (Flv_Style*)  self->next();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_Style");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'next'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: prior of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_prior00
static int tolua_fltk_flvw_Flv_Style_List_prior00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'prior'", NULL);
#endif
 {
  Flv_Style* tolua_ret = (Flv_Style*)  self->prior();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_Style");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'prior'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: release of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_release00
static int tolua_fltk_flvw_Flv_Style_List_release00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'release'", NULL);
#endif
 {
  self->release();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'release'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: release_current of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_release_current00
static int tolua_fltk_flvw_Flv_Style_List_release_current00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'release_current'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->release_current();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'release_current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: skip_to of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_skip_to00
static int tolua_fltk_flvw_Flv_Style_List_skip_to00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
  int v = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'skip_to'", NULL);
#endif
 {
  Flv_Style* tolua_ret = (Flv_Style*)  self->skip_to(v);
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_Style");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'skip_to'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get of class  Flv_Style_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_List_get00
static int tolua_fltk_flvw_Flv_Style_List_get00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style_List* self = (Flv_Style_List*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get'", NULL);
#endif
 {
  Flv_Style& tolua_ret = (Flv_Style&)  self->get(value);
  tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Flv_Style");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_new00
static int tolua_fltk_flvw_Flv_Style_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Flv_Style* tolua_ret = (Flv_Style*)  Mtolua_new((Flv_Style)());
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_Style");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_new00_local
static int tolua_fltk_flvw_Flv_Style_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_flvw_Flv_Style_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_new01
static int tolua_fltk_flvw_Flv_Style_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
 {
  Flv_Style* tolua_ret = (Flv_Style*)  Mtolua_new((Flv_Style)(value));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_Style");
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_flvw_Flv_Style_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_new01_local
static int tolua_fltk_flvw_Flv_Style_new01_local(lua_State* tolua_S)
{
 int result = tolua_fltk_flvw_Flv_Style_new01(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: align of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_align00
static int tolua_fltk_flvw_Flv_Style_align00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'align'", NULL);
#endif
 {
 if(nparam < 2) {
   unsigned tolua_ret = (  unsigned)  self->align();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   unsigned opt = ((  unsigned)  tolua_tonumber(tolua_S,2,0));
 self->align(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'align'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: align_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_align_defined00
static int tolua_fltk_flvw_Flv_Style_align_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'align_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->align_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'align_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: all_clear of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_all_clear00
static int tolua_fltk_flvw_Flv_Style_all_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'all_clear'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->all_clear();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'all_clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: all_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_all_defined00
static int tolua_fltk_flvw_Flv_Style_all_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'all_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->all_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'all_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: background of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_background00
static int tolua_fltk_flvw_Flv_Style_background00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'background'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->background();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->background(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'background'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: background_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_background_defined00
static int tolua_fltk_flvw_Flv_Style_background_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'background_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->background_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'background_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: border of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_border00
static int tolua_fltk_flvw_Flv_Style_border00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'border'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->border();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->border(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: border_color of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_border_color00
static int tolua_fltk_flvw_Flv_Style_border_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'border_color'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->border_color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->border_color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'border_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: border_color_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_border_color_defined00
static int tolua_fltk_flvw_Flv_Style_border_color_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'border_color_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->border_color_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'border_color_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: border_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_border_defined00
static int tolua_fltk_flvw_Flv_Style_border_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'border_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->border_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'border_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: border_spacing of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_border_spacing00
static int tolua_fltk_flvw_Flv_Style_border_spacing00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'border_spacing'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->border_spacing();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->border_spacing(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'border_spacing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: border_spacing_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_border_spacing_defined00
static int tolua_fltk_flvw_Flv_Style_border_spacing_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'border_spacing_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->border_spacing_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'border_spacing_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bottom_border of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_bottom_border00
static int tolua_fltk_flvw_Flv_Style_bottom_border00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bottom_border'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->bottom_border();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bottom_border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_align of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_align00
static int tolua_fltk_flvw_Flv_Style_clear_align00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_align'", NULL);
#endif
 {
  self->clear_align();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_align'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_all of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_all00
static int tolua_fltk_flvw_Flv_Style_clear_all00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_all'", NULL);
#endif
 {
  self->clear_all();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_all'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_background of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_background00
static int tolua_fltk_flvw_Flv_Style_clear_background00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_background'", NULL);
#endif
 {
  self->clear_background();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_background'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_border of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_border00
static int tolua_fltk_flvw_Flv_Style_clear_border00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_border'", NULL);
#endif
 {
  self->clear_border();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_border_color of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_border_color00
static int tolua_fltk_flvw_Flv_Style_clear_border_color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_border_color'", NULL);
#endif
 {
  self->clear_border_color();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_border_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_border_spacing of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_border_spacing00
static int tolua_fltk_flvw_Flv_Style_clear_border_spacing00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_border_spacing'", NULL);
#endif
 {
  self->clear_border_spacing();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_border_spacing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_editor of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_editor00
static int tolua_fltk_flvw_Flv_Style_clear_editor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_editor'", NULL);
#endif
 {
  self->clear_editor();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_editor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_font of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_font00
static int tolua_fltk_flvw_Flv_Style_clear_font00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_font'", NULL);
#endif
 {
  self->clear_font();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_font'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_font_size of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_font_size00
static int tolua_fltk_flvw_Flv_Style_clear_font_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_font_size'", NULL);
#endif
 {
  self->clear_font_size();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_font_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_foreground of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_foreground00
static int tolua_fltk_flvw_Flv_Style_clear_foreground00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_foreground'", NULL);
#endif
 {
  self->clear_foreground();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_foreground'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_frame of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_frame00
static int tolua_fltk_flvw_Flv_Style_clear_frame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_frame'", NULL);
#endif
 {
  self->clear_frame();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_frame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_height of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_height00
static int tolua_fltk_flvw_Flv_Style_clear_height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_height'", NULL);
#endif
 {
  self->clear_height();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_locked of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_locked00
static int tolua_fltk_flvw_Flv_Style_clear_locked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_locked'", NULL);
#endif
 {
  self->clear_locked();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_locked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_resizable of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_resizable00
static int tolua_fltk_flvw_Flv_Style_clear_resizable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_resizable'", NULL);
#endif
 {
  self->clear_resizable();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_resizable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_width of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_width00
static int tolua_fltk_flvw_Flv_Style_clear_width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_width'", NULL);
#endif
 {
  self->clear_width();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_x_margin of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_x_margin00
static int tolua_fltk_flvw_Flv_Style_clear_x_margin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_x_margin'", NULL);
#endif
 {
  self->clear_x_margin();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_x_margin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_y_margin of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_clear_y_margin00
static int tolua_fltk_flvw_Flv_Style_clear_y_margin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_y_margin'", NULL);
#endif
 {
  self->clear_y_margin();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_y_margin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: editor of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_editor00
static int tolua_fltk_flvw_Flv_Style_editor00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'editor'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->editor();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Widget* opt = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
 self->editor(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'editor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: editor_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_editor_defined00
static int tolua_fltk_flvw_Flv_Style_editor_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'editor_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->editor_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'editor_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: font_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_font_defined00
static int tolua_fltk_flvw_Flv_Style_font_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'font_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->font_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'font_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: font of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_font00
static int tolua_fltk_flvw_Flv_Style_font00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'font'", NULL);
#endif
 {
 if(nparam < 2) {
   int tolua_ret = (  int)  self->font();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
   int opt = ((  int)  tolua_tonumber(tolua_S,2,0));
 self->font(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'font'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: font_size of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_font_size00
static int tolua_fltk_flvw_Flv_Style_font_size00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'font_size'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->font_size();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->font_size(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'font_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: font_size_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_font_size_defined00
static int tolua_fltk_flvw_Flv_Style_font_size_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'font_size_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->font_size_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'font_size_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: foreground of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_foreground00
static int tolua_fltk_flvw_Flv_Style_foreground00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'foreground'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->foreground();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->foreground(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'foreground'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: foreground_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_foreground_defined00
static int tolua_fltk_flvw_Flv_Style_foreground_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'foreground_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->foreground_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'foreground_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: frame_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_frame_defined00
static int tolua_fltk_flvw_Flv_Style_frame_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'frame_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->frame_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'frame_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: frame of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_frame00
static int tolua_fltk_flvw_Flv_Style_frame00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'frame'", NULL);
#endif
 {
 if(nparam < 2) {
  Fl_Boxtype tolua_ret = (Fl_Boxtype)  self->frame();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  Fl_Boxtype opt = ((Fl_Boxtype) (int)  tolua_tonumber(tolua_S,2,0));
 self->frame(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'frame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: height of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_height00
static int tolua_fltk_flvw_Flv_Style_height00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'height'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->height();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->height(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: height_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_height_defined00
static int tolua_fltk_flvw_Flv_Style_height_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'height_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->height_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'height_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inner_bottom_border of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_inner_bottom_border00
static int tolua_fltk_flvw_Flv_Style_inner_bottom_border00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inner_bottom_border'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->inner_bottom_border();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inner_bottom_border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inner_left_border of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_inner_left_border00
static int tolua_fltk_flvw_Flv_Style_inner_left_border00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inner_left_border'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->inner_left_border();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inner_left_border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inner_right_border of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_inner_right_border00
static int tolua_fltk_flvw_Flv_Style_inner_right_border00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inner_right_border'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->inner_right_border();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inner_right_border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inner_top_border of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_inner_top_border00
static int tolua_fltk_flvw_Flv_Style_inner_top_border00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inner_top_border'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->inner_top_border();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inner_top_border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: left_border of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_left_border00
static int tolua_fltk_flvw_Flv_Style_left_border00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'left_border'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->left_border();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'left_border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: locked of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_locked00
static int tolua_fltk_flvw_Flv_Style_locked00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'locked'", NULL);
#endif
 {
 if(nparam < 2) {
  bool tolua_ret = (bool)  self->locked();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isboolean(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  bool opt = ((bool)  tolua_toboolean(tolua_S,2,0));
 self->locked(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'locked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: locked_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_locked_defined00
static int tolua_fltk_flvw_Flv_Style_locked_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'locked_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->locked_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'locked_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resizable of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_resizable00
static int tolua_fltk_flvw_Flv_Style_resizable00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resizable'", NULL);
#endif
 {
 if(nparam < 2) {
  bool tolua_ret = (bool)  self->resizable();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isboolean(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  bool opt = ((bool)  tolua_toboolean(tolua_S,2,0));
 self->resizable(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resizable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resizable_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_resizable_defined00
static int tolua_fltk_flvw_Flv_Style_resizable_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resizable_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->resizable_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resizable_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: right_border of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_right_border00
static int tolua_fltk_flvw_Flv_Style_right_border00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'right_border'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->right_border();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'right_border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: top_border of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_top_border00
static int tolua_fltk_flvw_Flv_Style_top_border00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'top_border'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->top_border();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'top_border'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: width of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_width00
static int tolua_fltk_flvw_Flv_Style_width00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'width'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->width();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->width(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: width_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_width_defined00
static int tolua_fltk_flvw_Flv_Style_width_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'width_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->width_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'width_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: x_margin of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_x_margin00
static int tolua_fltk_flvw_Flv_Style_x_margin00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'x_margin'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->x_margin();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->x_margin(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'x_margin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: x_margin_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_x_margin_defined00
static int tolua_fltk_flvw_Flv_Style_x_margin_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'x_margin_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->x_margin_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'x_margin_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: y_margin of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_y_margin00
static int tolua_fltk_flvw_Flv_Style_y_margin00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'y_margin'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->y_margin();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->y_margin(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'y_margin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: y_margin_defined of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_y_margin_defined00
static int tolua_fltk_flvw_Flv_Style_y_margin_defined00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'y_margin_defined'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->y_margin_defined();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'y_margin_defined'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Style_add00
static int tolua_fltk_flvw_Flv_Style_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Style",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Flv_Style",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
  const Flv_Style* n = ((const Flv_Style*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
 {
  const Flv_Style& tolua_ret = (const Flv_Style&)  self->add(*n);
  tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Flv_Style");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: cell_style of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_get_Flv_Style_cell_style
static int tolua_get_Flv_Style_cell_style(lua_State* tolua_S)
{
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'cell_style'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->cell_style,"Flv_Style_List");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: cell_style of class  Flv_Style */
#ifndef TOLUA_DISABLE_tolua_set_Flv_Style_cell_style
static int tolua_set_Flv_Style_cell_style(lua_State* tolua_S)
{
  Flv_Style* self = (Flv_Style*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'cell_style'",NULL);
 if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Flv_Style_List",0,&tolua_err)))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->cell_style = *((Flv_Style_List*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Flv_CStyle */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_CStyle_new00
static int tolua_fltk_flvw_Flv_CStyle_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Flv_CStyle",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  Flv_CStyle* tolua_ret = (Flv_CStyle*)  Mtolua_new((Flv_CStyle)());
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_CStyle");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Flv_CStyle */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_CStyle_new00_local
static int tolua_fltk_flvw_Flv_CStyle_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_flvw_Flv_CStyle_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: x of class  Flv_CStyle */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_CStyle_x00
static int tolua_fltk_flvw_Flv_CStyle_x00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_CStyle",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_CStyle* self = (Flv_CStyle*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'x'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->x();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->x(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'x'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: y of class  Flv_CStyle */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_CStyle_y00
static int tolua_fltk_flvw_Flv_CStyle_y00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_CStyle",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_CStyle* self = (Flv_CStyle*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'y'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->y();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->y(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'y'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_new00
static int tolua_fltk_flvw_Flv_List_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Flv_List* tolua_ret = (Flv_List*)  Mtolua_new((Flv_List)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_List");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_new00_local
static int tolua_fltk_flvw_Flv_List_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_flvw_Flv_List_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_callback_when of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_add_callback_when00
static int tolua_fltk_flvw_Flv_List_add_callback_when00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int v = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add_callback_when'", NULL);
#endif
 {
  int tolua_ret = (int)  self->add_callback_when(v);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_callback_when'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_selection_style of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_add_selection_style00
static int tolua_fltk_flvw_Flv_List_add_selection_style00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Flv_Style",0,&tolua_err)) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  Flv_Style* s = ((Flv_Style*)  tolua_tousertype(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
  int C = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add_selection_style'", NULL);
#endif
 {
  self->add_selection_style(*s,R,C);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_selection_style'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bottom_row of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_bottom_row00
static int tolua_fltk_flvw_Flv_List_bottom_row00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bottom_row'", NULL);
#endif
 {
  int tolua_ret = (int)  self->bottom_row();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bottom_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: callback_on of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_callback_on00
static int tolua_fltk_flvw_Flv_List_callback_on00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int v = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'callback_on'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->callback_on(v);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'callback_on'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: callback_when of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_callback_when00
static int tolua_fltk_flvw_Flv_List_callback_when00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'callback_when'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->callback_when();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->callback_when(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'callback_when'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cancel_edit of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_cancel_edit00
static int tolua_fltk_flvw_Flv_List_cancel_edit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cancel_edit'", NULL);
#endif
 {
  self->cancel_edit();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cancel_edit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_callback_when of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_clear_callback_when00
static int tolua_fltk_flvw_Flv_List_clear_callback_when00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int v = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_callback_when'", NULL);
#endif
 {
  int tolua_ret = (int)  self->clear_callback_when(v);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_callback_when'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear_clicks of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_clear_clicks00
static int tolua_fltk_flvw_Flv_List_clear_clicks00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear_clicks'", NULL);
#endif
 {
  self->clear_clicks();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_clicks'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clicks of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_clicks00
static int tolua_fltk_flvw_Flv_List_clicks00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clicks'", NULL);
#endif
 {
  char tolua_ret = (char)  self->clicks();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clicks'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dead_space_color of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_dead_space_color00
static int tolua_fltk_flvw_Flv_List_dead_space_color00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dead_space_color'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned int tolua_ret = ( unsigned int)  self->dead_space_color();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned int opt = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
 self->dead_space_color(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dead_space_color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: edit_when of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_edit_when00
static int tolua_fltk_flvw_Flv_List_edit_when00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'edit_when'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->edit_when();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->edit_when(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'edit_when'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: editor of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_editor00
static int tolua_fltk_flvw_Flv_List_editor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'editor'", NULL);
#endif
 {
  Fl_Widget* tolua_ret = (Fl_Widget*)  self->editor();
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Fl_Widget");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'editor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: end_edit of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_end_edit00
static int tolua_fltk_flvw_Flv_List_end_edit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end_edit'", NULL);
#endif
 {
  self->end_edit();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'end_edit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: feature of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_feature00
static int tolua_fltk_flvw_Flv_List_feature00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'feature'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned short tolua_ret = ( unsigned short)  self->feature();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned short opt = (( unsigned short)  tolua_tonumber(tolua_S,2,0));
 self->feature(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'feature'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: feature_add of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_feature_add00
static int tolua_fltk_flvw_Flv_List_feature_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  unsigned short v = (( unsigned short)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'feature_add'", NULL);
#endif
 {
  unsigned short tolua_ret = ( unsigned short)  self->feature_add(v);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'feature_add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: feature_remove of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_feature_remove00
static int tolua_fltk_flvw_Flv_List_feature_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  unsigned short v = (( unsigned short)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'feature_remove'", NULL);
#endif
 {
  unsigned short tolua_ret = ( unsigned short)  self->feature_remove(v);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'feature_remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: feature_test of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_feature_test00
static int tolua_fltk_flvw_Flv_List_feature_test00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  unsigned short v = (( unsigned short)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'feature_test'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->feature_test(v);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'feature_test'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: full_resize of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_full_resize00
static int tolua_fltk_flvw_Flv_List_full_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'full_resize'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->full_resize();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'full_resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_cell_bounds of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_get_cell_bounds00
static int tolua_fltk_flvw_Flv_List_get_cell_bounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int R = ((int)  tolua_tonumber(tolua_S,6,0));
  int C = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_cell_bounds'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->get_cell_bounds(X,Y,W,H,R,C);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)X);
 tolua_pushnumber(tolua_S,(lua_Number)Y);
 tolua_pushnumber(tolua_S,(lua_Number)W);
 tolua_pushnumber(tolua_S,(lua_Number)H);
 }
 }
 return 5;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_cell_bounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_default_style of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_get_default_style00
static int tolua_fltk_flvw_Flv_List_get_default_style00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Flv_Style",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  Flv_Style* s = ((Flv_Style*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_default_style'", NULL);
#endif
 {
  self->get_default_style(*s);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_default_style'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_row of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_get_row00
static int tolua_fltk_flvw_Flv_List_get_row00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_row'", NULL);
#endif
 {
  int tolua_ret = (int)  self->get_row(x,y);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_style of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_get_style00
static int tolua_fltk_flvw_Flv_List_get_style00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Flv_Style",0,&tolua_err)) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  Flv_Style* s = ((Flv_Style*)  tolua_tousertype(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
  int C = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_style'", NULL);
#endif
 {
  self->get_style(*s,R,C);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_style'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: has_scrollbar of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_has_scrollbar00
static int tolua_fltk_flvw_Flv_List_has_scrollbar00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'has_scrollbar'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned char tolua_ret = ( unsigned char)  self->has_scrollbar();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned char opt = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
 self->has_scrollbar(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'has_scrollbar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load_editor of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_load_editor00
static int tolua_fltk_flvw_Flv_List_load_editor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* e = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
  int C = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load_editor'", NULL);
#endif
 {
  self->load_editor(e,R,C);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load_editor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: max_clicks of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_max_clicks00
static int tolua_fltk_flvw_Flv_List_max_clicks00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'max_clicks'", NULL);
#endif
 {
 if(nparam < 2) {
  unsigned char tolua_ret = (unsigned char)  self->max_clicks();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  unsigned char opt = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
 self->max_clicks(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'max_clicks'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move_row of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_move_row00
static int tolua_fltk_flvw_Flv_List_move_row00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int amount = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move_row'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->move_row(amount);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: multi_select of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_multi_select00
static int tolua_fltk_flvw_Flv_List_multi_select00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'multi_select'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->multi_select();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'multi_select'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: persist_select of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_persist_select00
static int tolua_fltk_flvw_Flv_List_persist_select00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'persist_select'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->persist_select();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'persist_select'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: position_editor of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_position_editor00
static int tolua_fltk_flvw_Flv_List_position_editor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,7,&tolua_err) || !tolua_isusertype(tolua_S,7,"Flv_Style",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* e = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  int w = ((int)  tolua_tonumber(tolua_S,5,0));
  int h = ((int)  tolua_tonumber(tolua_S,6,0));
  Flv_Style* s = ((Flv_Style*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'position_editor'", NULL);
#endif
 {
  self->position_editor(e,x,y,w,h,*s);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'position_editor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_row00
static int tolua_fltk_flvw_Flv_List_row00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->row();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->row(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_divider of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_row_divider00
static int tolua_fltk_flvw_Flv_List_row_divider00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_divider'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->row_divider();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_divider'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_footer of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_row_footer00
static int tolua_fltk_flvw_Flv_List_row_footer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_footer'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->row_footer();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_footer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_header of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_row_header00
static int tolua_fltk_flvw_Flv_List_row_header00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_header'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->row_header();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_header'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_height of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_row_height00
static int tolua_fltk_flvw_Flv_List_row_height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_height'", NULL);
#endif
 {
  int tolua_ret = (int)  self->row_height(n);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_height of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_set_row_height00
static int tolua_fltk_flvw_Flv_List_set_row_height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_height'", NULL);
#endif
 {
  int tolua_ret = (int)  self->row_height(n,R);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_row_height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_offset of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_row_offset00
static int tolua_fltk_flvw_Flv_List_row_offset00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_offset'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->row_offset();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->row_offset(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_offset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_resizable of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_row_resizable00
static int tolua_fltk_flvw_Flv_List_row_resizable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int r = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_resizable'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->row_resizable(r);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_resizable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_resizable of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_set_row_resizable00
static int tolua_fltk_flvw_Flv_List_set_row_resizable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  bool n = ((bool)  tolua_toboolean(tolua_S,2,0));
  int r = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_resizable'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->row_resizable(n,r);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_row_resizable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_selected of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_row_selected00
static int tolua_fltk_flvw_Flv_List_row_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_selected'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->row_selected(n);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row_width of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_row_width00
static int tolua_fltk_flvw_Flv_List_row_width00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row_width'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->row_width();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->row_width(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rows of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_rows00
static int tolua_fltk_flvw_Flv_List_rows00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rows'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->rows();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->rows(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rows'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rows_per_page of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_rows_per_page00
static int tolua_fltk_flvw_Flv_List_rows_per_page00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rows_per_page'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->rows_per_page();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->rows_per_page(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rows_per_page'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: save_editor of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_save_editor00
static int tolua_fltk_flvw_Flv_List_save_editor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* e = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
  int C = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'save_editor'", NULL);
#endif
 {
  self->save_editor(e,R,C);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'save_editor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scrollbar_width of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_scrollbar_width00
static int tolua_fltk_flvw_Flv_List_scrollbar_width00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scrollbar_width'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->scrollbar_width();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->scrollbar_width(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scrollbar_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_locked of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_select_locked00
static int tolua_fltk_flvw_Flv_List_select_locked00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_locked'", NULL);
#endif
 {
 if(nparam < 2) {
  bool tolua_ret = (bool)  self->select_locked();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isboolean(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  bool opt = ((bool)  tolua_toboolean(tolua_S,2,0));
 self->select_locked(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_locked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_start_row of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_select_start_row00
static int tolua_fltk_flvw_Flv_List_select_start_row00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_start_row'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->select_start_row();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->select_start_row(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_start_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: start_edit of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_start_edit00
static int tolua_fltk_flvw_Flv_List_start_edit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'start_edit'", NULL);
#endif
 {
  self->start_edit();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'start_edit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: top_row of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_top_row00
static int tolua_fltk_flvw_Flv_List_top_row00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'top_row'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->top_row();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->top_row(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'top_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: why_event of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_why_event00
static int tolua_fltk_flvw_Flv_List_why_event00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'why_event'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->why_event();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->why_event(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'why_event'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: global_style of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_get_Flv_List_global_style
static int tolua_get_Flv_List_global_style(lua_State* tolua_S)
{
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'global_style'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->global_style,"Flv_Style");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: global_style of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_set_Flv_List_global_style
static int tolua_set_Flv_List_global_style(lua_State* tolua_S)
{
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'global_style'",NULL);
 if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Flv_Style",0,&tolua_err)))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->global_style = *((Flv_Style*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: row_style of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_get_Flv_List_row_style
static int tolua_get_Flv_List_row_style(lua_State* tolua_S)
{
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'row_style'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->row_style,"Flv_Style_List");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: row_style of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_set_Flv_List_row_style
static int tolua_set_Flv_List_row_style(lua_State* tolua_S)
{
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'row_style'",NULL);
 if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Flv_Style_List",0,&tolua_err)))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->row_style = *((Flv_Style_List*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_List_handle00
static int tolua_fltk_flvw_Flv_List_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_List* self = (Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Flv_List : public Flv_List, public ToluaBase {
public:
	 void  draw_row( int Offset, int& X, int& Y, int& W, int& H, int R) {
		if (push_method("draw_row",  NULL)) {
			tolua_pushnumber(lua_state, (lua_Number)Offset);
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			tolua_pushnumber(lua_state, (lua_Number)R);
			ToluaBase::dbcall(lua_state, 7, 0);
		} else {
			 Flv_List:: draw_row(Offset,X,Y,W,H,R);
		};
	};
	 bool  get_cell_bounds( int& X, int& Y, int& W, int& H, int R, int C = 0) {
		if (push_method("get_cell_bounds",  tolua_fltk_flvw_Flv_List_get_cell_bounds00)) {
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			tolua_pushnumber(lua_state, (lua_Number)R);
			tolua_pushnumber(lua_state, (lua_Number)C);
			ToluaBase::dbcall(lua_state, 7, 1);
			 bool  tolua_ret = ( bool )tolua_toboolean(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( bool ) Flv_List:: get_cell_bounds(X,Y,W,H,R,C);
		};
	};
	 void  get_style( Flv_Style& s, int R, int C = 0) {
		if (push_method("get_style",  tolua_fltk_flvw_Flv_List_get_style00)) {
			tolua_pushusertype(lua_state, (void*)&s, "Flv_Style");
			tolua_pushnumber(lua_state, (lua_Number)R);
			tolua_pushnumber(lua_state, (lua_Number)C);
			ToluaBase::dbcall(lua_state, 4, 0);
		} else {
			 Flv_List:: get_style(s,R,C);
		};
	};
	 void  load_editor( Fl_Widget* e, int R, int C = 0) {
		if (push_method("load_editor",  tolua_fltk_flvw_Flv_List_load_editor00)) {
			tolua_pushusertype(lua_state, (void*)e, "Fl_Widget");
			tolua_pushnumber(lua_state, (lua_Number)R);
			tolua_pushnumber(lua_state, (lua_Number)C);
			ToluaBase::dbcall(lua_state, 4, 0);
		} else {
			 Flv_List:: load_editor(e,R,C);
		};
	};
	 void  position_editor( Fl_Widget* e, int x, int y, int w, int h, Flv_Style& s) {
		if (push_method("position_editor",  tolua_fltk_flvw_Flv_List_position_editor00)) {
			tolua_pushusertype(lua_state, (void*)e, "Fl_Widget");
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			tolua_pushusertype(lua_state, (void*)&s, "Flv_Style");
			ToluaBase::dbcall(lua_state, 7, 0);
		} else {
			 Flv_List:: position_editor(e,x,y,w,h,s);
		};
	};
	 int  row_height( int n) {
		if (push_method("row_height",  tolua_fltk_flvw_Flv_List_row_height00)) {
			tolua_pushnumber(lua_state, (lua_Number)n);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Flv_List:: row_height(n);
		};
	};
	 int  row_height( int n, int R) {
		if (push_method("set_row_height",  tolua_fltk_flvw_Flv_List_set_row_height00)) {
			tolua_pushnumber(lua_state, (lua_Number)n);
			tolua_pushnumber(lua_state, (lua_Number)R);
			ToluaBase::dbcall(lua_state, 3, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Flv_List:: row_height(n,R);
		};
	};
	 void  save_editor( Fl_Widget* e, int R, int C = 0) {
		if (push_method("save_editor",  tolua_fltk_flvw_Flv_List_save_editor00)) {
			tolua_pushusertype(lua_state, (void*)e, "Fl_Widget");
			tolua_pushnumber(lua_state, (lua_Number)R);
			tolua_pushnumber(lua_state, (lua_Number)C);
			ToluaBase::dbcall(lua_state, 4, 0);
		} else {
			 Flv_List:: save_editor(e,R,C);
		};
	};
	 int  handle( int event) {
		if (push_method("handle",  tolua_fltk_flvw_Flv_List_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)event);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Flv_List:: handle(event);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Flv_List:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Flv_List:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Flv_List:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Flv_List:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Flv_List:: hide();
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_fltk_Fl_Widget_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Flv_List:: resize(x,y,w,h);
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Flv_List:: show();
		};
	};

	 void Flv_List__draw_row( int Offset, int& X, int& Y, int& W, int& H, int R) {
		Flv_List::draw_row(Offset,X,Y,W,H,R);
	};
	 bool Flv_List__get_cell_bounds( int& X, int& Y, int& W, int& H, int R, int C = 0) {
		return ( bool )Flv_List::get_cell_bounds(X,Y,W,H,R,C);
	};
	 void Flv_List__get_style( Flv_Style& s, int R, int C = 0) {
		Flv_List::get_style(s,R,C);
	};
	 void Flv_List__load_editor( Fl_Widget* e, int R, int C = 0) {
		Flv_List::load_editor(e,R,C);
	};
	 void Flv_List__position_editor( Fl_Widget* e, int x, int y, int w, int h, Flv_Style& s) {
		Flv_List::position_editor(e,x,y,w,h,s);
	};
	 int Flv_List__row_height( int n) {
		return ( int )Flv_List::row_height(n);
	};
	 int Flv_List__row_height( int n, int R) {
		return ( int )Flv_List::row_height(n,R);
	};
	 void Flv_List__save_editor( Fl_Widget* e, int R, int C = 0) {
		Flv_List::save_editor(e,R,C);
	};
	 int Flv_List__handle( int event) {
		return ( int )Flv_List::handle(event);
	};
	 Fl_Group* Flv_List__as_group( void ) {
		return ( Fl_Group* )Flv_List::as_group();
	};
	 Fl_Window* Flv_List__as_window( void ) {
		return ( Fl_Window* )Flv_List::as_window();
	};
	 void Flv_List__do_callback( Fl_Widget* o, void* arg = 0) {
		Flv_List::do_callback(o,arg);
	};
	 void Flv_List__draw( void ) {
		Flv_List::draw();
	};
	 void Flv_List__hide( void ) {
		Flv_List::hide();
	};
	 void Flv_List__resize( int x, int y, int w, int h) {
		Flv_List::resize(x,y,w,h);
	};
	 void Flv_List__show( void ) {
		Flv_List::show();
	};
	 Lua__Flv_List( int X, int Y, int W, int H, const char* l = 0): Flv_List(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_tolua__set_instance00
static int tolua_fltk_flvw_Lua__Flv_List_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_List",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_List* self = (Lua__Flv_List*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_List__draw_row of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_Flv_List__draw_row00
static int tolua_fltk_flvw_Lua__Flv_List_Flv_List__draw_row00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_List* self = (Lua__Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int Offset = ((int)  tolua_tonumber(tolua_S,2,0));
  int X = ((int)  tolua_tonumber(tolua_S,3,0));
  int Y = ((int)  tolua_tonumber(tolua_S,4,0));
  int W = ((int)  tolua_tonumber(tolua_S,5,0));
  int H = ((int)  tolua_tonumber(tolua_S,6,0));
  int R = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_List__draw_row'", NULL);
#endif
 {
  self->Flv_List__draw_row(Offset,X,Y,W,H,R);
 tolua_pushnumber(tolua_S,(lua_Number)X);
 tolua_pushnumber(tolua_S,(lua_Number)Y);
 tolua_pushnumber(tolua_S,(lua_Number)W);
 tolua_pushnumber(tolua_S,(lua_Number)H);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_List__draw_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_List__get_cell_bounds of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_Flv_List__get_cell_bounds00
static int tolua_fltk_flvw_Lua__Flv_List_Flv_List__get_cell_bounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_List* self = (Lua__Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int R = ((int)  tolua_tonumber(tolua_S,6,0));
  int C = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_List__get_cell_bounds'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->Flv_List__get_cell_bounds(X,Y,W,H,R,C);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)X);
 tolua_pushnumber(tolua_S,(lua_Number)Y);
 tolua_pushnumber(tolua_S,(lua_Number)W);
 tolua_pushnumber(tolua_S,(lua_Number)H);
 }
 }
 return 5;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_List__get_cell_bounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_List__get_style of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_Flv_List__get_style00
static int tolua_fltk_flvw_Lua__Flv_List_Flv_List__get_style00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_List",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Flv_Style",0,&tolua_err)) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_List* self = (Lua__Flv_List*)  tolua_tousertype(tolua_S,1,0);
  Flv_Style* s = ((Flv_Style*)  tolua_tousertype(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
  int C = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_List__get_style'", NULL);
#endif
 {
  self->Flv_List__get_style(*s,R,C);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_List__get_style'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_List__load_editor of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_Flv_List__load_editor00
static int tolua_fltk_flvw_Lua__Flv_List_Flv_List__load_editor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_List",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_List* self = (Lua__Flv_List*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* e = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
  int C = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_List__load_editor'", NULL);
#endif
 {
  self->Flv_List__load_editor(e,R,C);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_List__load_editor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_List__position_editor of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_Flv_List__position_editor00
static int tolua_fltk_flvw_Lua__Flv_List_Flv_List__position_editor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_List",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,7,&tolua_err) || !tolua_isusertype(tolua_S,7,"Flv_Style",0,&tolua_err)) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_List* self = (Lua__Flv_List*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* e = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  int w = ((int)  tolua_tonumber(tolua_S,5,0));
  int h = ((int)  tolua_tonumber(tolua_S,6,0));
  Flv_Style* s = ((Flv_Style*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_List__position_editor'", NULL);
#endif
 {
  self->Flv_List__position_editor(e,x,y,w,h,*s);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_List__position_editor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_List__row_height of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_Flv_List__row_height00
static int tolua_fltk_flvw_Lua__Flv_List_Flv_List__row_height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_List* self = (Lua__Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_List__row_height'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Flv_List__row_height(n);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_List__row_height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_List__row_height of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_Flv_List__row_height01
static int tolua_fltk_flvw_Lua__Flv_List_Flv_List__row_height01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Lua__Flv_List* self = (Lua__Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_List__row_height'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Flv_List__row_height(n,R);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_flvw_Lua__Flv_List_Flv_List__row_height00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_List__save_editor of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_Flv_List__save_editor00
static int tolua_fltk_flvw_Lua__Flv_List_Flv_List__save_editor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_List",0,&tolua_err) ||
 !tolua_isusertype(tolua_S,2,"Fl_Widget",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_List* self = (Lua__Flv_List*)  tolua_tousertype(tolua_S,1,0);
  Fl_Widget* e = ((Fl_Widget*)  tolua_tousertype(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
  int C = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_List__save_editor'", NULL);
#endif
 {
  self->Flv_List__save_editor(e,R,C);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_List__save_editor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_List__handle of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_Flv_List__handle00
static int tolua_fltk_flvw_Lua__Flv_List_Flv_List__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_List* self = (Lua__Flv_List*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_List__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Flv_List__handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_List__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_new00
static int tolua_fltk_flvw_Lua__Flv_List_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Flv_List",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Flv_List* tolua_ret = (Lua__Flv_List*)  Mtolua_new((Lua__Flv_List)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Flv_List");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Flv_List */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_List_new00_local
static int tolua_fltk_flvw_Lua__Flv_List_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_flvw_Lua__Flv_List_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Flv_List (lua_State* tolua_S)
{
 Lua__Flv_List* self = (Lua__Flv_List*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_new00
static int tolua_fltk_flvw_Flv_Table_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Flv_Table* tolua_ret = (Flv_Table*)  Mtolua_new((Flv_Table)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flv_Table");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_new00_local
static int tolua_fltk_flvw_Flv_Table_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_flvw_Flv_Table_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: add_selection_style of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_add_selection_style00
static int tolua_fltk_flvw_Flv_Table_add_selection_style00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Flv_Style",0,&tolua_err)) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  Flv_Style* s = ((Flv_Style*)  tolua_tousertype(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
  int C = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add_selection_style'", NULL);
#endif
 {
  self->add_selection_style(*s,R,C);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add_selection_style'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: buttons of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_buttons00
static int tolua_fltk_flvw_Flv_Table_buttons00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buttons'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->buttons();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->buttons(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buttons'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cancel_edit of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_cancel_edit00
static int tolua_fltk_flvw_Flv_Table_cancel_edit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cancel_edit'", NULL);
#endif
 {
  self->cancel_edit();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cancel_edit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cell_area of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_cell_area00
static int tolua_fltk_flvw_Flv_Table_cell_area00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cell_area'", NULL);
#endif
 {
  self->cell_area(X,Y,W,H);
 tolua_pushnumber(tolua_S,(lua_Number)X);
 tolua_pushnumber(tolua_S,(lua_Number)Y);
 tolua_pushnumber(tolua_S,(lua_Number)W);
 tolua_pushnumber(tolua_S,(lua_Number)H);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cell_area'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cell_selected of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_cell_selected00
static int tolua_fltk_flvw_Flv_Table_cell_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int R = ((int)  tolua_tonumber(tolua_S,2,0));
  int C = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cell_selected'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->cell_selected(R,C);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cell_selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_col00
static int tolua_fltk_flvw_Flv_Table_col00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->col();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->col(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_divider of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_col_divider00
static int tolua_fltk_flvw_Flv_Table_col_divider00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_divider'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->col_divider();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_divider'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_footer of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_col_footer00
static int tolua_fltk_flvw_Flv_Table_col_footer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_footer'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->col_footer();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_footer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_header of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_col_header00
static int tolua_fltk_flvw_Flv_Table_col_header00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_header'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->col_header();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_header'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_resizable of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_col_resizable00
static int tolua_fltk_flvw_Flv_Table_col_resizable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_resizable'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->col_resizable(c);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_resizable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_resizable of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_set_col_resizable00
static int tolua_fltk_flvw_Flv_Table_set_col_resizable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  bool n = ((bool)  tolua_toboolean(tolua_S,2,0));
  int c = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_resizable'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->col_resizable(n,c);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_col_resizable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_selected of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_col_selected00
static int tolua_fltk_flvw_Flv_Table_col_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_selected'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->col_selected(n);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_width of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_col_width00
static int tolua_fltk_flvw_Flv_Table_col_width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_width'", NULL);
#endif
 {
  int tolua_ret = (int)  self->col_width(c);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'col_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: col_width of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_set_col_width00
static int tolua_fltk_flvw_Flv_Table_set_col_width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
  int c = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'col_width'", NULL);
#endif
 {
  int tolua_ret = (int)  self->col_width(n,c);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_col_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cols of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_cols00
static int tolua_fltk_flvw_Flv_Table_cols00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cols'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->cols();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->cols(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cols'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: edit_when of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_edit_when00
static int tolua_fltk_flvw_Flv_Table_edit_when00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'edit_when'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->edit_when();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->edit_when(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'edit_when'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: end_edit of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_end_edit00
static int tolua_fltk_flvw_Flv_Table_end_edit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end_edit'", NULL);
#endif
 {
  self->end_edit();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'end_edit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_cell_bounds of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_get_cell_bounds00
static int tolua_fltk_flvw_Flv_Table_get_cell_bounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  int R = ((int)  tolua_tonumber(tolua_S,6,0));
  int C = ((int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_cell_bounds'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->get_cell_bounds(X,Y,W,H,R,C);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 tolua_pushnumber(tolua_S,(lua_Number)X);
 tolua_pushnumber(tolua_S,(lua_Number)Y);
 tolua_pushnumber(tolua_S,(lua_Number)W);
 tolua_pushnumber(tolua_S,(lua_Number)H);
 }
 }
 return 5;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_cell_bounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_col of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_get_col00
static int tolua_fltk_flvw_Flv_Table_get_col00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_col'", NULL);
#endif
 {
  int tolua_ret = (int)  self->get_col(x,y);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_col'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_style of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_get_style00
static int tolua_fltk_flvw_Flv_Table_get_style00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Flv_Style",0,&tolua_err)) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  Flv_Style* s = ((Flv_Style*)  tolua_tousertype(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
  int C = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_style'", NULL);
#endif
 {
  self->get_style(*s,R,C);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_style'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move_col of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_move_col00
static int tolua_fltk_flvw_Flv_Table_move_col00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int amount = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move_col'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->move_col(amount);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move_col'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move_on_enter of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_move_on_enter00
static int tolua_fltk_flvw_Flv_Table_move_on_enter00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move_on_enter'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->move_on_enter();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->move_on_enter(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move_on_enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move_row of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_move_row00
static int tolua_fltk_flvw_Flv_Table_move_row00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int amount = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move_row'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->move_row(amount);
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: row of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_row00
static int tolua_fltk_flvw_Flv_Table_row00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'row'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->row();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->row(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_row of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_select_row00
static int tolua_fltk_flvw_Flv_Table_select_row00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_row'", NULL);
#endif
 {
  bool tolua_ret = (bool)  self->select_row();
 tolua_pushboolean(tolua_S,(bool)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_row'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: select_start_col of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_select_start_col00
static int tolua_fltk_flvw_Flv_Table_select_start_col00(lua_State* tolua_S)
{
 int nparam = lua_gettop(tolua_S);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'select_start_col'", NULL);
#endif
 {
 if(nparam < 2) {
  int tolua_ret = (int)  self->select_start_col();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 return 1;
 } else {
#ifndef TOLUA_RELEASE
 if ( !tolua_isnumber(tolua_S,2,0,&tolua_err) || !tolua_isnoobj(tolua_S, 3,&tolua_err)
 ) goto tolua_lerror;
#endif
  int opt = ((int)  tolua_tonumber(tolua_S,2,0));
 self->select_start_col(opt);
 return 0;
 }
 }
 }
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'select_start_col'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: start_edit of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_start_edit00
static int tolua_fltk_flvw_Flv_Table_start_edit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'start_edit'", NULL);
#endif
 {
  self->start_edit();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'start_edit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: col_style of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_get_Flv_Table_col_style
static int tolua_get_Flv_Table_col_style(lua_State* tolua_S)
{
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'col_style'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->col_style,"Flv_Style_List");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: col_style of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_set_Flv_Table_col_style
static int tolua_set_Flv_Table_col_style(lua_State* tolua_S)
{
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'col_style'",NULL);
 if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Flv_Style_List",0,&tolua_err)))
 tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->col_style = *((Flv_Style_List*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: resize of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_resize00
static int tolua_fltk_flvw_Flv_Table_resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resize'", NULL);
#endif
 {
  self->resize(x,y,w,h);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: handle of class  Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flv_Table_handle00
static int tolua_fltk_flvw_Flv_Table_handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Flv_Table* self = (Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

 class Lua__Flv_Table : public Flv_Table, public ToluaBase {
public:
	 void  draw_cell( int Offset, int& X, int& Y, int& W, int& H, int R, int C) {
		if (push_method("draw_cell",  NULL)) {
			tolua_pushnumber(lua_state, (lua_Number)Offset);
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			tolua_pushnumber(lua_state, (lua_Number)R);
			tolua_pushnumber(lua_state, (lua_Number)C);
			ToluaBase::dbcall(lua_state, 8, 0);
		} else {
			 Flv_Table:: draw_cell(Offset,X,Y,W,H,R,C);
		};
	};
	 int  col_width( int c) {
		if (push_method("col_width",  tolua_fltk_flvw_Flv_Table_col_width00)) {
			tolua_pushnumber(lua_state, (lua_Number)c);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Flv_Table:: col_width(c);
		};
	};
	 int  col_width( int n, int c) {
		if (push_method("set_col_width",  tolua_fltk_flvw_Flv_Table_set_col_width00)) {
			tolua_pushnumber(lua_state, (lua_Number)n);
			tolua_pushnumber(lua_state, (lua_Number)c);
			ToluaBase::dbcall(lua_state, 3, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Flv_Table:: col_width(n,c);
		};
	};
	 void  get_style( Flv_Style& s, int R, int C = 0) {
		if (push_method("get_style",  tolua_fltk_flvw_Flv_Table_get_style00)) {
			tolua_pushusertype(lua_state, (void*)&s, "Flv_Style");
			tolua_pushnumber(lua_state, (lua_Number)R);
			tolua_pushnumber(lua_state, (lua_Number)C);
			ToluaBase::dbcall(lua_state, 4, 0);
		} else {
			 Flv_Table:: get_style(s,R,C);
		};
	};
	 void  resize( int x, int y, int w, int h) {
		if (push_method("resize",  tolua_fltk_flvw_Flv_Table_resize00)) {
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			ToluaBase::dbcall(lua_state, 5, 0);
		} else {
			 Flv_Table:: resize(x,y,w,h);
		};
	};
	 int  handle( int event) {
		if (push_method("handle",  tolua_fltk_flvw_Flv_Table_handle00)) {
			tolua_pushnumber(lua_state, (lua_Number)event);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Flv_Table:: handle(event);
		};
	};
	 void  draw_row( int Offset, int& X, int& Y, int& W, int& H, int R) {
		if (push_method("draw_row",  NULL)) {
			tolua_pushnumber(lua_state, (lua_Number)Offset);
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			tolua_pushnumber(lua_state, (lua_Number)R);
			ToluaBase::dbcall(lua_state, 7, 0);
		} else {
			 Flv_Table:: draw_row(Offset,X,Y,W,H,R);
		};
	};
	 bool  get_cell_bounds( int& X, int& Y, int& W, int& H, int R, int C = 0) {
		if (push_method("get_cell_bounds",  tolua_fltk_flvw_Flv_List_get_cell_bounds00)) {
			tolua_pushnumber(lua_state, (lua_Number)X);
			tolua_pushnumber(lua_state, (lua_Number)Y);
			tolua_pushnumber(lua_state, (lua_Number)W);
			tolua_pushnumber(lua_state, (lua_Number)H);
			tolua_pushnumber(lua_state, (lua_Number)R);
			tolua_pushnumber(lua_state, (lua_Number)C);
			ToluaBase::dbcall(lua_state, 7, 1);
			 bool  tolua_ret = ( bool )tolua_toboolean(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( bool ) Flv_Table:: get_cell_bounds(X,Y,W,H,R,C);
		};
	};
	 void  load_editor( Fl_Widget* e, int R, int C = 0) {
		if (push_method("load_editor",  tolua_fltk_flvw_Flv_List_load_editor00)) {
			tolua_pushusertype(lua_state, (void*)e, "Fl_Widget");
			tolua_pushnumber(lua_state, (lua_Number)R);
			tolua_pushnumber(lua_state, (lua_Number)C);
			ToluaBase::dbcall(lua_state, 4, 0);
		} else {
			 Flv_Table:: load_editor(e,R,C);
		};
	};
	 void  position_editor( Fl_Widget* e, int x, int y, int w, int h, Flv_Style& s) {
		if (push_method("position_editor",  tolua_fltk_flvw_Flv_List_position_editor00)) {
			tolua_pushusertype(lua_state, (void*)e, "Fl_Widget");
			tolua_pushnumber(lua_state, (lua_Number)x);
			tolua_pushnumber(lua_state, (lua_Number)y);
			tolua_pushnumber(lua_state, (lua_Number)w);
			tolua_pushnumber(lua_state, (lua_Number)h);
			tolua_pushusertype(lua_state, (void*)&s, "Flv_Style");
			ToluaBase::dbcall(lua_state, 7, 0);
		} else {
			 Flv_Table:: position_editor(e,x,y,w,h,s);
		};
	};
	 int  row_height( int n) {
		if (push_method("row_height",  tolua_fltk_flvw_Flv_List_row_height00)) {
			tolua_pushnumber(lua_state, (lua_Number)n);
			ToluaBase::dbcall(lua_state, 2, 1);
			 int  tolua_ret = ( int )tolua_tonumber(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( int ) Flv_Table:: row_height(n);
		};
	};
	 void  save_editor( Fl_Widget* e, int R, int C = 0) {
		if (push_method("save_editor",  tolua_fltk_flvw_Flv_List_save_editor00)) {
			tolua_pushusertype(lua_state, (void*)e, "Fl_Widget");
			tolua_pushnumber(lua_state, (lua_Number)R);
			tolua_pushnumber(lua_state, (lua_Number)C);
			ToluaBase::dbcall(lua_state, 4, 0);
		} else {
			 Flv_Table:: save_editor(e,R,C);
		};
	};
	 Fl_Group*  as_group( void ) {
		if (push_method("as_group",  tolua_fltk_fltk_Fl_Group_as_group00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Group*  tolua_ret = ( Fl_Group* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Group* ) Flv_Table:: as_group();
		};
	};
	 Fl_Window*  as_window( void ) {
		if (push_method("as_window",  tolua_fltk_fltk_Fl_Widget_as_window00)) {
			ToluaBase::dbcall(lua_state, 1, 1);
			 Fl_Window*  tolua_ret = ( Fl_Window* )tolua_tousertype(lua_state, -1, 0);
			lua_pop(lua_state, 1);
			return tolua_ret;
		} else {
			return ( Fl_Window* ) Flv_Table:: as_window();
		};
	};
	 void  do_callback( Fl_Widget* o, void* arg = 0) {
		if (push_method("do_callback",  tolua_fltk_fltk_Fl_Widget_do_callback00)) {
			tolua_pushusertype(lua_state, (void*)o, "Fl_Widget");
			tolua_pushuserdata(lua_state, (void*)arg);
			ToluaBase::dbcall(lua_state, 3, 0);
		} else {
			 Flv_Table:: do_callback(o,arg);
		};
	};
	 void  draw( void ) {
		if (push_method("draw",  tolua_fltk_fltk_Fl_Widget_draw00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Flv_Table:: draw();
		};
	};
	 void  hide( void ) {
		if (push_method("hide",  tolua_fltk_fltk_Fl_Widget_hide00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Flv_Table:: hide();
		};
	};
	 void  show( void ) {
		if (push_method("show",  tolua_fltk_fltk_Fl_Widget_show00)) {
			ToluaBase::dbcall(lua_state, 1, 0);
		} else {
			 Flv_Table:: show();
		};
	};

	 void Flv_Table__draw_cell( int Offset, int& X, int& Y, int& W, int& H, int R, int C) {
		Flv_Table::draw_cell(Offset,X,Y,W,H,R,C);
	};
	 int Flv_Table__col_width( int c) {
		return ( int )Flv_Table::col_width(c);
	};
	 int Flv_Table__col_width( int n, int c) {
		return ( int )Flv_Table::col_width(n,c);
	};
	 void Flv_Table__get_style( Flv_Style& s, int R, int C = 0) {
		Flv_Table::get_style(s,R,C);
	};
	 void Flv_Table__resize( int x, int y, int w, int h) {
		Flv_Table::resize(x,y,w,h);
	};
	 int Flv_Table__handle( int event) {
		return ( int )Flv_Table::handle(event);
	};
	 void Flv_Table__draw_row( int Offset, int& X, int& Y, int& W, int& H, int R) {
		Flv_Table::draw_row(Offset,X,Y,W,H,R);
	};
	 bool Flv_Table__get_cell_bounds( int& X, int& Y, int& W, int& H, int R, int C = 0) {
		return ( bool )Flv_Table::get_cell_bounds(X,Y,W,H,R,C);
	};
	 void Flv_Table__load_editor( Fl_Widget* e, int R, int C = 0) {
		Flv_Table::load_editor(e,R,C);
	};
	 void Flv_Table__position_editor( Fl_Widget* e, int x, int y, int w, int h, Flv_Style& s) {
		Flv_Table::position_editor(e,x,y,w,h,s);
	};
	 int Flv_Table__row_height( int n) {
		return ( int )Flv_Table::row_height(n);
	};
	 void Flv_Table__save_editor( Fl_Widget* e, int R, int C = 0) {
		Flv_Table::save_editor(e,R,C);
	};
	 Fl_Group* Flv_Table__as_group( void ) {
		return ( Fl_Group* )Flv_Table::as_group();
	};
	 Fl_Window* Flv_Table__as_window( void ) {
		return ( Fl_Window* )Flv_Table::as_window();
	};
	 void Flv_Table__do_callback( Fl_Widget* o, void* arg = 0) {
		Flv_Table::do_callback(o,arg);
	};
	 void Flv_Table__draw( void ) {
		Flv_Table::draw();
	};
	 void Flv_Table__hide( void ) {
		Flv_Table::hide();
	};
	 void Flv_Table__show( void ) {
		Flv_Table::show();
	};
	 Lua__Flv_Table( int X, int Y, int W, int H, const char* l = 0): Flv_Table(X,Y,W,H,l){};
};

/* method: tolua__set_instance of class  Lua__Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_Table_tolua__set_instance00
static int tolua_fltk_flvw_Lua__Flv_Table_tolua__set_instance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_Table",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_Table* self = (Lua__Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
  lua_Object lo = ((lua_Object)  tolua_tovalue(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tolua__set_instance'", NULL);
#endif
 {
  self->tolua__set_instance(L,lo);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tolua__set_instance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_Table__draw_cell of class  Lua__Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__draw_cell00
static int tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__draw_cell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_Table* self = (Lua__Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int Offset = ((int)  tolua_tonumber(tolua_S,2,0));
  int X = ((int)  tolua_tonumber(tolua_S,3,0));
  int Y = ((int)  tolua_tonumber(tolua_S,4,0));
  int W = ((int)  tolua_tonumber(tolua_S,5,0));
  int H = ((int)  tolua_tonumber(tolua_S,6,0));
  int R = ((int)  tolua_tonumber(tolua_S,7,0));
  int C = ((int)  tolua_tonumber(tolua_S,8,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_Table__draw_cell'", NULL);
#endif
 {
  self->Flv_Table__draw_cell(Offset,X,Y,W,H,R,C);
 tolua_pushnumber(tolua_S,(lua_Number)X);
 tolua_pushnumber(tolua_S,(lua_Number)Y);
 tolua_pushnumber(tolua_S,(lua_Number)W);
 tolua_pushnumber(tolua_S,(lua_Number)H);
 }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_Table__draw_cell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_Table__col_width of class  Lua__Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__col_width00
static int tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__col_width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_Table* self = (Lua__Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int c = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_Table__col_width'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Flv_Table__col_width(c);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_Table__col_width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_Table__col_width of class  Lua__Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__col_width01
static int tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__col_width01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
 goto tolua_lerror;
 else
 {
  Lua__Flv_Table* self = (Lua__Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
  int c = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_Table__col_width'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Flv_Table__col_width(n,c);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
tolua_lerror:
 return tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__col_width00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_Table__get_style of class  Lua__Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__get_style00
static int tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__get_style00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_Table",0,&tolua_err) ||
 (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Flv_Style",0,&tolua_err)) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_Table* self = (Lua__Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  Flv_Style* s = ((Flv_Style*)  tolua_tousertype(tolua_S,2,0));
  int R = ((int)  tolua_tonumber(tolua_S,3,0));
  int C = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_Table__get_style'", NULL);
#endif
 {
  self->Flv_Table__get_style(*s,R,C);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_Table__get_style'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_Table__resize of class  Lua__Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__resize00
static int tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_Table* self = (Lua__Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_Table__resize'", NULL);
#endif
 {
  self->Flv_Table__resize(x,y,w,h);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_Table__resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Flv_Table__handle of class  Lua__Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__handle00
static int tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__handle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"Lua__Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  Lua__Flv_Table* self = (Lua__Flv_Table*)  tolua_tousertype(tolua_S,1,0);
  int event = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Flv_Table__handle'", NULL);
#endif
 {
  int tolua_ret = (int)  self->Flv_Table__handle(event);
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Flv_Table__handle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Lua__Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_Table_new00
static int tolua_fltk_flvw_Lua__Flv_Table_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Lua__Flv_Table",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Lua__Flv_Table* tolua_ret = (Lua__Flv_Table*)  Mtolua_new((Lua__Flv_Table)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Lua__Flv_Table");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Lua__Flv_Table */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Lua__Flv_Table_new00_local
static int tolua_fltk_flvw_Lua__Flv_Table_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_flvw_Lua__Flv_Table_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Lua__Flv_Table (lua_State* tolua_S)
{
 Lua__Flv_Table* self = (Lua__Flv_Table*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif

/* method: new of class  Flve_Check_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flve_Check_Button_new00
static int tolua_fltk_flvw_Flve_Check_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Flve_Check_Button",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Flve_Check_Button* tolua_ret = (Flve_Check_Button*)  Mtolua_new((Flve_Check_Button)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flve_Check_Button");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Flve_Check_Button */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flve_Check_Button_new00_local
static int tolua_fltk_flvw_Flve_Check_Button_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_flvw_Flve_Check_Button_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Flve_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flve_Input_new00
static int tolua_fltk_flvw_Flve_Input_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"Flve_Input",0,&tolua_err) ||
 !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
 !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
 !tolua_isstring(tolua_S,6,1,&tolua_err) ||
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  int X = ((int)  tolua_tonumber(tolua_S,2,0));
  int Y = ((int)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  const char* l = ((const char*)  tolua_tostring(tolua_S,6,0));
 {
  Flve_Input* tolua_ret = (Flve_Input*)  Mtolua_new((Flve_Input)(X,Y,W,H,l));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"Flve_Input");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Flve_Input */
#ifndef TOLUA_DISABLE_tolua_fltk_flvw_Flve_Input_new00_local
static int tolua_fltk_flvw_Flve_Input_new00_local(lua_State* tolua_S)
{
 int result = tolua_fltk_flvw_Flve_Input_new00(tolua_S);
 if(result) tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 return result;
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
TOLUA_API int tolua_fltk_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,0);
 tolua_beginmodule(tolua_S,NULL);
 tolua_module(tolua_S,"fltk",1);
 tolua_beginmodule(tolua_S,"fltk");
  tolua_constant(tolua_S,"FL_CURSOR_DEFAULT",FL_CURSOR_DEFAULT);
  tolua_constant(tolua_S,"FL_CURSOR_ARROW",FL_CURSOR_ARROW);
  tolua_constant(tolua_S,"FL_CURSOR_CROSS",FL_CURSOR_CROSS);
  tolua_constant(tolua_S,"FL_CURSOR_WAIT",FL_CURSOR_WAIT);
  tolua_constant(tolua_S,"FL_CURSOR_INSERT",FL_CURSOR_INSERT);
  tolua_constant(tolua_S,"FL_CURSOR_HAND",FL_CURSOR_HAND);
  tolua_constant(tolua_S,"FL_CURSOR_HELP",FL_CURSOR_HELP);
  tolua_constant(tolua_S,"FL_CURSOR_MOVE",FL_CURSOR_MOVE);
  tolua_constant(tolua_S,"FL_CURSOR_NS",FL_CURSOR_NS);
  tolua_constant(tolua_S,"FL_CURSOR_WE",FL_CURSOR_WE);
  tolua_constant(tolua_S,"FL_CURSOR_NWSE",FL_CURSOR_NWSE);
  tolua_constant(tolua_S,"FL_CURSOR_NESW",FL_CURSOR_NESW);
  tolua_constant(tolua_S,"FL_CURSOR_NONE",FL_CURSOR_NONE);
  tolua_constant(tolua_S,"FL_CURSOR_N",FL_CURSOR_N);
  tolua_constant(tolua_S,"FL_CURSOR_NE",FL_CURSOR_NE);
  tolua_constant(tolua_S,"FL_CURSOR_E",FL_CURSOR_E);
  tolua_constant(tolua_S,"FL_CURSOR_SE",FL_CURSOR_SE);
  tolua_constant(tolua_S,"FL_CURSOR_S",FL_CURSOR_S);
  tolua_constant(tolua_S,"FL_CURSOR_SW",FL_CURSOR_SW);
  tolua_constant(tolua_S,"FL_CURSOR_W",FL_CURSOR_W);
  tolua_constant(tolua_S,"FL_CURSOR_NW",FL_CURSOR_NW);
  tolua_constant(tolua_S,"FL_SOLID",FL_SOLID);
  tolua_constant(tolua_S,"FL_DASH",FL_DASH);
  tolua_constant(tolua_S,"FL_DOT",FL_DOT);
  tolua_constant(tolua_S,"FL_DASHDOT",FL_DASHDOT);
  tolua_constant(tolua_S,"FL_DASHDOTDOT",FL_DASHDOTDOT);
  tolua_constant(tolua_S,"FL_CAP_FLAT",FL_CAP_FLAT);
  tolua_constant(tolua_S,"FL_CAP_ROUND",FL_CAP_ROUND);
  tolua_constant(tolua_S,"FL_CAP_SQUARE",FL_CAP_SQUARE);
  tolua_constant(tolua_S,"FL_JOIN_MITER",FL_JOIN_MITER);
  tolua_constant(tolua_S,"FL_JOIN_ROUND",FL_JOIN_ROUND);
  tolua_constant(tolua_S,"FL_JOIN_BEVEL",FL_JOIN_BEVEL);
  tolua_constant(tolua_S,"FALSE",FALSE);
  tolua_constant(tolua_S,"FL_ALIGN_BESIDE",FL_ALIGN_BESIDE);
  tolua_constant(tolua_S,"FL_ALL_FREE",FL_ALL_FREE);
  tolua_constant(tolua_S,"FL_ALT",FL_ALT);
  tolua_constant(tolua_S,"FL_ANALOG_CLOCK",FL_ANALOG_CLOCK);
  tolua_constant(tolua_S,"FL_AUTO",FL_AUTO);
  tolua_constant(tolua_S,"FL_BAR_CHART",FL_BAR_CHART);
  tolua_constant(tolua_S,"FL_BOLDITALIC_STYLE",FL_BOLDITALIC_STYLE);
  tolua_constant(tolua_S,"FL_BOLD_STYLE",FL_BOLD_STYLE);
  tolua_constant(tolua_S,"FL_BOTTOM_BCOL",FL_BOTTOM_BCOL);
  tolua_constant(tolua_S,"FL_BOUND_WIDTH",FL_BOUND_WIDTH);
  tolua_constant(tolua_S,"FL_BUTTONS",FL_BUTTONS);
  tolua_constant(tolua_S,"FL_CANCEL",FL_CANCEL);
  tolua_constant(tolua_S,"FL_CAPS_LOCK",FL_CAPS_LOCK);
  tolua_constant(tolua_S,"FL_CHART_LABEL_MAX",FL_CHART_LABEL_MAX);
  tolua_constant(tolua_S,"FL_CHART_MAX",FL_CHART_MAX);
  tolua_constant(tolua_S,"FL_CIRCLE_BOX",FL_CIRCLE_BOX);
  tolua_constant(tolua_S,"FL_COLOR_CUBE",FL_COLOR_CUBE);
  tolua_constant(tolua_S,"FL_CONTINUOUS_FREE",FL_CONTINUOUS_FREE);
  tolua_constant(tolua_S,"FL_CTRL",FL_CTRL);
  tolua_constant(tolua_S,"FL_DARKCYAN",FL_DARKCYAN);
  tolua_constant(tolua_S,"FL_DARKGOLD",FL_DARKGOLD);
  tolua_constant(tolua_S,"FL_DARKTOMATO",FL_DARKTOMATO);
  tolua_constant(tolua_S,"FL_DEFAULT_CURSOR",FL_DEFAULT_CURSOR);
  tolua_constant(tolua_S,"FL_DEFAULT_FONT",FL_DEFAULT_FONT);
  tolua_constant(tolua_S,"FL_DEFAULT_SIZE",FL_DEFAULT_SIZE);
  tolua_constant(tolua_S,"FL_DIAMOND_BOX",FL_DIAMOND_BOX);
  tolua_constant(tolua_S,"FL_DIAMOND_DOWN_BOX",FL_DIAMOND_DOWN_BOX);
  tolua_constant(tolua_S,"FL_DIAMOND_UP_BOX",FL_DIAMOND_UP_BOX);
  tolua_constant(tolua_S,"FL_DIGITAL_CLOCK",FL_DIGITAL_CLOCK);
  tolua_constant(tolua_S,"FL_DOUBLE_WINDOW",FL_DOUBLE_WINDOW);
  tolua_constant(tolua_S,"FL_DRAW",FL_DRAW);
  tolua_constant(tolua_S,"FL_DROPLIST_CHOICE",FL_DROPLIST_CHOICE);
  tolua_constant(tolua_S,"FL_EMBOSSED_LABEL",FL_EMBOSSED_LABEL);
  tolua_constant(tolua_S,"FL_EMBOSSED_STYLE",FL_EMBOSSED_STYLE);
  tolua_constant(tolua_S,"FL_ENGRAVED_LABEL",FL_ENGRAVED_LABEL);
  tolua_constant(tolua_S,"FL_ENGRAVED_STYLE",FL_ENGRAVED_STYLE);
  tolua_constant(tolua_S,"FL_F",FL_F);
  tolua_constant(tolua_S,"FL_FILLED_CHART",FL_FILLED_CHART);
  tolua_constant(tolua_S,"FL_FILL_CHART",FL_FILL_CHART);
  tolua_constant(tolua_S,"FL_FILL_DIAL",FL_FILL_DIAL);
  tolua_constant(tolua_S,"FL_FIXEDBOLDITALIC_STYLE",FL_FIXEDBOLDITALIC_STYLE);
  tolua_constant(tolua_S,"FL_FIXEDBOLD_STYLE",FL_FIXEDBOLD_STYLE);
  tolua_constant(tolua_S,"FL_FIXEDITALIC_STYLE",FL_FIXEDITALIC_STYLE);
  tolua_constant(tolua_S,"FL_FIXED_STYLE",FL_FIXED_STYLE);
  tolua_constant(tolua_S,"FL_FLOAT_INPUT",FL_FLOAT_INPUT);
  tolua_constant(tolua_S,"FL_FRAME",FL_FRAME);
  tolua_constant(tolua_S,"FL_FRAME_BOX",FL_FRAME_BOX);
  tolua_constant(tolua_S,"FL_FREEMEM",FL_FREEMEM);
  tolua_constant(tolua_S,"FL_FREEZE",FL_FREEZE);
  tolua_constant(tolua_S,"FL_FREE_COLOR",FL_FREE_COLOR);
  tolua_constant(tolua_S,"FL_GRAY",FL_GRAY);
  tolua_constant(tolua_S,"FL_GRAY_RAMP",FL_GRAY_RAMP);
  tolua_constant(tolua_S,"FL_GTK_DOWN_BOX",FL_GTK_DOWN_BOX);
  tolua_constant(tolua_S,"FL_GTK_DOWN_FRAME",FL_GTK_DOWN_FRAME);
  tolua_constant(tolua_S,"FL_GTK_ROUND_DOWN_BOX",FL_GTK_ROUND_DOWN_BOX);
  tolua_constant(tolua_S,"FL_GTK_ROUND_UP_BOX",FL_GTK_ROUND_UP_BOX);
  tolua_constant(tolua_S,"FL_GTK_THIN_DOWN_BOX",FL_GTK_THIN_DOWN_BOX);
  tolua_constant(tolua_S,"FL_GTK_THIN_DOWN_FRAME",FL_GTK_THIN_DOWN_FRAME);
  tolua_constant(tolua_S,"FL_GTK_THIN_UP_BOX",FL_GTK_THIN_UP_BOX);
  tolua_constant(tolua_S,"FL_GTK_THIN_UP_FRAME",FL_GTK_THIN_UP_FRAME);
  tolua_constant(tolua_S,"FL_GTK_UP_BOX",FL_GTK_UP_BOX);
  tolua_constant(tolua_S,"FL_GTK_UP_FRAME",FL_GTK_UP_FRAME);
  tolua_constant(tolua_S,"FL_HORBAR_CHART",FL_HORBAR_CHART);
  tolua_constant(tolua_S,"FL_IGNORE",FL_IGNORE);
  tolua_constant(tolua_S,"FL_IMAGE_WITH_ALPHA",FL_IMAGE_WITH_ALPHA);
  tolua_constant(tolua_S,"FL_INACTIVE",FL_INACTIVE);
  tolua_constant(tolua_S,"FL_INACTIVE_COL",FL_INACTIVE_COL);
  tolua_constant(tolua_S,"FL_INDIANRED",FL_INDIANRED);
  tolua_constant(tolua_S,"FL_INOUT_BUTTON",FL_INOUT_BUTTON);
  tolua_constant(tolua_S,"FL_INPUT_FREE",FL_INPUT_FREE);
  tolua_constant(tolua_S,"FL_INPUT_READONLY",FL_INPUT_READONLY);
  tolua_constant(tolua_S,"FL_INPUT_TYPE",FL_INPUT_TYPE);
  tolua_constant(tolua_S,"FL_INPUT_WRAP",FL_INPUT_WRAP);
  tolua_constant(tolua_S,"FL_INT_INPUT",FL_INT_INPUT);
  tolua_constant(tolua_S,"FL_INVALID",FL_INVALID);
  tolua_constant(tolua_S,"FL_INVALID_STYLE",FL_INVALID_STYLE);
  tolua_constant(tolua_S,"FL_INVISIBLE_CURSOR",FL_INVISIBLE_CURSOR);
  tolua_constant(tolua_S,"FL_ITALIC_STYLE",FL_ITALIC_STYLE);
  tolua_constant(tolua_S,"FL_KEY_MASK",FL_KEY_MASK);
  tolua_constant(tolua_S,"FL_KP",FL_KP);
  tolua_constant(tolua_S,"FL_LARGE_FONT",FL_LARGE_FONT);
  tolua_constant(tolua_S,"FL_LARGE_SIZE",FL_LARGE_SIZE);
  tolua_constant(tolua_S,"FL_LCOL",FL_LCOL);
  tolua_constant(tolua_S,"FL_LEFTMOUSE",FL_LEFTMOUSE);
  tolua_constant(tolua_S,"FL_LEFT_BCOL",FL_LEFT_BCOL);
  tolua_constant(tolua_S,"FL_LEFT_MOUSE",FL_LEFT_MOUSE);
  tolua_constant(tolua_S,"FL_LINE_CHART",FL_LINE_CHART);
  tolua_constant(tolua_S,"FL_LINE_DIAL",FL_LINE_DIAL);
  tolua_constant(tolua_S,"FL_MAJOR_VERSION",FL_MAJOR_VERSION);
  tolua_constant(tolua_S,"FL_MCOL",FL_MCOL);
  tolua_constant(tolua_S,"FL_MEDIUM_FONT",FL_MEDIUM_FONT);
  tolua_constant(tolua_S,"FL_MEDIUM_SIZE",FL_MEDIUM_SIZE);
  tolua_constant(tolua_S,"FL_MENU_BUTTON",FL_MENU_BUTTON);
  tolua_constant(tolua_S,"FL_META",FL_META);
  tolua_constant(tolua_S,"FL_MIDDLEMOUSE",FL_MIDDLEMOUSE);
  tolua_constant(tolua_S,"FL_MIDDLE_MOUSE",FL_MIDDLE_MOUSE);
  tolua_constant(tolua_S,"FL_MINOR_VERSION",FL_MINOR_VERSION);
  tolua_constant(tolua_S,"FL_MOUSE",FL_MOUSE);
  tolua_constant(tolua_S,"FL_MULTILINE_INPUT",FL_MULTILINE_INPUT);
  tolua_constant(tolua_S,"FL_MULTILINE_INPUT_WRAP",FL_MULTILINE_INPUT_WRAP);
  tolua_constant(tolua_S,"FL_MULTILINE_OUTPUT",FL_MULTILINE_OUTPUT);
  tolua_constant(tolua_S,"FL_MULTILINE_OUTPUT_WRAP",FL_MULTILINE_OUTPUT_WRAP);
  tolua_constant(tolua_S,"FL_MULTI_BROWSER",FL_MULTI_BROWSER);
  tolua_constant(tolua_S,"FL_NONE",FL_NONE);
  tolua_constant(tolua_S,"FL_NORMAL_BITMAP",FL_NORMAL_BITMAP);
  tolua_constant(tolua_S,"FL_NORMAL_BROWSER",FL_NORMAL_BROWSER);
  tolua_constant(tolua_S,"FL_NORMAL_BUTTON",FL_NORMAL_BUTTON);
  tolua_constant(tolua_S,"FL_NORMAL_CHOICE",FL_NORMAL_CHOICE);
  tolua_constant(tolua_S,"FL_NORMAL_COUNTER",FL_NORMAL_COUNTER);
  tolua_constant(tolua_S,"FL_NORMAL_DIAL",FL_NORMAL_DIAL);
  tolua_constant(tolua_S,"FL_NORMAL_FONT",FL_NORMAL_FONT);
  tolua_constant(tolua_S,"FL_NORMAL_FREE",FL_NORMAL_FREE);
  tolua_constant(tolua_S,"FL_NORMAL_INPUT",FL_NORMAL_INPUT);
  tolua_constant(tolua_S,"FL_NORMAL_OUTPUT",FL_NORMAL_OUTPUT);
  tolua_constant(tolua_S,"FL_NORMAL_PIXMAP",FL_NORMAL_PIXMAP);
  tolua_constant(tolua_S,"FL_NORMAL_POSITIONER",FL_NORMAL_POSITIONER);
  tolua_constant(tolua_S,"FL_NORMAL_STYLE",FL_NORMAL_STYLE);
  tolua_constant(tolua_S,"FL_NORMAL_TEXT",FL_NORMAL_TEXT);
  tolua_constant(tolua_S,"FL_NORMAL_TIMER",FL_NORMAL_TIMER);
  tolua_constant(tolua_S,"FL_NO_FRAME",FL_NO_FRAME);
  tolua_constant(tolua_S,"FL_NUM_BLUE",FL_NUM_BLUE);
  tolua_constant(tolua_S,"FL_NUM_FREE_COLOR",FL_NUM_FREE_COLOR);
  tolua_constant(tolua_S,"FL_NUM_GRAY",FL_NUM_GRAY);
  tolua_constant(tolua_S,"FL_NUM_GREEN",FL_NUM_GREEN);
  tolua_constant(tolua_S,"FL_NUM_LOCK",FL_NUM_LOCK);
  tolua_constant(tolua_S,"FL_NUM_RED",FL_NUM_RED);
  tolua_constant(tolua_S,"FL_OFF",FL_OFF);
  tolua_constant(tolua_S,"FL_OFLAT_BOX",FL_OFLAT_BOX);
  tolua_constant(tolua_S,"FL_OK",FL_OK);
  tolua_constant(tolua_S,"FL_ON",FL_ON);
  tolua_constant(tolua_S,"FL_ORCHID",FL_ORCHID);
  tolua_constant(tolua_S,"FL_OSHADOW_BOX",FL_OSHADOW_BOX);
  tolua_constant(tolua_S,"FL_OVAL_BOX",FL_OVAL_BOX);
  tolua_constant(tolua_S,"FL_OVAL_FRAME",FL_OVAL_FRAME);
  tolua_constant(tolua_S,"FL_PALEGREEN",FL_PALEGREEN);
  tolua_constant(tolua_S,"FL_PATCH_VERSION",FL_PATCH_VERSION);
  tolua_constant(tolua_S,"FL_PIE_CHART",FL_PIE_CHART);
  tolua_constant(tolua_S,"FL_PLACE_CENTERFREE",FL_PLACE_CENTERFREE);
  tolua_constant(tolua_S,"FL_PLACE_FREE_CENTER",FL_PLACE_FREE_CENTER);
  tolua_constant(tolua_S,"FL_PLASTIC_DOWN_BOX",FL_PLASTIC_DOWN_BOX);
  tolua_constant(tolua_S,"FL_PLASTIC_DOWN_FRAME",FL_PLASTIC_DOWN_FRAME);
  tolua_constant(tolua_S,"FL_PLASTIC_ROUND_DOWN_BOX",FL_PLASTIC_ROUND_DOWN_BOX);
  tolua_constant(tolua_S,"FL_PLASTIC_ROUND_UP_BOX",FL_PLASTIC_ROUND_UP_BOX);
  tolua_constant(tolua_S,"FL_PLASTIC_THIN_DOWN_BOX",FL_PLASTIC_THIN_DOWN_BOX);
  tolua_constant(tolua_S,"FL_PLASTIC_THIN_UP_BOX",FL_PLASTIC_THIN_UP_BOX);
  tolua_constant(tolua_S,"FL_PLASTIC_UP_BOX",FL_PLASTIC_UP_BOX);
  tolua_constant(tolua_S,"FL_PLASTIC_UP_FRAME",FL_PLASTIC_UP_FRAME);
  tolua_constant(tolua_S,"FL_PREEMPT",FL_PREEMPT);
  tolua_constant(tolua_S,"FL_PULLDOWN_MENU",FL_PULLDOWN_MENU);
  tolua_constant(tolua_S,"FL_PUP_INACTIVE",FL_PUP_INACTIVE);
  tolua_constant(tolua_S,"FL_PUP_TOGGLE",FL_PUP_TOGGLE);
  tolua_constant(tolua_S,"FL_PUSH_BUTTON",FL_PUSH_BUTTON);
  tolua_constant(tolua_S,"FL_PUSH_MENU",FL_PUSH_MENU);
  tolua_constant(tolua_S,"FL_RADIO_BUTTON",FL_RADIO_BUTTON);
  tolua_constant(tolua_S,"FL_RESERVED_TYPE",FL_RESERVED_TYPE);
  tolua_constant(tolua_S,"FL_RETURN_ALWAYS",FL_RETURN_ALWAYS);
  tolua_constant(tolua_S,"FL_RETURN_BUTTON",FL_RETURN_BUTTON);
  tolua_constant(tolua_S,"FL_RETURN_CHANGED",FL_RETURN_CHANGED);
  tolua_constant(tolua_S,"FL_RETURN_END",FL_RETURN_END);
  tolua_constant(tolua_S,"FL_RETURN_END_CHANGED",FL_RETURN_END_CHANGED);
  tolua_constant(tolua_S,"FL_RFLAT_BOX",FL_RFLAT_BOX);
  tolua_constant(tolua_S,"FL_RIGHTMOUSE",FL_RIGHTMOUSE);
  tolua_constant(tolua_S,"FL_RIGHT_BCOL",FL_RIGHT_BCOL);
  tolua_constant(tolua_S,"FL_RIGHT_MOUSE",FL_RIGHT_MOUSE);
  tolua_constant(tolua_S,"FL_ROUNDED_BOX",FL_ROUNDED_BOX);
  tolua_constant(tolua_S,"FL_ROUNDED_FRAME",FL_ROUNDED_FRAME);
  tolua_constant(tolua_S,"FL_ROUND_CLOCK",FL_ROUND_CLOCK);
  tolua_constant(tolua_S,"FL_ROUND_DOWN_BOX",FL_ROUND_DOWN_BOX);
  tolua_constant(tolua_S,"FL_ROUND_UP_BOX",FL_ROUND_UP_BOX);
  tolua_constant(tolua_S,"FL_RSHADOW_BOX",FL_RSHADOW_BOX);
  tolua_constant(tolua_S,"FL_SCROLL_LOCK",FL_SCROLL_LOCK);
  tolua_constant(tolua_S,"FL_SECRET_INPUT",FL_SECRET_INPUT);
  tolua_constant(tolua_S,"FL_SELECT_BROWSER",FL_SELECT_BROWSER);
  tolua_constant(tolua_S,"FL_SHADOW_BOX",FL_SHADOW_BOX);
  tolua_constant(tolua_S,"FL_SHADOW_FRAME",FL_SHADOW_FRAME);
  tolua_constant(tolua_S,"FL_SHADOW_LABEL",FL_SHADOW_LABEL);
  tolua_constant(tolua_S,"FL_SHADOW_STYLE",FL_SHADOW_STYLE);
  tolua_constant(tolua_S,"FL_SHIFT",FL_SHIFT);
  tolua_constant(tolua_S,"FL_SIMPLE_COUNTER",FL_SIMPLE_COUNTER);
  tolua_constant(tolua_S,"FL_SLATEBLUE",FL_SLATEBLUE);
  tolua_constant(tolua_S,"FL_SLEEPING_FREE",FL_SLEEPING_FREE);
  tolua_constant(tolua_S,"FL_SMALL_FONT",FL_SMALL_FONT);
  tolua_constant(tolua_S,"FL_SMALL_SIZE",FL_SMALL_SIZE);
  tolua_constant(tolua_S,"FL_SORT_ASCENDING",FL_SORT_ASCENDING);
  tolua_constant(tolua_S,"FL_SORT_DESCENDING",FL_SORT_DESCENDING);
  tolua_constant(tolua_S,"FL_SPECIALPIE_CHART",FL_SPECIALPIE_CHART);
  tolua_constant(tolua_S,"FL_SPIKE_CHART",FL_SPIKE_CHART);
  tolua_constant(tolua_S,"FL_SQUARE_CLOCK",FL_SQUARE_CLOCK);
  tolua_constant(tolua_S,"FL_STEP",FL_STEP);
  tolua_constant(tolua_S,"FL_SYMBOL_LABEL",FL_SYMBOL_LABEL);
  tolua_constant(tolua_S,"FL_TEXT_EDITOR_ANY_STATE",FL_TEXT_EDITOR_ANY_STATE);
  tolua_constant(tolua_S,"FL_THAW",FL_THAW);
  tolua_constant(tolua_S,"FL_TIMESBOLDITALIC_STYLE",FL_TIMESBOLDITALIC_STYLE);
  tolua_constant(tolua_S,"FL_TIMESBOLD_STYLE",FL_TIMESBOLD_STYLE);
  tolua_constant(tolua_S,"FL_TIMESITALIC_STYLE",FL_TIMESITALIC_STYLE);
  tolua_constant(tolua_S,"FL_TIMES_STYLE",FL_TIMES_STYLE);
  tolua_constant(tolua_S,"FL_TINY_FONT",FL_TINY_FONT);
  tolua_constant(tolua_S,"FL_TINY_SIZE",FL_TINY_SIZE);
  tolua_constant(tolua_S,"FL_TOGGLE_BUTTON",FL_TOGGLE_BUTTON);
  tolua_constant(tolua_S,"FL_TOMATO",FL_TOMATO);
  tolua_constant(tolua_S,"FL_TOP_BCOL",FL_TOP_BCOL);
  tolua_constant(tolua_S,"FL_TOUCH_BUTTON",FL_TOUCH_BUTTON);
  tolua_constant(tolua_S,"FL_TOUCH_MENU",FL_TOUCH_MENU);
  tolua_constant(tolua_S,"FL_VALID",FL_VALID);
  tolua_constant(tolua_S,"FL_VALUE_TIMER",FL_VALUE_TIMER);
  tolua_constant(tolua_S,"FL_VERSION",FL_VERSION);
  tolua_constant(tolua_S,"FL_VERTICAL",FL_VERTICAL);
  tolua_constant(tolua_S,"FL_VERT_BROWSER_SLIDER",FL_VERT_BROWSER_SLIDER);
  tolua_constant(tolua_S,"FL_VERT_FILL_SLIDER",FL_VERT_FILL_SLIDER);
  tolua_constant(tolua_S,"FL_VERT_NICE_SLIDER",FL_VERT_NICE_SLIDER);
  tolua_constant(tolua_S,"FL_VERT_SLIDER",FL_VERT_SLIDER);
  tolua_constant(tolua_S,"FL_WHEAT",FL_WHEAT);
  tolua_constant(tolua_S,"FL_WHEN_NEEDED",FL_WHEN_NEEDED);
  tolua_constant(tolua_S,"FL_WINDOW",FL_WINDOW);
  tolua_constant(tolua_S,"NO_PAGE_FORMATS",NO_PAGE_FORMATS);
  tolua_constant(tolua_S,"NULL",NULL);
  tolua_constant(tolua_S,"SLIDER_WIDTH",SLIDER_WIDTH);
  tolua_constant(tolua_S,"TRUE",TRUE);
  tolua_constant(tolua_S,"FL_TREE_SORT_NONE",FL_TREE_SORT_NONE);
  tolua_constant(tolua_S,"FL_TREE_SORT_ASCENDING",FL_TREE_SORT_ASCENDING);
  tolua_constant(tolua_S,"FL_TREE_SORT_DESCENDING",FL_TREE_SORT_DESCENDING);
  tolua_constant(tolua_S,"FL_RGB",FL_RGB);
  tolua_constant(tolua_S,"FL_INDEX",FL_INDEX);
  tolua_constant(tolua_S,"FL_SINGLE",FL_SINGLE);
  tolua_constant(tolua_S,"FL_DOUBLE",FL_DOUBLE);
  tolua_constant(tolua_S,"FL_ACCUM",FL_ACCUM);
  tolua_constant(tolua_S,"FL_ALPHA",FL_ALPHA);
  tolua_constant(tolua_S,"FL_DEPTH",FL_DEPTH);
  tolua_constant(tolua_S,"FL_STENCIL",FL_STENCIL);
  tolua_constant(tolua_S,"FL_RGB8",FL_RGB8);
  tolua_constant(tolua_S,"FL_MULTISAMPLE",FL_MULTISAMPLE);
  tolua_constant(tolua_S,"FL_STEREO",FL_STEREO);
  tolua_constant(tolua_S,"FL_FAKE_SINGLE",FL_FAKE_SINGLE);
  tolua_constant(tolua_S,"FL_TREE_SELECT_NONE",FL_TREE_SELECT_NONE);
  tolua_constant(tolua_S,"FL_TREE_SELECT_SINGLE",FL_TREE_SELECT_SINGLE);
  tolua_constant(tolua_S,"FL_TREE_SELECT_MULTI",FL_TREE_SELECT_MULTI);
  tolua_constant(tolua_S,"FL_TREE_CONNECTOR_NONE",FL_TREE_CONNECTOR_NONE);
  tolua_constant(tolua_S,"FL_TREE_CONNECTOR_DOTTED",FL_TREE_CONNECTOR_DOTTED);
  tolua_constant(tolua_S,"FL_TREE_CONNECTOR_SOLID",FL_TREE_CONNECTOR_SOLID);
  tolua_constant(tolua_S,"GLUT_RETURN_ZERO",GLUT_RETURN_ZERO);
  tolua_constant(tolua_S,"GLUT_WINDOW_X",GLUT_WINDOW_X);
  tolua_constant(tolua_S,"GLUT_WINDOW_Y",GLUT_WINDOW_Y);
  tolua_constant(tolua_S,"GLUT_WINDOW_WIDTH",GLUT_WINDOW_WIDTH);
  tolua_constant(tolua_S,"GLUT_WINDOW_HEIGHT",GLUT_WINDOW_HEIGHT);
  tolua_constant(tolua_S,"GLUT_WINDOW_PARENT",GLUT_WINDOW_PARENT);
  tolua_constant(tolua_S,"GLUT_SCREEN_WIDTH",GLUT_SCREEN_WIDTH);
  tolua_constant(tolua_S,"GLUT_SCREEN_HEIGHT",GLUT_SCREEN_HEIGHT);
  tolua_constant(tolua_S,"GLUT_MENU_NUM_ITEMS",GLUT_MENU_NUM_ITEMS);
  tolua_constant(tolua_S,"GLUT_DISPLAY_MODE_POSSIBLE",GLUT_DISPLAY_MODE_POSSIBLE);
  tolua_constant(tolua_S,"GLUT_INIT_WINDOW_X",GLUT_INIT_WINDOW_X);
  tolua_constant(tolua_S,"GLUT_INIT_WINDOW_Y",GLUT_INIT_WINDOW_Y);
  tolua_constant(tolua_S,"GLUT_INIT_WINDOW_WIDTH",GLUT_INIT_WINDOW_WIDTH);
  tolua_constant(tolua_S,"GLUT_INIT_WINDOW_HEIGHT",GLUT_INIT_WINDOW_HEIGHT);
  tolua_constant(tolua_S,"GLUT_INIT_DISPLAY_MODE",GLUT_INIT_DISPLAY_MODE);
  tolua_constant(tolua_S,"GLUT_WINDOW_BUFFER_SIZE",GLUT_WINDOW_BUFFER_SIZE);
  tolua_constant(tolua_S,"GLUT_VERSION",GLUT_VERSION);
  tolua_constant(tolua_S,"FL_DAMAGE_CHILD",FL_DAMAGE_CHILD);
  tolua_constant(tolua_S,"FL_DAMAGE_EXPOSE",FL_DAMAGE_EXPOSE);
  tolua_constant(tolua_S,"FL_DAMAGE_SCROLL",FL_DAMAGE_SCROLL);
  tolua_constant(tolua_S,"FL_DAMAGE_OVERLAY",FL_DAMAGE_OVERLAY);
  tolua_constant(tolua_S,"FL_DAMAGE_USER1",FL_DAMAGE_USER1);
  tolua_constant(tolua_S,"FL_DAMAGE_USER2",FL_DAMAGE_USER2);
  tolua_constant(tolua_S,"FL_DAMAGE_ALL",FL_DAMAGE_ALL);
  tolua_constant(tolua_S,"FL_NO_EVENT",FL_NO_EVENT);
  tolua_constant(tolua_S,"FL_PUSH",FL_PUSH);
  tolua_constant(tolua_S,"FL_RELEASE",FL_RELEASE);
  tolua_constant(tolua_S,"FL_ENTER",FL_ENTER);
  tolua_constant(tolua_S,"FL_LEAVE",FL_LEAVE);
  tolua_constant(tolua_S,"FL_DRAG",FL_DRAG);
  tolua_constant(tolua_S,"FL_FOCUS",FL_FOCUS);
  tolua_constant(tolua_S,"FL_UNFOCUS",FL_UNFOCUS);
  tolua_constant(tolua_S,"FL_KEYDOWN",FL_KEYDOWN);
  tolua_constant(tolua_S,"FL_KEYBOARD",FL_KEYBOARD);
  tolua_constant(tolua_S,"FL_KEYUP",FL_KEYUP);
  tolua_constant(tolua_S,"FL_CLOSE",FL_CLOSE);
  tolua_constant(tolua_S,"FL_MOVE",FL_MOVE);
  tolua_constant(tolua_S,"FL_SHORTCUT",FL_SHORTCUT);
  tolua_constant(tolua_S,"FL_DEACTIVATE",FL_DEACTIVATE);
  tolua_constant(tolua_S,"FL_ACTIVATE",FL_ACTIVATE);
  tolua_constant(tolua_S,"FL_HIDE",FL_HIDE);
  tolua_constant(tolua_S,"FL_SHOW",FL_SHOW);
  tolua_constant(tolua_S,"FL_PASTE",FL_PASTE);
  tolua_constant(tolua_S,"FL_SELECTIONCLEAR",FL_SELECTIONCLEAR);
  tolua_constant(tolua_S,"FL_MOUSEWHEEL",FL_MOUSEWHEEL);
  tolua_constant(tolua_S,"FL_DND_ENTER",FL_DND_ENTER);
  tolua_constant(tolua_S,"FL_DND_DRAG",FL_DND_DRAG);
  tolua_constant(tolua_S,"FL_DND_LEAVE",FL_DND_LEAVE);
  tolua_constant(tolua_S,"FL_DND_RELEASE",FL_DND_RELEASE);
  tolua_constant(tolua_S,"FL_Button",FL_Button);
  tolua_constant(tolua_S,"FL_BackSpace",FL_BackSpace);
  tolua_constant(tolua_S,"FL_Tab",FL_Tab);
  tolua_constant(tolua_S,"FL_Enter",FL_Enter);
  tolua_constant(tolua_S,"FL_Pause",FL_Pause);
  tolua_constant(tolua_S,"FL_Scroll_Lock",FL_Scroll_Lock);
  tolua_constant(tolua_S,"FL_Escape",FL_Escape);
  tolua_constant(tolua_S,"FL_Home",FL_Home);
  tolua_constant(tolua_S,"FL_Left",FL_Left);
  tolua_constant(tolua_S,"FL_Up",FL_Up);
  tolua_constant(tolua_S,"FL_Right",FL_Right);
  tolua_constant(tolua_S,"FL_Down",FL_Down);
  tolua_constant(tolua_S,"FL_Page_Up",FL_Page_Up);
  tolua_constant(tolua_S,"FL_Page_Down",FL_Page_Down);
  tolua_constant(tolua_S,"FL_End",FL_End);
  tolua_constant(tolua_S,"FL_Print",FL_Print);
  tolua_constant(tolua_S,"FL_Insert",FL_Insert);
  tolua_constant(tolua_S,"FL_Menu",FL_Menu);
  tolua_constant(tolua_S,"FL_Help",FL_Help);
  tolua_constant(tolua_S,"FL_Num_Lock",FL_Num_Lock);
  tolua_constant(tolua_S,"FL_KP",FL_KP);
  tolua_constant(tolua_S,"FL_KP_Enter",FL_KP_Enter);
  tolua_constant(tolua_S,"FL_KP_Last",FL_KP_Last);
  tolua_constant(tolua_S,"FL_F",FL_F);
  tolua_constant(tolua_S,"FL_F_Last",FL_F_Last);
  tolua_constant(tolua_S,"FL_Shift_L",FL_Shift_L);
  tolua_constant(tolua_S,"FL_Shift_R",FL_Shift_R);
  tolua_constant(tolua_S,"FL_Control_L",FL_Control_L);
  tolua_constant(tolua_S,"FL_Control_R",FL_Control_R);
  tolua_constant(tolua_S,"FL_Caps_Lock",FL_Caps_Lock);
  tolua_constant(tolua_S,"FL_Meta_L",FL_Meta_L);
  tolua_constant(tolua_S,"FL_Meta_R",FL_Meta_R);
  tolua_constant(tolua_S,"FL_Alt_L",FL_Alt_L);
  tolua_constant(tolua_S,"FL_Alt_R",FL_Alt_R);
  tolua_constant(tolua_S,"FL_Delete",FL_Delete);
  tolua_constant(tolua_S,"FL_ALIGN_CENTER",FL_ALIGN_CENTER);
  tolua_constant(tolua_S,"FL_ALIGN_TOP",FL_ALIGN_TOP);
  tolua_constant(tolua_S,"FL_ALIGN_BOTTOM",FL_ALIGN_BOTTOM);
  tolua_constant(tolua_S,"FL_ALIGN_LEFT",FL_ALIGN_LEFT);
  tolua_constant(tolua_S,"FL_ALIGN_RIGHT",FL_ALIGN_RIGHT);
  tolua_constant(tolua_S,"FL_ALIGN_INSIDE",FL_ALIGN_INSIDE);
  tolua_constant(tolua_S,"FL_ALIGN_TEXT_OVER_IMAGE",FL_ALIGN_TEXT_OVER_IMAGE);
  tolua_constant(tolua_S,"FL_ALIGN_IMAGE_OVER_TEXT",FL_ALIGN_IMAGE_OVER_TEXT);
  tolua_constant(tolua_S,"FL_ALIGN_CLIP",FL_ALIGN_CLIP);
  tolua_constant(tolua_S,"FL_ALIGN_WRAP",FL_ALIGN_WRAP);
  tolua_constant(tolua_S,"FL_ALIGN_IMAGE_NEXT_TO_TEXT",FL_ALIGN_IMAGE_NEXT_TO_TEXT);
  tolua_constant(tolua_S,"FL_ALIGN_TEXT_NEXT_TO_IMAGE",FL_ALIGN_TEXT_NEXT_TO_IMAGE);
  tolua_constant(tolua_S,"FL_ALIGN_IMAGE_BACKDROP",FL_ALIGN_IMAGE_BACKDROP);
  tolua_constant(tolua_S,"FL_ALIGN_TOP_LEFT",FL_ALIGN_TOP_LEFT);
  tolua_constant(tolua_S,"FL_ALIGN_TOP_RIGHT",FL_ALIGN_TOP_RIGHT);
  tolua_constant(tolua_S,"FL_ALIGN_BOTTOM_LEFT",FL_ALIGN_BOTTOM_LEFT);
  tolua_constant(tolua_S,"FL_ALIGN_BOTTOM_RIGHT",FL_ALIGN_BOTTOM_RIGHT);
  tolua_constant(tolua_S,"FL_ALIGN_LEFT_TOP",FL_ALIGN_LEFT_TOP);
  tolua_constant(tolua_S,"FL_ALIGN_RIGHT_TOP",FL_ALIGN_RIGHT_TOP);
  tolua_constant(tolua_S,"FL_ALIGN_LEFT_BOTTOM",FL_ALIGN_LEFT_BOTTOM);
  tolua_constant(tolua_S,"FL_ALIGN_RIGHT_BOTTOM",FL_ALIGN_RIGHT_BOTTOM);
  tolua_constant(tolua_S,"FL_ALIGN_NOWRAP",FL_ALIGN_NOWRAP);
  tolua_constant(tolua_S,"FL_ALIGN_POSITION_MASK",FL_ALIGN_POSITION_MASK);
  tolua_constant(tolua_S,"FL_ALIGN_IMAGE_MASK",FL_ALIGN_IMAGE_MASK);
  tolua_constant(tolua_S,"FL_FOREGROUND_COLOR",FL_FOREGROUND_COLOR);
  tolua_constant(tolua_S,"FL_BACKGROUND2_COLOR",FL_BACKGROUND2_COLOR);
  tolua_constant(tolua_S,"FL_INACTIVE_COLOR",FL_INACTIVE_COLOR);
  tolua_constant(tolua_S,"FL_SELECTION_COLOR",FL_SELECTION_COLOR);
  tolua_constant(tolua_S,"FL_GRAY0",FL_GRAY0);
  tolua_constant(tolua_S,"FL_DARK3",FL_DARK3);
  tolua_constant(tolua_S,"FL_DARK2",FL_DARK2);
  tolua_constant(tolua_S,"FL_DARK1",FL_DARK1);
  tolua_constant(tolua_S,"FL_BACKGROUND_COLOR",FL_BACKGROUND_COLOR);
  tolua_constant(tolua_S,"FL_LIGHT1",FL_LIGHT1);
  tolua_constant(tolua_S,"FL_LIGHT2",FL_LIGHT2);
  tolua_constant(tolua_S,"FL_LIGHT3",FL_LIGHT3);
  tolua_constant(tolua_S,"FL_BLACK",FL_BLACK);
  tolua_constant(tolua_S,"FL_RED",FL_RED);
  tolua_constant(tolua_S,"FL_GREEN",FL_GREEN);
  tolua_constant(tolua_S,"FL_YELLOW",FL_YELLOW);
  tolua_constant(tolua_S,"FL_BLUE",FL_BLUE);
  tolua_constant(tolua_S,"FL_MAGENTA",FL_MAGENTA);
  tolua_constant(tolua_S,"FL_CYAN",FL_CYAN);
  tolua_constant(tolua_S,"FL_DARK_RED",FL_DARK_RED);
  tolua_constant(tolua_S,"FL_DARK_GREEN",FL_DARK_GREEN);
  tolua_constant(tolua_S,"FL_DARK_YELLOW",FL_DARK_YELLOW);
  tolua_constant(tolua_S,"FL_DARK_BLUE",FL_DARK_BLUE);
  tolua_constant(tolua_S,"FL_DARK_MAGENTA",FL_DARK_MAGENTA);
  tolua_constant(tolua_S,"FL_DARK_CYAN",FL_DARK_CYAN);
  tolua_constant(tolua_S,"FL_WHITE",FL_WHITE);
  tolua_constant(tolua_S,"FL_HELVETICA",FL_HELVETICA);
  tolua_constant(tolua_S,"FL_HELVETICA_BOLD",FL_HELVETICA_BOLD);
  tolua_constant(tolua_S,"FL_HELVETICA_ITALIC",FL_HELVETICA_ITALIC);
  tolua_constant(tolua_S,"FL_HELVETICA_BOLD_ITALIC",FL_HELVETICA_BOLD_ITALIC);
  tolua_constant(tolua_S,"FL_COURIER",FL_COURIER);
  tolua_constant(tolua_S,"FL_COURIER_BOLD",FL_COURIER_BOLD);
  tolua_constant(tolua_S,"FL_COURIER_ITALIC",FL_COURIER_ITALIC);
  tolua_constant(tolua_S,"FL_COURIER_BOLD_ITALIC",FL_COURIER_BOLD_ITALIC);
  tolua_constant(tolua_S,"FL_TIMES",FL_TIMES);
  tolua_constant(tolua_S,"FL_TIMES_BOLD",FL_TIMES_BOLD);
  tolua_constant(tolua_S,"FL_TIMES_ITALIC",FL_TIMES_ITALIC);
  tolua_constant(tolua_S,"FL_TIMES_BOLD_ITALIC",FL_TIMES_BOLD_ITALIC);
  tolua_constant(tolua_S,"FL_SYMBOL",FL_SYMBOL);
  tolua_constant(tolua_S,"FL_SCREEN",FL_SCREEN);
  tolua_constant(tolua_S,"FL_SCREEN_BOLD",FL_SCREEN_BOLD);
  tolua_constant(tolua_S,"FL_ZAPF_DINGBATS",FL_ZAPF_DINGBATS);
  tolua_constant(tolua_S,"FL_FREE_FONT",FL_FREE_FONT);
  tolua_constant(tolua_S,"FL_BOLD",FL_BOLD);
  tolua_constant(tolua_S,"FL_ITALIC",FL_ITALIC);
  tolua_constant(tolua_S,"FL_BOLD_ITALIC",FL_BOLD_ITALIC);
  tolua_constant(tolua_S,"FL_NO_BOX",FL_NO_BOX);
  tolua_constant(tolua_S,"FL_FLAT_BOX",FL_FLAT_BOX);
  tolua_constant(tolua_S,"FL_UP_BOX",FL_UP_BOX);
  tolua_constant(tolua_S,"FL_DOWN_BOX",FL_DOWN_BOX);
  tolua_constant(tolua_S,"FL_UP_FRAME",FL_UP_FRAME);
  tolua_constant(tolua_S,"FL_DOWN_FRAME",FL_DOWN_FRAME);
  tolua_constant(tolua_S,"FL_THIN_UP_BOX",FL_THIN_UP_BOX);
  tolua_constant(tolua_S,"FL_THIN_DOWN_BOX",FL_THIN_DOWN_BOX);
  tolua_constant(tolua_S,"FL_THIN_UP_FRAME",FL_THIN_UP_FRAME);
  tolua_constant(tolua_S,"FL_THIN_DOWN_FRAME",FL_THIN_DOWN_FRAME);
  tolua_constant(tolua_S,"FL_ENGRAVED_BOX",FL_ENGRAVED_BOX);
  tolua_constant(tolua_S,"FL_EMBOSSED_BOX",FL_EMBOSSED_BOX);
  tolua_constant(tolua_S,"FL_ENGRAVED_FRAME",FL_ENGRAVED_FRAME);
  tolua_constant(tolua_S,"FL_EMBOSSED_FRAME",FL_EMBOSSED_FRAME);
  tolua_constant(tolua_S,"FL_BORDER_BOX",FL_BORDER_BOX);
  tolua_constant(tolua_S,"_FL_SHADOW_BOX",_FL_SHADOW_BOX);
  tolua_constant(tolua_S,"FL_BORDER_FRAME",FL_BORDER_FRAME);
  tolua_constant(tolua_S,"_FL_SHADOW_FRAME",_FL_SHADOW_FRAME);
  tolua_constant(tolua_S,"_FL_ROUNDED_BOX",_FL_ROUNDED_BOX);
  tolua_constant(tolua_S,"_FL_RSHADOW_BOX",_FL_RSHADOW_BOX);
  tolua_constant(tolua_S,"_FL_ROUNDED_FRAME",_FL_ROUNDED_FRAME);
  tolua_constant(tolua_S,"_FL_RFLAT_BOX",_FL_RFLAT_BOX);
  tolua_constant(tolua_S,"_FL_ROUND_UP_BOX",_FL_ROUND_UP_BOX);
  tolua_constant(tolua_S,"_FL_ROUND_DOWN_BOX",_FL_ROUND_DOWN_BOX);
  tolua_constant(tolua_S,"_FL_DIAMOND_UP_BOX",_FL_DIAMOND_UP_BOX);
  tolua_constant(tolua_S,"_FL_DIAMOND_DOWN_BOX",_FL_DIAMOND_DOWN_BOX);
  tolua_constant(tolua_S,"_FL_OVAL_BOX",_FL_OVAL_BOX);
  tolua_constant(tolua_S,"_FL_OSHADOW_BOX",_FL_OSHADOW_BOX);
  tolua_constant(tolua_S,"_FL_OVAL_FRAME",_FL_OVAL_FRAME);
  tolua_constant(tolua_S,"_FL_OFLAT_BOX",_FL_OFLAT_BOX);
  tolua_constant(tolua_S,"_FL_PLASTIC_UP_BOX",_FL_PLASTIC_UP_BOX);
  tolua_constant(tolua_S,"_FL_PLASTIC_DOWN_BOX",_FL_PLASTIC_DOWN_BOX);
  tolua_constant(tolua_S,"_FL_PLASTIC_UP_FRAME",_FL_PLASTIC_UP_FRAME);
  tolua_constant(tolua_S,"_FL_PLASTIC_DOWN_FRAME",_FL_PLASTIC_DOWN_FRAME);
  tolua_constant(tolua_S,"_FL_PLASTIC_THIN_UP_BOX",_FL_PLASTIC_THIN_UP_BOX);
  tolua_constant(tolua_S,"_FL_PLASTIC_THIN_DOWN_BOX",_FL_PLASTIC_THIN_DOWN_BOX);
  tolua_constant(tolua_S,"_FL_PLASTIC_ROUND_UP_BOX",_FL_PLASTIC_ROUND_UP_BOX);
  tolua_constant(tolua_S,"_FL_PLASTIC_ROUND_DOWN_BOX",_FL_PLASTIC_ROUND_DOWN_BOX);
  tolua_constant(tolua_S,"_FL_GTK_UP_BOX",_FL_GTK_UP_BOX);
  tolua_constant(tolua_S,"_FL_GTK_DOWN_BOX",_FL_GTK_DOWN_BOX);
  tolua_constant(tolua_S,"_FL_GTK_UP_FRAME",_FL_GTK_UP_FRAME);
  tolua_constant(tolua_S,"_FL_GTK_DOWN_FRAME",_FL_GTK_DOWN_FRAME);
  tolua_constant(tolua_S,"_FL_GTK_THIN_UP_BOX",_FL_GTK_THIN_UP_BOX);
  tolua_constant(tolua_S,"_FL_GTK_THIN_DOWN_BOX",_FL_GTK_THIN_DOWN_BOX);
  tolua_constant(tolua_S,"_FL_GTK_THIN_UP_FRAME",_FL_GTK_THIN_UP_FRAME);
  tolua_constant(tolua_S,"_FL_GTK_THIN_DOWN_FRAME",_FL_GTK_THIN_DOWN_FRAME);
  tolua_constant(tolua_S,"_FL_GTK_ROUND_UP_BOX",_FL_GTK_ROUND_UP_BOX);
  tolua_constant(tolua_S,"_FL_GTK_ROUND_DOWN_BOX",_FL_GTK_ROUND_DOWN_BOX);
  tolua_constant(tolua_S,"FL_FREE_BOXTYPE",FL_FREE_BOXTYPE);
  tolua_constant(tolua_S,"FL_NORMAL_LABEL",FL_NORMAL_LABEL);
  tolua_constant(tolua_S,"FL_NO_LABEL",FL_NO_LABEL);
  tolua_constant(tolua_S,"_FL_SHADOW_LABEL",_FL_SHADOW_LABEL);
  tolua_constant(tolua_S,"_FL_ENGRAVED_LABEL",_FL_ENGRAVED_LABEL);
  tolua_constant(tolua_S,"_FL_EMBOSSED_LABEL",_FL_EMBOSSED_LABEL);
  tolua_constant(tolua_S,"_FL_MULTI_LABEL",_FL_MULTI_LABEL);
  tolua_constant(tolua_S,"_FL_ICON_LABEL",_FL_ICON_LABEL);
  tolua_constant(tolua_S,"_FL_IMAGE_LABEL",_FL_IMAGE_LABEL);
  tolua_constant(tolua_S,"FL_FREE_LABELTYPE",FL_FREE_LABELTYPE);
  tolua_constant(tolua_S,"FL_WHEN_NEVER",FL_WHEN_NEVER);
  tolua_constant(tolua_S,"FL_WHEN_CHANGED",FL_WHEN_CHANGED);
  tolua_constant(tolua_S,"FL_WHEN_NOT_CHANGED",FL_WHEN_NOT_CHANGED);
  tolua_constant(tolua_S,"FL_WHEN_RELEASE",FL_WHEN_RELEASE);
  tolua_constant(tolua_S,"FL_WHEN_RELEASE_ALWAYS",FL_WHEN_RELEASE_ALWAYS);
  tolua_constant(tolua_S,"FL_WHEN_ENTER_KEY",FL_WHEN_ENTER_KEY);
  tolua_constant(tolua_S,"FL_WHEN_ENTER_KEY_ALWAYS",FL_WHEN_ENTER_KEY_ALWAYS);
  tolua_constant(tolua_S,"FL_WHEN_ENTER_KEY_CHANGED",FL_WHEN_ENTER_KEY_CHANGED);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Widget","Fl_Widget","",tolua_collect_Fl_Widget);
  #else
  tolua_cclass(tolua_S,"Fl_Widget","Fl_Widget","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Widget");
   tolua_function(tolua_S,"delete",tolua_fltk_fltk_Fl_Widget_delete00);
   tolua_constant(tolua_S,"INACTIVE",Fl_Widget::INACTIVE);
   tolua_constant(tolua_S,"INVISIBLE",Fl_Widget::INVISIBLE);
   tolua_constant(tolua_S,"OUTPUT",Fl_Widget::OUTPUT);
   tolua_constant(tolua_S,"NOBORDER",Fl_Widget::NOBORDER);
   tolua_constant(tolua_S,"FORCE_POSITION",Fl_Widget::FORCE_POSITION);
   tolua_constant(tolua_S,"NON_MODAL",Fl_Widget::NON_MODAL);
   tolua_constant(tolua_S,"SHORTCUT_LABEL",Fl_Widget::SHORTCUT_LABEL);
   tolua_constant(tolua_S,"CHANGED",Fl_Widget::CHANGED);
   tolua_constant(tolua_S,"OVERRIDE",Fl_Widget::OVERRIDE);
   tolua_constant(tolua_S,"VISIBLE_FOCUS",Fl_Widget::VISIBLE_FOCUS);
   tolua_constant(tolua_S,"COPIED_LABEL",Fl_Widget::COPIED_LABEL);
   tolua_constant(tolua_S,"CLIP_CHILDREN",Fl_Widget::CLIP_CHILDREN);
   tolua_constant(tolua_S,"MENU_WINDOW",Fl_Widget::MENU_WINDOW);
   tolua_constant(tolua_S,"TOOLTIP_WINDOW",Fl_Widget::TOOLTIP_WINDOW);
   tolua_constant(tolua_S,"MODAL",Fl_Widget::MODAL);
   tolua_constant(tolua_S,"NO_OVERLAY",Fl_Widget::NO_OVERLAY);
   tolua_constant(tolua_S,"GROUP_RELATIVE",Fl_Widget::GROUP_RELATIVE);
   tolua_constant(tolua_S,"GROUP_TYPE",Fl_Widget::GROUP_TYPE);
   tolua_constant(tolua_S,"WINDOW_TYPE",Fl_Widget::WINDOW_TYPE);
   tolua_constant(tolua_S,"USERFLAG3",Fl_Widget::USERFLAG3);
   tolua_constant(tolua_S,"USERFLAG2",Fl_Widget::USERFLAG2);
   tolua_constant(tolua_S,"USERFLAG1",Fl_Widget::USERFLAG1);
   tolua_function(tolua_S,"activate",tolua_fltk_fltk_Fl_Widget_activate00);
   tolua_function(tolua_S,"active",tolua_fltk_fltk_Fl_Widget_active00);
   tolua_function(tolua_S,"active_r",tolua_fltk_fltk_Fl_Widget_active_r00);
   tolua_function(tolua_S,"align",tolua_fltk_fltk_Fl_Widget_align00);
   tolua_function(tolua_S,"argument",tolua_fltk_fltk_Fl_Widget_argument00);
   tolua_function(tolua_S,"as_gl_window",tolua_fltk_fltk_Fl_Widget_as_gl_window00);
   tolua_function(tolua_S,"as_group",tolua_fltk_fltk_Fl_Widget_as_group00);
   tolua_function(tolua_S,"as_window",tolua_fltk_fltk_Fl_Widget_as_window00);
   tolua_function(tolua_S,"box",tolua_fltk_fltk_Fl_Widget_box00);
   tolua_function(tolua_S,"callback",tolua_fltk_fltk_Fl_Widget_callback00);
   tolua_function(tolua_S,"changed",tolua_fltk_fltk_Fl_Widget_changed00);
   tolua_function(tolua_S,"clear_changed",tolua_fltk_fltk_Fl_Widget_clear_changed00);
   tolua_function(tolua_S,"clear_damage",tolua_fltk_fltk_Fl_Widget_clear_damage00);
   tolua_function(tolua_S,"clear_output",tolua_fltk_fltk_Fl_Widget_clear_output00);
   tolua_function(tolua_S,"clear_visible",tolua_fltk_fltk_Fl_Widget_clear_visible00);
   tolua_function(tolua_S,"clear_visible_focus",tolua_fltk_fltk_Fl_Widget_clear_visible_focus00);
   tolua_function(tolua_S,"color",tolua_fltk_fltk_Fl_Widget_color00);
   tolua_function(tolua_S,"set_color_bg_sel",tolua_fltk_fltk_Fl_Widget_set_color_bg_sel00);
   tolua_function(tolua_S,"contains",tolua_fltk_fltk_Fl_Widget_contains00);
   tolua_function(tolua_S,"copy_label",tolua_fltk_fltk_Fl_Widget_copy_label00);
   tolua_function(tolua_S,"damage",tolua_fltk_fltk_Fl_Widget_damage00);
   tolua_function(tolua_S,"damage_rect",tolua_fltk_fltk_Fl_Widget_damage_rect00);
   tolua_function(tolua_S,"damage_resize",tolua_fltk_fltk_Fl_Widget_damage_resize00);
   tolua_function(tolua_S,"deactivate",tolua_fltk_fltk_Fl_Widget_deactivate00);
   tolua_function(tolua_S,"default_callback",tolua_fltk_fltk_Fl_Widget_default_callback00);
   tolua_function(tolua_S,"deimage",tolua_fltk_fltk_Fl_Widget_deimage00);
   tolua_function(tolua_S,"do_callback",tolua_fltk_fltk_Fl_Widget_do_callback02);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_Widget_draw00);
   tolua_function(tolua_S,"draw_label",tolua_fltk_fltk_Fl_Widget_draw_label00);
   tolua_function(tolua_S,"h",tolua_fltk_fltk_Fl_Widget_h00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Widget_handle00);
   tolua_function(tolua_S,"hide",tolua_fltk_fltk_Fl_Widget_hide00);
   tolua_function(tolua_S,"image",tolua_fltk_fltk_Fl_Widget_image00);
   tolua_function(tolua_S,"inside",tolua_fltk_fltk_Fl_Widget_inside00);
   tolua_function(tolua_S,"is_group",tolua_fltk_fltk_Fl_Widget_is_group00);
   tolua_function(tolua_S,"is_window",tolua_fltk_fltk_Fl_Widget_is_window00);
   tolua_function(tolua_S,"label",tolua_fltk_fltk_Fl_Widget_label00);
   tolua_function(tolua_S,"set_labeltype_and_label",tolua_fltk_fltk_Fl_Widget_set_labeltype_and_label00);
   tolua_function(tolua_S,"label_shortcut",tolua_fltk_fltk_Fl_Widget_label_shortcut00);
   tolua_function(tolua_S,"labelcolor",tolua_fltk_fltk_Fl_Widget_labelcolor00);
   tolua_function(tolua_S,"labelfont",tolua_fltk_fltk_Fl_Widget_labelfont00);
   tolua_function(tolua_S,"labelsize",tolua_fltk_fltk_Fl_Widget_labelsize00);
   tolua_function(tolua_S,"labeltype",tolua_fltk_fltk_Fl_Widget_labeltype00);
   tolua_function(tolua_S,"measure_label",tolua_fltk_fltk_Fl_Widget_measure_label00);
   tolua_function(tolua_S,"output",tolua_fltk_fltk_Fl_Widget_output00);
   tolua_function(tolua_S,"parent",tolua_fltk_fltk_Fl_Widget_parent00);
   tolua_function(tolua_S,"parent_root",tolua_fltk_fltk_Fl_Widget_parent_root00);
   tolua_function(tolua_S,"position",tolua_fltk_fltk_Fl_Widget_position00);
   tolua_function(tolua_S,"redraw",tolua_fltk_fltk_Fl_Widget_redraw00);
   tolua_function(tolua_S,"redraw_label",tolua_fltk_fltk_Fl_Widget_redraw_label00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Widget_resize00);
   tolua_function(tolua_S,"selection_color",tolua_fltk_fltk_Fl_Widget_selection_color00);
   tolua_function(tolua_S,"set_changed",tolua_fltk_fltk_Fl_Widget_set_changed00);
   tolua_function(tolua_S,"set_output",tolua_fltk_fltk_Fl_Widget_set_output00);
   tolua_function(tolua_S,"set_visible",tolua_fltk_fltk_Fl_Widget_set_visible00);
   tolua_function(tolua_S,"set_visible_focus",tolua_fltk_fltk_Fl_Widget_set_visible_focus00);
   tolua_function(tolua_S,"show",tolua_fltk_fltk_Fl_Widget_show00);
   tolua_function(tolua_S,"size",tolua_fltk_fltk_Fl_Widget_size00);
   tolua_function(tolua_S,"take_focus",tolua_fltk_fltk_Fl_Widget_take_focus00);
   tolua_function(tolua_S,"takesevents",tolua_fltk_fltk_Fl_Widget_takesevents00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Widget_textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Widget_textsize00);
   tolua_function(tolua_S,"tooltip",tolua_fltk_fltk_Fl_Widget_tooltip00);
   tolua_function(tolua_S,"type",tolua_fltk_fltk_Fl_Widget_type00);
   tolua_function(tolua_S,"user_data",tolua_fltk_fltk_Fl_Widget_user_data00);
   tolua_function(tolua_S,"visible",tolua_fltk_fltk_Fl_Widget_visible00);
   tolua_function(tolua_S,"visible_focus",tolua_fltk_fltk_Fl_Widget_visible_focus00);
   tolua_function(tolua_S,"visible_r",tolua_fltk_fltk_Fl_Widget_visible_r00);
   tolua_function(tolua_S,"w",tolua_fltk_fltk_Fl_Widget_w00);
   tolua_function(tolua_S,"when",tolua_fltk_fltk_Fl_Widget_when00);
   tolua_function(tolua_S,"window",tolua_fltk_fltk_Fl_Widget_window00);
   tolua_function(tolua_S,"x",tolua_fltk_fltk_Fl_Widget_x00);
   tolua_function(tolua_S,"y",tolua_fltk_fltk_Fl_Widget_y00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Widget","Lua__Fl_Widget","Fl_Widget",tolua_collect_Lua__Fl_Widget);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Widget","Lua__Fl_Widget","Fl_Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Widget");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Widget_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Widget__as_group",tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__as_group00);
   tolua_function(tolua_S,"Fl_Widget__as_window",tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__as_window00);
   tolua_function(tolua_S,"Fl_Widget__do_callback",tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__do_callback00);
   tolua_function(tolua_S,"Fl_Widget__draw",tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__draw00);
   tolua_function(tolua_S,"Fl_Widget__handle",tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__handle00);
   tolua_function(tolua_S,"Fl_Widget__hide",tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__hide00);
   tolua_function(tolua_S,"Fl_Widget__resize",tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__resize00);
   tolua_function(tolua_S,"Fl_Widget__show",tolua_fltk_fltk_Lua__Fl_Widget_Fl_Widget__show00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Widget_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Widget_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Widget_new00_local);
   tolua_function(tolua_S,"delete",tolua_fltk_fltk_Lua__Fl_Widget_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Box","Fl_Box","Fl_Widget",tolua_collect_Fl_Box);
  #else
  tolua_cclass(tolua_S,"Fl_Box","Fl_Box","Fl_Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Box");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Box_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Box_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Box_new01_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Box_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Box","Lua__Fl_Box","Fl_Box",tolua_collect_Lua__Fl_Box);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Box","Lua__Fl_Box","Fl_Box",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Box");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Box_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Box__handle",tolua_fltk_fltk_Lua__Fl_Box_Fl_Box__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Box_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Box_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Box_new01_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Group","Fl_Group","Fl_Widget",tolua_collect_Fl_Group);
  #else
  tolua_cclass(tolua_S,"Fl_Group","Fl_Group","Fl_Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Group");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Group_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Group_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Group_new00_local);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Group_add00);
   tolua_function(tolua_S,"add_resizable",tolua_fltk_fltk_Fl_Group_add_resizable00);
   tolua_function(tolua_S,"as_group",tolua_fltk_fltk_Fl_Group_as_group00);
   tolua_function(tolua_S,"begin",tolua_fltk_fltk_Fl_Group_begin00);
   tolua_function(tolua_S,"child",tolua_fltk_fltk_Fl_Group_child00);
   tolua_function(tolua_S,"children",tolua_fltk_fltk_Fl_Group_children00);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Group_clear00);
   tolua_function(tolua_S,"clip_children",tolua_fltk_fltk_Fl_Group_clip_children00);
   tolua_function(tolua_S,"current",tolua_fltk_fltk_Fl_Group_current00);
   tolua_function(tolua_S,"endd",tolua_fltk_fltk_Fl_Group_endd00);
   tolua_function(tolua_S,"find",tolua_fltk_fltk_Fl_Group_find00);
   tolua_function(tolua_S,"focus",tolua_fltk_fltk_Fl_Group_focus00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Group_handle00);
   tolua_function(tolua_S,"user_handler",tolua_fltk_fltk_Fl_Group_user_handler00);
   tolua_function(tolua_S,"init_sizes",tolua_fltk_fltk_Fl_Group_init_sizes00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Group_insert01);
   tolua_function(tolua_S,"remove",tolua_fltk_fltk_Fl_Group_remove00);
   tolua_function(tolua_S,"resizable",tolua_fltk_fltk_Fl_Group_resizable00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Group_resize00);
   tolua_function(tolua_S,"resizefont",tolua_fltk_fltk_Fl_Group_resizefont00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Group","Lua__Fl_Group","Fl_Group",tolua_collect_Lua__Fl_Group);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Group","Lua__Fl_Group","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Group");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Group_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Group__as_group",tolua_fltk_fltk_Lua__Fl_Group_Fl_Group__as_group00);
   tolua_function(tolua_S,"Fl_Group__handle",tolua_fltk_fltk_Lua__Fl_Group_Fl_Group__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Group_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Group_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Group_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Browser_","Fl_Browser_","Fl_Group",NULL);
  tolua_beginmodule(tolua_S,"Fl_Browser_");
   tolua_function(tolua_S,"deselect",tolua_fltk_fltk_Fl_Browser__deselect00);
   tolua_function(tolua_S,"display",tolua_fltk_fltk_Fl_Browser__display00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Browser__handle00);
   tolua_function(tolua_S,"has_scrollbar",tolua_fltk_fltk_Fl_Browser__has_scrollbar00);
   tolua_function(tolua_S,"hposition",tolua_fltk_fltk_Fl_Browser__hposition00);
   tolua_function(tolua_S,"position",tolua_fltk_fltk_Fl_Browser__position00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Browser__resize00);
   tolua_function(tolua_S,"scrollbar_left",tolua_fltk_fltk_Fl_Browser__scrollbar_left00);
   tolua_function(tolua_S,"scrollbar_right",tolua_fltk_fltk_Fl_Browser__scrollbar_right00);
   tolua_function(tolua_S,"scrollbar_size",tolua_fltk_fltk_Fl_Browser__scrollbar_size00);
   tolua_function(tolua_S,"scrollbar_width",tolua_fltk_fltk_Fl_Browser__scrollbar_width00);
   tolua_function(tolua_S,"select",tolua_fltk_fltk_Fl_Browser__select00);
   tolua_function(tolua_S,"select_only",tolua_fltk_fltk_Fl_Browser__select_only00);
   tolua_function(tolua_S,"sort",tolua_fltk_fltk_Fl_Browser__sort00);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Browser__textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Browser__textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Browser__textsize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Browser","Fl_Browser","Fl_Browser_",tolua_collect_Fl_Browser);
  #else
  tolua_cclass(tolua_S,"Fl_Browser","Fl_Browser","Fl_Browser_",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Browser");
   tolua_constant(tolua_S,"TOP",Fl_Browser::TOP);
   tolua_constant(tolua_S,"BOTTOM",Fl_Browser::BOTTOM);
   tolua_constant(tolua_S,"MIDDLE",Fl_Browser::MIDDLE);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Browser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Browser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Browser_new00_local);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Browser_add00);
   tolua_function(tolua_S,"bottomline",tolua_fltk_fltk_Fl_Browser_bottomline00);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Browser_clear00);
   tolua_function(tolua_S,"column_char",tolua_fltk_fltk_Fl_Browser_column_char00);
   tolua_function(tolua_S,"get_column_widths",tolua_fltk_fltk_Fl_Browser_get_column_widths00);
   tolua_function(tolua_S,"set_column_widths",tolua_fltk_fltk_Fl_Browser_set_column_widths00);
   tolua_function(tolua_S,"data",tolua_fltk_fltk_Fl_Browser_data01);
   tolua_function(tolua_S,"display",tolua_fltk_fltk_Fl_Browser_display00);
   tolua_function(tolua_S,"displayed",tolua_fltk_fltk_Fl_Browser_displayed00);
   tolua_function(tolua_S,"format_char",tolua_fltk_fltk_Fl_Browser_format_char00);
   tolua_function(tolua_S,"line_hide",tolua_fltk_fltk_Fl_Browser_line_hide00);
   tolua_function(tolua_S,"icon",tolua_fltk_fltk_Fl_Browser_icon01);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Browser_insert00);
   tolua_function(tolua_S,"lineposition",tolua_fltk_fltk_Fl_Browser_lineposition00);
   tolua_function(tolua_S,"load",tolua_fltk_fltk_Fl_Browser_load00);
   tolua_function(tolua_S,"make_visible",tolua_fltk_fltk_Fl_Browser_make_visible00);
   tolua_function(tolua_S,"middleline",tolua_fltk_fltk_Fl_Browser_middleline00);
   tolua_function(tolua_S,"move",tolua_fltk_fltk_Fl_Browser_move00);
   tolua_function(tolua_S,"remove",tolua_fltk_fltk_Fl_Browser_remove00);
   tolua_function(tolua_S,"remove_icon",tolua_fltk_fltk_Fl_Browser_remove_icon00);
   tolua_function(tolua_S,"replace",tolua_fltk_fltk_Fl_Browser_replace00);
   tolua_function(tolua_S,"select",tolua_fltk_fltk_Fl_Browser_select00);
   tolua_function(tolua_S,"selected",tolua_fltk_fltk_Fl_Browser_selected00);
   tolua_function(tolua_S,"line_show",tolua_fltk_fltk_Fl_Browser_line_show00);
   tolua_function(tolua_S,"size",tolua_fltk_fltk_Fl_Browser_size01);
   tolua_function(tolua_S,"swap",tolua_fltk_fltk_Fl_Browser_swap00);
   tolua_function(tolua_S,"text",tolua_fltk_fltk_Fl_Browser_text01);
   tolua_function(tolua_S,"topline",tolua_fltk_fltk_Fl_Browser_topline00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Browser_value00);
   tolua_function(tolua_S,"line_visible",tolua_fltk_fltk_Fl_Browser_line_visible00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Browser_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Browser","Lua__Fl_Browser","Fl_Browser",tolua_collect_Lua__Fl_Browser);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Browser","Lua__Fl_Browser","Fl_Browser",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Browser");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Browser_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Browser__handle",tolua_fltk_fltk_Lua__Fl_Browser_Fl_Browser__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Browser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Browser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Browser_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Button","Fl_Button","Fl_Widget",tolua_collect_Fl_Button);
  #else
  tolua_cclass(tolua_S,"Fl_Button","Fl_Button","Fl_Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Button");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Button_new00_local);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Button_clear00);
   tolua_function(tolua_S,"down_box",tolua_fltk_fltk_Fl_Button_down_box00);
   tolua_function(tolua_S,"down_color",tolua_fltk_fltk_Fl_Button_down_color00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Button_handle00);
   tolua_function(tolua_S,"set",tolua_fltk_fltk_Fl_Button_set00);
   tolua_function(tolua_S,"setonly",tolua_fltk_fltk_Fl_Button_setonly00);
   tolua_function(tolua_S,"shortcut",tolua_fltk_fltk_Fl_Button_shortcut02);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Button_value00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Button","Lua__Fl_Button","Fl_Button",tolua_collect_Lua__Fl_Button);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Button","Lua__Fl_Button","Fl_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Button");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Button_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Button__draw",tolua_fltk_fltk_Lua__Fl_Button_Fl_Button__draw00);
   tolua_function(tolua_S,"Fl_Button__handle",tolua_fltk_fltk_Lua__Fl_Button_Fl_Button__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Button_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Chart","Fl_Chart","Fl_Widget",tolua_collect_Fl_Chart);
  #else
  tolua_cclass(tolua_S,"Fl_Chart","Fl_Chart","Fl_Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Chart");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Chart_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Chart_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Chart_new00_local);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Chart_add00);
   tolua_function(tolua_S,"autosize",tolua_fltk_fltk_Fl_Chart_autosize00);
   tolua_function(tolua_S,"get_bounds",tolua_fltk_fltk_Fl_Chart_get_bounds00);
   tolua_function(tolua_S,"set_bounds",tolua_fltk_fltk_Fl_Chart_set_bounds00);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Chart_clear00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Chart_insert00);
   tolua_function(tolua_S,"maxsize",tolua_fltk_fltk_Fl_Chart_maxsize00);
   tolua_function(tolua_S,"replace",tolua_fltk_fltk_Fl_Chart_replace00);
   tolua_function(tolua_S,"size",tolua_fltk_fltk_Fl_Chart_size01);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Chart_textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Chart_textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Chart_textsize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Check_Browser","Fl_Check_Browser","Fl_Browser_",tolua_collect_Fl_Check_Browser);
  #else
  tolua_cclass(tolua_S,"Fl_Check_Browser","Fl_Check_Browser","Fl_Browser_",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Check_Browser");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Check_Browser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Check_Browser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Check_Browser_new00_local);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Check_Browser_add01);
   tolua_function(tolua_S,"check_all",tolua_fltk_fltk_Fl_Check_Browser_check_all00);
   tolua_function(tolua_S,"check_none",tolua_fltk_fltk_Fl_Check_Browser_check_none00);
   tolua_function(tolua_S,"checked",tolua_fltk_fltk_Fl_Check_Browser_checked01);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Check_Browser_clear00);
   tolua_function(tolua_S,"nchecked",tolua_fltk_fltk_Fl_Check_Browser_nchecked00);
   tolua_function(tolua_S,"nitems",tolua_fltk_fltk_Fl_Check_Browser_nitems00);
   tolua_function(tolua_S,"remove",tolua_fltk_fltk_Fl_Check_Browser_remove00);
   tolua_function(tolua_S,"set_checked",tolua_fltk_fltk_Fl_Check_Browser_set_checked00);
   tolua_function(tolua_S,"text",tolua_fltk_fltk_Fl_Check_Browser_text00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Check_Browser_value00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Clock_Output","Fl_Clock_Output","Fl_Widget",tolua_collect_Fl_Clock_Output);
  #else
  tolua_cclass(tolua_S,"Fl_Clock_Output","Fl_Clock_Output","Fl_Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Clock_Output");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Clock_Output_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Clock_Output_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Clock_Output_new00_local);
   tolua_function(tolua_S,"hour",tolua_fltk_fltk_Fl_Clock_Output_hour00);
   tolua_function(tolua_S,"minute",tolua_fltk_fltk_Fl_Clock_Output_minute00);
   tolua_function(tolua_S,"second",tolua_fltk_fltk_Fl_Clock_Output_second00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Clock_Output_value00);
   tolua_function(tolua_S,"set_value_hms",tolua_fltk_fltk_Fl_Clock_Output_set_value_hms00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Clock","Fl_Clock","Fl_Clock_Output",tolua_collect_Fl_Clock);
  #else
  tolua_cclass(tolua_S,"Fl_Clock","Fl_Clock","Fl_Clock_Output",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Clock");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Clock_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Clock_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Clock_new01_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Clock_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Color_Chooser","Fl_Color_Chooser","Fl_Group",tolua_collect_Fl_Color_Chooser);
  #else
  tolua_cclass(tolua_S,"Fl_Color_Chooser","Fl_Color_Chooser","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Color_Chooser");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Color_Chooser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Color_Chooser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Color_Chooser_new00_local);
   tolua_function(tolua_S,"b",tolua_fltk_fltk_Fl_Color_Chooser_b00);
   tolua_function(tolua_S,"g",tolua_fltk_fltk_Fl_Color_Chooser_g00);
   tolua_function(tolua_S,"hsv",tolua_fltk_fltk_Fl_Color_Chooser_hsv00);
   tolua_function(tolua_S,"hsv2rgb",tolua_fltk_fltk_Fl_Color_Chooser_hsv2rgb00);
   tolua_function(tolua_S,"hue",tolua_fltk_fltk_Fl_Color_Chooser_hue00);
   tolua_function(tolua_S,"mode",tolua_fltk_fltk_Fl_Color_Chooser_mode00);
   tolua_function(tolua_S,"r",tolua_fltk_fltk_Fl_Color_Chooser_r00);
   tolua_function(tolua_S,"rgb",tolua_fltk_fltk_Fl_Color_Chooser_rgb00);
   tolua_function(tolua_S,"rgb2hsv",tolua_fltk_fltk_Fl_Color_Chooser_rgb2hsv00);
   tolua_function(tolua_S,"saturation",tolua_fltk_fltk_Fl_Color_Chooser_saturation00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Color_Chooser_value00);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"fl_color_chooser",tolua_fltk_fltk_fl_color_chooser00);
  tolua_cclass(tolua_S,"Fl_Device","Fl_Device","",NULL);
  tolua_beginmodule(tolua_S,"Fl_Device");
   tolua_function(tolua_S,"current",tolua_fltk_fltk_Fl_Device_current00);
   tolua_function(tolua_S,"display_device",tolua_fltk_fltk_Fl_Device_display_device00);
   tolua_function(tolua_S,"set_current",tolua_fltk_fltk_Fl_Device_set_current00);
   tolua_function(tolua_S,"type",tolua_fltk_fltk_Fl_Device_type00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Lua__Fl_Device","Lua__Fl_Device","Fl_Device",NULL);
  tolua_beginmodule(tolua_S,"Lua__Fl_Device");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Device_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Device__set_current",tolua_fltk_fltk_Lua__Fl_Device_Fl_Device__set_current00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Abstract_Printer","Fl_Abstract_Printer","Fl_Device",NULL);
  tolua_beginmodule(tolua_S,"Fl_Abstract_Printer");
   tolua_function(tolua_S,"end_job",tolua_fltk_fltk_Fl_Abstract_Printer_end_job00);
   tolua_function(tolua_S,"end_page",tolua_fltk_fltk_Fl_Abstract_Printer_end_page00);
   tolua_function(tolua_S,"margins",tolua_fltk_fltk_Fl_Abstract_Printer_margins00);
   tolua_function(tolua_S,"origin",tolua_fltk_fltk_Fl_Abstract_Printer_origin00);
   tolua_function(tolua_S,"print_widget",tolua_fltk_fltk_Fl_Abstract_Printer_print_widget00);
   tolua_function(tolua_S,"print_window_part",tolua_fltk_fltk_Fl_Abstract_Printer_print_window_part00);
   tolua_function(tolua_S,"printable_rect",tolua_fltk_fltk_Fl_Abstract_Printer_printable_rect00);
   tolua_function(tolua_S,"rotate",tolua_fltk_fltk_Fl_Abstract_Printer_rotate00);
   tolua_function(tolua_S,"scale",tolua_fltk_fltk_Fl_Abstract_Printer_scale00);
   tolua_function(tolua_S,"set_current",tolua_fltk_fltk_Fl_Abstract_Printer_set_current00);
   tolua_function(tolua_S,"start_job",tolua_fltk_fltk_Fl_Abstract_Printer_start_job00);
   tolua_function(tolua_S,"start_page",tolua_fltk_fltk_Fl_Abstract_Printer_start_page00);
   tolua_function(tolua_S,"translate",tolua_fltk_fltk_Fl_Abstract_Printer_translate00);
   tolua_function(tolua_S,"untranslate",tolua_fltk_fltk_Fl_Abstract_Printer_untranslate00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Lua__Fl_Abstract_Printer","Lua__Fl_Abstract_Printer","Fl_Abstract_Printer",NULL);
  tolua_beginmodule(tolua_S,"Lua__Fl_Abstract_Printer");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Abstract_Printer__end_job",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__end_job00);
   tolua_function(tolua_S,"Fl_Abstract_Printer__end_page",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__end_page00);
   tolua_function(tolua_S,"Fl_Abstract_Printer__margins",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__margins00);
   tolua_function(tolua_S,"Fl_Abstract_Printer__origin",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__origin00);
   tolua_function(tolua_S,"Fl_Abstract_Printer__printable_rect",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__printable_rect00);
   tolua_function(tolua_S,"Fl_Abstract_Printer__rotate",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__rotate00);
   tolua_function(tolua_S,"Fl_Abstract_Printer__scale",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__scale00);
   tolua_function(tolua_S,"Fl_Abstract_Printer__start_job",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__start_job00);
   tolua_function(tolua_S,"Fl_Abstract_Printer__start_page",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__start_page00);
   tolua_function(tolua_S,"Fl_Abstract_Printer__translate",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__translate00);
   tolua_function(tolua_S,"Fl_Abstract_Printer__untranslate",tolua_fltk_fltk_Lua__Fl_Abstract_Printer_Fl_Abstract_Printer__untranslate00);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"Fl_End",tolua_fltk_fltk_Fl_End00);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_File_Browser","Fl_File_Browser","Fl_Browser",tolua_collect_Fl_File_Browser);
  #else
  tolua_cclass(tolua_S,"Fl_File_Browser","Fl_File_Browser","Fl_Browser",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_File_Browser");
   tolua_constant(tolua_S,"FILES",Fl_File_Browser::FILES);
   tolua_constant(tolua_S,"DIRECTORIES",Fl_File_Browser::DIRECTORIES);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_File_Browser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_File_Browser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_File_Browser_new00_local);
   tolua_function(tolua_S,"filetype",tolua_fltk_fltk_Fl_File_Browser_filetype00);
   tolua_function(tolua_S,"filter",tolua_fltk_fltk_Fl_File_Browser_filter00);
   tolua_function(tolua_S,"iconsize",tolua_fltk_fltk_Fl_File_Browser_iconsize00);
   tolua_function(tolua_S,"load",tolua_fltk_fltk_Fl_File_Browser_load00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_File_Browser_textsize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_File_Chooser","Fl_File_Chooser","",tolua_collect_Fl_File_Chooser);
  #else
  tolua_cclass(tolua_S,"Fl_File_Chooser","Fl_File_Chooser","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_File_Chooser");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_File_Chooser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_File_Chooser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_File_Chooser_new00_local);
   tolua_function(tolua_S,"add_extra",tolua_fltk_fltk_Fl_File_Chooser_add_extra00);
   tolua_function(tolua_S,"browser",tolua_fltk_fltk_Fl_File_Chooser_browser00);
   tolua_function(tolua_S,"color",tolua_fltk_fltk_Fl_File_Chooser_color00);
   tolua_function(tolua_S,"count",tolua_fltk_fltk_Fl_File_Chooser_count00);
   tolua_function(tolua_S,"directory",tolua_fltk_fltk_Fl_File_Chooser_directory00);
   tolua_function(tolua_S,"filter",tolua_fltk_fltk_Fl_File_Chooser_filter00);
   tolua_function(tolua_S,"filter_value",tolua_fltk_fltk_Fl_File_Chooser_filter_value00);
   tolua_function(tolua_S,"hide",tolua_fltk_fltk_Fl_File_Chooser_hide00);
   tolua_function(tolua_S,"iconsize",tolua_fltk_fltk_Fl_File_Chooser_iconsize00);
   tolua_function(tolua_S,"label",tolua_fltk_fltk_Fl_File_Chooser_label00);
   tolua_function(tolua_S,"ok_label",tolua_fltk_fltk_Fl_File_Chooser_ok_label00);
   tolua_function(tolua_S,"preview",tolua_fltk_fltk_Fl_File_Chooser_preview00);
   tolua_function(tolua_S,"rescan",tolua_fltk_fltk_Fl_File_Chooser_rescan00);
   tolua_function(tolua_S,"rescan_keep_filename",tolua_fltk_fltk_Fl_File_Chooser_rescan_keep_filename00);
   tolua_function(tolua_S,"show",tolua_fltk_fltk_Fl_File_Chooser_show00);
   tolua_function(tolua_S,"shown",tolua_fltk_fltk_Fl_File_Chooser_shown00);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_File_Chooser_textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_File_Chooser_textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_File_Chooser_textsize00);
   tolua_function(tolua_S,"type",tolua_fltk_fltk_Fl_File_Chooser_type00);
   tolua_function(tolua_S,"user_data",tolua_fltk_fltk_Fl_File_Chooser_user_data00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_File_Chooser_value01);
   tolua_function(tolua_S,"visible",tolua_fltk_fltk_Fl_File_Chooser_visible00);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"fl_dir_chooser",tolua_fltk_fltk_fl_dir_chooser00);
  tolua_function(tolua_S,"fl_file_chooser",tolua_fltk_fltk_fl_file_chooser00);
  tolua_function(tolua_S,"fl_file_chooser_ok_label",tolua_fltk_fltk_fl_file_chooser_ok_label00);
  tolua_function(tolua_S,"fl_open_uri",tolua_fltk_fltk_fl_open_uri00);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_File_Icon","Fl_File_Icon","",tolua_collect_Fl_File_Icon);
  #else
  tolua_cclass(tolua_S,"Fl_File_Icon","Fl_File_Icon","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_File_Icon");
   tolua_constant(tolua_S,"END",Fl_File_Icon::END);
   tolua_constant(tolua_S,"COLOR",Fl_File_Icon::COLOR);
   tolua_constant(tolua_S,"LINE",Fl_File_Icon::LINE);
   tolua_constant(tolua_S,"CLOSEDLINE",Fl_File_Icon::CLOSEDLINE);
   tolua_constant(tolua_S,"POLYGON",Fl_File_Icon::POLYGON);
   tolua_constant(tolua_S,"OUTLINEPOLYGON",Fl_File_Icon::OUTLINEPOLYGON);
   tolua_constant(tolua_S,"VERTEX",Fl_File_Icon::VERTEX);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_File_Icon_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_File_Icon_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_File_Icon_new00_local);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_File_Icon_add00);
   tolua_function(tolua_S,"add_color",tolua_fltk_fltk_Fl_File_Icon_add_color00);
   tolua_function(tolua_S,"add_vertex",tolua_fltk_fltk_Fl_File_Icon_add_vertex00);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_File_Icon_clear00);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_File_Icon_draw00);
   tolua_function(tolua_S,"find",tolua_fltk_fltk_Fl_File_Icon_find00);
   tolua_function(tolua_S,"first",tolua_fltk_fltk_Fl_File_Icon_first00);
   tolua_function(tolua_S,"label",tolua_fltk_fltk_Fl_File_Icon_label00);
   tolua_function(tolua_S,"labeltype",tolua_fltk_fltk_Fl_File_Icon_labeltype00);
   tolua_function(tolua_S,"load",tolua_fltk_fltk_Fl_File_Icon_load00);
   tolua_function(tolua_S,"load_fti",tolua_fltk_fltk_Fl_File_Icon_load_fti00);
   tolua_function(tolua_S,"load_image",tolua_fltk_fltk_Fl_File_Icon_load_image00);
   tolua_function(tolua_S,"load_system_icons",tolua_fltk_fltk_Fl_File_Icon_load_system_icons00);
   tolua_function(tolua_S,"next",tolua_fltk_fltk_Fl_File_Icon_next00);
   tolua_function(tolua_S,"pattern",tolua_fltk_fltk_Fl_File_Icon_pattern00);
   tolua_function(tolua_S,"size",tolua_fltk_fltk_Fl_File_Icon_size00);
   tolua_function(tolua_S,"type",tolua_fltk_fltk_Fl_File_Icon_type00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_File_Icon_value00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Help_Dialog","Fl_Help_Dialog","",tolua_collect_Fl_Help_Dialog);
  #else
  tolua_cclass(tolua_S,"Fl_Help_Dialog","Fl_Help_Dialog","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Help_Dialog");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Help_Dialog_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Help_Dialog_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Help_Dialog_new00_local);
   tolua_function(tolua_S,"h",tolua_fltk_fltk_Fl_Help_Dialog_h00);
   tolua_function(tolua_S,"hide",tolua_fltk_fltk_Fl_Help_Dialog_hide00);
   tolua_function(tolua_S,"load",tolua_fltk_fltk_Fl_Help_Dialog_load00);
   tolua_function(tolua_S,"position",tolua_fltk_fltk_Fl_Help_Dialog_position00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Help_Dialog_resize00);
   tolua_function(tolua_S,"show",tolua_fltk_fltk_Fl_Help_Dialog_show01);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Help_Dialog_textsize00);
   tolua_function(tolua_S,"topline",tolua_fltk_fltk_Fl_Help_Dialog_topline01);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Help_Dialog_value00);
   tolua_function(tolua_S,"visible",tolua_fltk_fltk_Fl_Help_Dialog_visible00);
   tolua_function(tolua_S,"w",tolua_fltk_fltk_Fl_Help_Dialog_w00);
   tolua_function(tolua_S,"x",tolua_fltk_fltk_Fl_Help_Dialog_x00);
   tolua_function(tolua_S,"y",tolua_fltk_fltk_Fl_Help_Dialog_y00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Help_View","Fl_Help_View","Fl_Group",tolua_collect_Fl_Help_View);
  #else
  tolua_cclass(tolua_S,"Fl_Help_View","Fl_Help_View","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Help_View");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Help_View_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Help_View_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Help_View_new00_local);
   tolua_function(tolua_S,"delete",tolua_fltk_fltk_Fl_Help_View_delete00);
   tolua_function(tolua_S,"clear_selection",tolua_fltk_fltk_Fl_Help_View_clear_selection00);
   tolua_function(tolua_S,"directory",tolua_fltk_fltk_Fl_Help_View_directory00);
   tolua_function(tolua_S,"filename",tolua_fltk_fltk_Fl_Help_View_filename00);
   tolua_function(tolua_S,"find",tolua_fltk_fltk_Fl_Help_View_find00);
   tolua_function(tolua_S,"leftline",tolua_fltk_fltk_Fl_Help_View_leftline00);
   tolua_function(tolua_S,"link",tolua_fltk_fltk_Fl_Help_View_link00);
   tolua_function(tolua_S,"load",tolua_fltk_fltk_Fl_Help_View_load00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Help_View_resize00);
   tolua_function(tolua_S,"scrollbar_size",tolua_fltk_fltk_Fl_Help_View_scrollbar_size00);
   tolua_function(tolua_S,"select_all",tolua_fltk_fltk_Fl_Help_View_select_all00);
   tolua_function(tolua_S,"size",tolua_fltk_fltk_Fl_Help_View_size01);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Help_View_textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Help_View_textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Help_View_textsize00);
   tolua_function(tolua_S,"title",tolua_fltk_fltk_Fl_Help_View_title00);
   tolua_function(tolua_S,"topline_str",tolua_fltk_fltk_Fl_Help_View_topline_str00);
   tolua_function(tolua_S,"topline",tolua_fltk_fltk_Fl_Help_View_topline00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Help_View_value00);
   tolua_function(tolua_S,"font_increment",tolua_fltk_fltk_Fl_Help_View_font_increment00);
   tolua_function(tolua_S,"td_top_gap",tolua_fltk_fltk_Fl_Help_View_td_top_gap00);
   tolua_function(tolua_S,"td_bottom_gap",tolua_fltk_fltk_Fl_Help_View_td_bottom_gap00);
   tolua_function(tolua_S,"tr_gap",tolua_fltk_fltk_Fl_Help_View_tr_gap00);
   tolua_function(tolua_S,"line31",tolua_fltk_fltk_Fl_Help_View_line3100);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Hold_Browser","Fl_Hold_Browser","Fl_Browser",tolua_collect_Fl_Hold_Browser);
  #else
  tolua_cclass(tolua_S,"Fl_Hold_Browser","Fl_Hold_Browser","Fl_Browser",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Hold_Browser");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Hold_Browser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Hold_Browser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Hold_Browser_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Hold_Browser_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Hold_Browser","Lua__Fl_Hold_Browser","Fl_Hold_Browser",tolua_collect_Lua__Fl_Hold_Browser);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Hold_Browser","Lua__Fl_Hold_Browser","Fl_Hold_Browser",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Hold_Browser");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Hold_Browser_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Hold_Browser__handle",tolua_fltk_fltk_Lua__Fl_Hold_Browser_Fl_Hold_Browser__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Hold_Browser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Hold_Browser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Hold_Browser_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Image","Fl_Image","",tolua_collect_Fl_Image);
  #else
  tolua_cclass(tolua_S,"Fl_Image","Fl_Image","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Image");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Image_new00_local);
   tolua_function(tolua_S,"color_average",tolua_fltk_fltk_Fl_Image_color_average00);
   tolua_function(tolua_S,"copy",tolua_fltk_fltk_Fl_Image_copy01);
   tolua_function(tolua_S,"count",tolua_fltk_fltk_Fl_Image_count00);
   tolua_function(tolua_S,"d",tolua_fltk_fltk_Fl_Image_d00);
   tolua_function(tolua_S,"desaturate",tolua_fltk_fltk_Fl_Image_desaturate00);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_Image_draw01);
   tolua_function(tolua_S,"h",tolua_fltk_fltk_Fl_Image_h00);
   tolua_function(tolua_S,"inactive",tolua_fltk_fltk_Fl_Image_inactive00);
   tolua_function(tolua_S,"label",tolua_fltk_fltk_Fl_Image_label01);
   tolua_function(tolua_S,"ld",tolua_fltk_fltk_Fl_Image_ld00);
   tolua_function(tolua_S,"uncache",tolua_fltk_fltk_Fl_Image_uncache00);
   tolua_function(tolua_S,"w",tolua_fltk_fltk_Fl_Image_w00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Image","Lua__Fl_Image","Fl_Image",tolua_collect_Lua__Fl_Image);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Image","Lua__Fl_Image","Fl_Image",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Image");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Image_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Image__color_average",tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__color_average00);
   tolua_function(tolua_S,"Fl_Image__copy",tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__copy00);
   tolua_function(tolua_S,"Fl_Image__desaturate",tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__desaturate00);
   tolua_function(tolua_S,"Fl_Image__draw",tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__draw00);
   tolua_function(tolua_S,"Fl_Image__label",tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__label01);
   tolua_function(tolua_S,"Fl_Image__uncache",tolua_fltk_fltk_Lua__Fl_Image_Fl_Image__uncache00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Image_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Pixmap","Fl_Pixmap","Fl_Image",NULL);
  tolua_beginmodule(tolua_S,"Fl_Pixmap");
   tolua_function(tolua_S,"NewFromStrTable",tolua_fltk_fltk_Fl_Pixmap_NewFromStrTable00);
   tolua_function(tolua_S,"color_average",tolua_fltk_fltk_Fl_Pixmap_color_average00);
   tolua_function(tolua_S,"copy",tolua_fltk_fltk_Fl_Pixmap_copy01);
   tolua_function(tolua_S,"desaturate",tolua_fltk_fltk_Fl_Pixmap_desaturate00);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_Pixmap_draw01);
   tolua_function(tolua_S,"label",tolua_fltk_fltk_Fl_Pixmap_label01);
   tolua_function(tolua_S,"uncache",tolua_fltk_fltk_Fl_Pixmap_uncache00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Lua__Fl_Pixmap","Lua__Fl_Pixmap","Fl_Pixmap",NULL);
  tolua_beginmodule(tolua_S,"Lua__Fl_Pixmap");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Pixmap_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Pixmap__color_average",tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__color_average00);
   tolua_function(tolua_S,"Fl_Pixmap__copy",tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__copy00);
   tolua_function(tolua_S,"Fl_Pixmap__desaturate",tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__desaturate00);
   tolua_function(tolua_S,"Fl_Pixmap__draw",tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__draw00);
   tolua_function(tolua_S,"Fl_Pixmap__label",tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__label01);
   tolua_function(tolua_S,"Fl_Pixmap__uncache",tolua_fltk_fltk_Lua__Fl_Pixmap_Fl_Pixmap__uncache00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_GIF_Image","Fl_GIF_Image","Fl_Pixmap",tolua_collect_Fl_GIF_Image);
  #else
  tolua_cclass(tolua_S,"Fl_GIF_Image","Fl_GIF_Image","Fl_Pixmap",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_GIF_Image");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_GIF_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_GIF_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_GIF_Image_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Input_","Fl_Input_","Fl_Widget",NULL);
  tolua_beginmodule(tolua_S,"Fl_Input_");
   tolua_function(tolua_S,"copy",tolua_fltk_fltk_Fl_Input__copy00);
   tolua_function(tolua_S,"copy_cuts",tolua_fltk_fltk_Fl_Input__copy_cuts00);
   tolua_function(tolua_S,"cursor_color",tolua_fltk_fltk_Fl_Input__cursor_color00);
   tolua_function(tolua_S,"cut",tolua_fltk_fltk_Fl_Input__cut02);
   tolua_function(tolua_S,"index",tolua_fltk_fltk_Fl_Input__index00);
   tolua_function(tolua_S,"input_type",tolua_fltk_fltk_Fl_Input__input_type00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Input__insert00);
   tolua_function(tolua_S,"mark",tolua_fltk_fltk_Fl_Input__mark00);
   tolua_function(tolua_S,"maximum_size",tolua_fltk_fltk_Fl_Input__maximum_size00);
   tolua_function(tolua_S,"position",tolua_fltk_fltk_Fl_Input__position02);
   tolua_function(tolua_S,"readonly",tolua_fltk_fltk_Fl_Input__readonly00);
   tolua_function(tolua_S,"replace",tolua_fltk_fltk_Fl_Input__replace00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Input__resize00);
   tolua_function(tolua_S,"shortcut",tolua_fltk_fltk_Fl_Input__shortcut00);
   tolua_function(tolua_S,"size",tolua_fltk_fltk_Fl_Input__size01);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Input__textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Input__textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Input__textsize00);
   tolua_function(tolua_S,"undo",tolua_fltk_fltk_Fl_Input__undo00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Input__value00);
   tolua_function(tolua_S,"value_str_int",tolua_fltk_fltk_Fl_Input__value_str_int00);
   tolua_function(tolua_S,"wrap",tolua_fltk_fltk_Fl_Input__wrap00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Input","Fl_Input","Fl_Input_",tolua_collect_Fl_Input);
  #else
  tolua_cclass(tolua_S,"Fl_Input","Fl_Input","Fl_Input_",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Input");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Input_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Input_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Input","Lua__Fl_Input","Fl_Input",tolua_collect_Lua__Fl_Input);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Input","Lua__Fl_Input","Fl_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Input");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Input_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Input__handle",tolua_fltk_fltk_Lua__Fl_Input_Fl_Input__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Input_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_File_Input","Fl_File_Input","Fl_Input",tolua_collect_Fl_File_Input);
  #else
  tolua_cclass(tolua_S,"Fl_File_Input","Fl_File_Input","Fl_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_File_Input");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_File_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_File_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_File_Input_new00_local);
   tolua_function(tolua_S,"down_box",tolua_fltk_fltk_Fl_File_Input_down_box01);
   tolua_function(tolua_S,"errorcolor",tolua_fltk_fltk_Fl_File_Input_errorcolor01);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_File_Input_handle00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_File_Input_value02);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_File_Input","Lua__Fl_File_Input","Fl_File_Input",tolua_collect_Lua__Fl_File_Input);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_File_Input","Lua__Fl_File_Input","Fl_File_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_File_Input");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_File_Input_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_File_Input__handle",tolua_fltk_fltk_Lua__Fl_File_Input_Fl_File_Input__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_File_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_File_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_File_Input_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Float_Input","Fl_Float_Input","Fl_Input",tolua_collect_Fl_Float_Input);
  #else
  tolua_cclass(tolua_S,"Fl_Float_Input","Fl_Float_Input","Fl_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Float_Input");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Float_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Float_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Float_Input_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Float_Input_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Float_Input","Lua__Fl_Float_Input","Fl_Float_Input",tolua_collect_Lua__Fl_Float_Input);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Float_Input","Lua__Fl_Float_Input","Fl_Float_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Float_Input");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Float_Input_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Float_Input__handle",tolua_fltk_fltk_Lua__Fl_Float_Input_Fl_Float_Input__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Float_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Float_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Float_Input_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Input_Choice","Fl_Input_Choice","Fl_Group",tolua_collect_Fl_Input_Choice);
  #else
  tolua_cclass(tolua_S,"Fl_Input_Choice","Fl_Input_Choice","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Input_Choice");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Input_Choice_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Input_Choice_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Input_Choice_new00_local);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Input_Choice_add00);
   tolua_function(tolua_S,"changed",tolua_fltk_fltk_Fl_Input_Choice_changed00);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Input_Choice_clear00);
   tolua_function(tolua_S,"clear_changed",tolua_fltk_fltk_Fl_Input_Choice_clear_changed00);
   tolua_function(tolua_S,"down_box",tolua_fltk_fltk_Fl_Input_Choice_down_box00);
   tolua_function(tolua_S,"input",tolua_fltk_fltk_Fl_Input_Choice_input00);
   tolua_function(tolua_S,"menu",tolua_fltk_fltk_Fl_Input_Choice_menu01);
   tolua_function(tolua_S,"menubutton",tolua_fltk_fltk_Fl_Input_Choice_menubutton00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Input_Choice_resize00);
   tolua_function(tolua_S,"set_changed",tolua_fltk_fltk_Fl_Input_Choice_set_changed00);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Input_Choice_textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Input_Choice_textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Input_Choice_textsize00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Input_Choice_value00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Int_Input","Fl_Int_Input","Fl_Input",tolua_collect_Fl_Int_Input);
  #else
  tolua_cclass(tolua_S,"Fl_Int_Input","Fl_Int_Input","Fl_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Int_Input");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Int_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Int_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Int_Input_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Int_Input_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Int_Input","Lua__Fl_Int_Input","Fl_Int_Input",tolua_collect_Lua__Fl_Int_Input);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Int_Input","Lua__Fl_Int_Input","Fl_Int_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Int_Input");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Int_Input_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Int_Input__handle",tolua_fltk_fltk_Lua__Fl_Int_Input_Fl_Int_Input__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Int_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Int_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Int_Input_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Label","Fl_Label","",NULL);
  tolua_beginmodule(tolua_S,"Fl_Label");
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_Label_draw00);
   tolua_function(tolua_S,"measure",tolua_fltk_fltk_Fl_Label_measure00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Light_Button","Fl_Light_Button","Fl_Button",tolua_collect_Fl_Light_Button);
  #else
  tolua_cclass(tolua_S,"Fl_Light_Button","Fl_Light_Button","Fl_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Light_Button");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Light_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Light_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Light_Button_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Light_Button_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Light_Button","Lua__Fl_Light_Button","Fl_Light_Button",tolua_collect_Lua__Fl_Light_Button);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Light_Button","Lua__Fl_Light_Button","Fl_Light_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Light_Button");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Light_Button_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Light_Button__handle",tolua_fltk_fltk_Lua__Fl_Light_Button_Fl_Light_Button__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Light_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Light_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Light_Button_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Check_Button","Fl_Check_Button","Fl_Light_Button",tolua_collect_Fl_Check_Button);
  #else
  tolua_cclass(tolua_S,"Fl_Check_Button","Fl_Check_Button","Fl_Light_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Check_Button");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Check_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Check_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Check_Button_new00_local);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"FL_MENU_INACTIVE",FL_MENU_INACTIVE);
  tolua_constant(tolua_S,"FL_MENU_TOGGLE",FL_MENU_TOGGLE);
  tolua_constant(tolua_S,"FL_MENU_VALUE",FL_MENU_VALUE);
  tolua_constant(tolua_S,"FL_MENU_RADIO",FL_MENU_RADIO);
  tolua_constant(tolua_S,"FL_MENU_INVISIBLE",FL_MENU_INVISIBLE);
  tolua_constant(tolua_S,"FL_SUBMENU_POINTER",FL_SUBMENU_POINTER);
  tolua_constant(tolua_S,"FL_SUBMENU",FL_SUBMENU);
  tolua_constant(tolua_S,"FL_MENU_DIVIDER",FL_MENU_DIVIDER);
  tolua_constant(tolua_S,"FL_MENU_HORIZONTAL",FL_MENU_HORIZONTAL);
  tolua_cclass(tolua_S,"Fl_Menu_Item","Fl_Menu_Item","",NULL);
  tolua_beginmodule(tolua_S,"Fl_Menu_Item");
   tolua_function(tolua_S,"activate",tolua_fltk_fltk_Fl_Menu_Item_activate00);
   tolua_function(tolua_S,"active",tolua_fltk_fltk_Fl_Menu_Item_active00);
   tolua_function(tolua_S,"activevisible",tolua_fltk_fltk_Fl_Menu_Item_activevisible00);
   tolua_function(tolua_S,"menu_at",tolua_fltk_fltk_Fl_Menu_Item_menu_at00);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Menu_Item_add00);
   tolua_function(tolua_S,"argument",tolua_fltk_fltk_Fl_Menu_Item_argument00);
   tolua_function(tolua_S,"callback",tolua_fltk_fltk_Fl_Menu_Item_callback00);
   tolua_function(tolua_S,"check",tolua_fltk_fltk_Fl_Menu_Item_check00);
   tolua_function(tolua_S,"checkbox",tolua_fltk_fltk_Fl_Menu_Item_checkbox00);
   tolua_function(tolua_S,"checked",tolua_fltk_fltk_Fl_Menu_Item_checked00);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Menu_Item_clear00);
   tolua_function(tolua_S,"deactivate",tolua_fltk_fltk_Fl_Menu_Item_deactivate00);
   tolua_function(tolua_S,"do_callback",tolua_fltk_fltk_Fl_Menu_Item_do_callback01);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_Menu_Item_draw00);
   tolua_function(tolua_S,"find_shortcut",tolua_fltk_fltk_Fl_Menu_Item_find_shortcut00);
   tolua_function(tolua_S,"first",tolua_fltk_fltk_Fl_Menu_Item_first00);
   tolua_function(tolua_S,"hide",tolua_fltk_fltk_Fl_Menu_Item_hide00);
   tolua_function(tolua_S,"image",tolua_fltk_fltk_Fl_Menu_Item_image00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Menu_Item_insert00);
   tolua_function(tolua_S,"label",tolua_fltk_fltk_Fl_Menu_Item_label02);
   tolua_function(tolua_S,"labeltype",tolua_fltk_fltk_Fl_Menu_Item_labeltype01);
   tolua_function(tolua_S,"measure",tolua_fltk_fltk_Fl_Menu_Item_measure00);
   tolua_function(tolua_S,"next",tolua_fltk_fltk_Fl_Menu_Item_next00);
   tolua_function(tolua_S,"popup",tolua_fltk_fltk_Fl_Menu_Item_popup00);
   tolua_function(tolua_S,"pulldown",tolua_fltk_fltk_Fl_Menu_Item_pulldown00);
   tolua_function(tolua_S,"radio",tolua_fltk_fltk_Fl_Menu_Item_radio00);
   tolua_function(tolua_S,"set",tolua_fltk_fltk_Fl_Menu_Item_set00);
   tolua_function(tolua_S,"setonly",tolua_fltk_fltk_Fl_Menu_Item_setonly00);
   tolua_function(tolua_S,"shortcut",tolua_fltk_fltk_Fl_Menu_Item_shortcut00);
   tolua_function(tolua_S,"show",tolua_fltk_fltk_Fl_Menu_Item_show00);
   tolua_function(tolua_S,"size",tolua_fltk_fltk_Fl_Menu_Item_size00);
   tolua_function(tolua_S,"submenu",tolua_fltk_fltk_Fl_Menu_Item_submenu00);
   tolua_function(tolua_S,"test_shortcut",tolua_fltk_fltk_Fl_Menu_Item_test_shortcut00);
   tolua_function(tolua_S,"uncheck",tolua_fltk_fltk_Fl_Menu_Item_uncheck00);
   tolua_function(tolua_S,"user_data",tolua_fltk_fltk_Fl_Menu_Item_user_data00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Menu_Item_value00);
   tolua_function(tolua_S,"visible",tolua_fltk_fltk_Fl_Menu_Item_visible00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Menu_","Fl_Menu_","Fl_Widget",NULL);
  tolua_beginmodule(tolua_S,"Fl_Menu_");
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Menu__add01);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Menu__clear00);
   tolua_function(tolua_S,"clear_submenu",tolua_fltk_fltk_Fl_Menu__clear_submenu00);
   tolua_function(tolua_S,"copy",tolua_fltk_fltk_Fl_Menu__copy00);
   tolua_function(tolua_S,"down_box",tolua_fltk_fltk_Fl_Menu__down_box00);
   tolua_function(tolua_S,"down_color",tolua_fltk_fltk_Fl_Menu__down_color00);
   tolua_function(tolua_S,"find_index",tolua_fltk_fltk_Fl_Menu__find_index02);
   tolua_function(tolua_S,"find_item",tolua_fltk_fltk_Fl_Menu__find_item01);
   tolua_function(tolua_S,"global",tolua_fltk_fltk_Fl_Menu__global00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Menu__insert00);
   tolua_function(tolua_S,"item_pathname",tolua_fltk_fltk_Fl_Menu__item_pathname00);
   tolua_function(tolua_S,"menu",tolua_fltk_fltk_Fl_Menu__menu00);
   tolua_function(tolua_S,"menu_at",tolua_fltk_fltk_Fl_Menu__menu_at00);
   tolua_function(tolua_S,"menu",tolua_fltk_fltk_Fl_Menu__menu01);
   tolua_function(tolua_S,"mode",tolua_fltk_fltk_Fl_Menu__mode01);
   tolua_function(tolua_S,"mvalue",tolua_fltk_fltk_Fl_Menu__mvalue00);
   tolua_function(tolua_S,"picked",tolua_fltk_fltk_Fl_Menu__picked00);
   tolua_function(tolua_S,"remove",tolua_fltk_fltk_Fl_Menu__remove00);
   tolua_function(tolua_S,"replace",tolua_fltk_fltk_Fl_Menu__replace00);
   tolua_function(tolua_S,"shortcut",tolua_fltk_fltk_Fl_Menu__shortcut00);
   tolua_function(tolua_S,"size",tolua_fltk_fltk_Fl_Menu__size01);
   tolua_function(tolua_S,"test_shortcut",tolua_fltk_fltk_Fl_Menu__test_shortcut00);
   tolua_function(tolua_S,"text",tolua_fltk_fltk_Fl_Menu__text01);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Menu__textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Menu__textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Menu__textsize00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Menu__value02);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Choice","Fl_Choice","Fl_Menu_",tolua_collect_Fl_Choice);
  #else
  tolua_cclass(tolua_S,"Fl_Choice","Fl_Choice","Fl_Menu_",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Choice");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Choice_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Choice_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Choice_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Choice_handle00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Choice_value02);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Choice","Lua__Fl_Choice","Fl_Choice",tolua_collect_Lua__Fl_Choice);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Choice","Lua__Fl_Choice","Fl_Choice",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Choice");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Choice_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Choice__handle",tolua_fltk_fltk_Lua__Fl_Choice_Fl_Choice__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Choice_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Choice_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Choice_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Menu_Bar","Fl_Menu_Bar","Fl_Menu_",tolua_collect_Fl_Menu_Bar);
  #else
  tolua_cclass(tolua_S,"Fl_Menu_Bar","Fl_Menu_Bar","Fl_Menu_",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Menu_Bar");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Menu_Bar_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Menu_Bar_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Menu_Bar_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Menu_Bar_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Menu_Bar","Lua__Fl_Menu_Bar","Fl_Menu_Bar",tolua_collect_Lua__Fl_Menu_Bar);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Menu_Bar","Lua__Fl_Menu_Bar","Fl_Menu_Bar",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Menu_Bar");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Menu_Bar_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Menu_Bar__handle",tolua_fltk_fltk_Lua__Fl_Menu_Bar_Fl_Menu_Bar__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Menu_Bar_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Menu_Bar_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Menu_Bar_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Menu_Button","Fl_Menu_Button","Fl_Menu_",tolua_collect_Fl_Menu_Button);
  #else
  tolua_cclass(tolua_S,"Fl_Menu_Button","Fl_Menu_Button","Fl_Menu_",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Menu_Button");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Menu_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Menu_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Menu_Button_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Menu_Button_handle00);
   tolua_function(tolua_S,"popup",tolua_fltk_fltk_Fl_Menu_Button_popup00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Menu_Button","Lua__Fl_Menu_Button","Fl_Menu_Button",tolua_collect_Lua__Fl_Menu_Button);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Menu_Button","Lua__Fl_Menu_Button","Fl_Menu_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Menu_Button");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Menu_Button_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Menu_Button__handle",tolua_fltk_fltk_Lua__Fl_Menu_Button_Fl_Menu_Button__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Menu_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Menu_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Menu_Button_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Multi_Browser","Fl_Multi_Browser","Fl_Browser",tolua_collect_Fl_Multi_Browser);
  #else
  tolua_cclass(tolua_S,"Fl_Multi_Browser","Fl_Multi_Browser","Fl_Browser",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Multi_Browser");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Multi_Browser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Multi_Browser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Multi_Browser_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Multi_Browser_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Multi_Browser","Lua__Fl_Multi_Browser","Fl_Multi_Browser",tolua_collect_Lua__Fl_Multi_Browser);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Multi_Browser","Lua__Fl_Multi_Browser","Fl_Multi_Browser",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Multi_Browser");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Multi_Browser_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Multi_Browser__handle",tolua_fltk_fltk_Lua__Fl_Multi_Browser_Fl_Multi_Browser__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Multi_Browser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Multi_Browser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Multi_Browser_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Multi_Label","Fl_Multi_Label","",NULL);
  tolua_beginmodule(tolua_S,"Fl_Multi_Label");
   tolua_function(tolua_S,"label",tolua_fltk_fltk_Fl_Multi_Label_label01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Multiline_Input","Fl_Multiline_Input","Fl_Input",tolua_collect_Fl_Multiline_Input);
  #else
  tolua_cclass(tolua_S,"Fl_Multiline_Input","Fl_Multiline_Input","Fl_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Multiline_Input");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Multiline_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Multiline_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Multiline_Input_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Multiline_Input_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Multiline_Input","Lua__Fl_Multiline_Input","Fl_Multiline_Input",tolua_collect_Lua__Fl_Multiline_Input);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Multiline_Input","Lua__Fl_Multiline_Input","Fl_Multiline_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Multiline_Input");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Multiline_Input_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Multiline_Input__handle",tolua_fltk_fltk_Lua__Fl_Multiline_Input_Fl_Multiline_Input__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Multiline_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Multiline_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Multiline_Input_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Output","Fl_Output","Fl_Input",tolua_collect_Fl_Output);
  #else
  tolua_cclass(tolua_S,"Fl_Output","Fl_Output","Fl_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Output");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Output_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Output_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Output_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Multiline_Output","Fl_Multiline_Output","Fl_Output",tolua_collect_Fl_Multiline_Output);
  #else
  tolua_cclass(tolua_S,"Fl_Multiline_Output","Fl_Multiline_Output","Fl_Output",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Multiline_Output");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Multiline_Output_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Multiline_Output_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Multiline_Output_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_PSfile_Device","Fl_PSfile_Device","Fl_Abstract_Printer",tolua_collect_Fl_PSfile_Device);
  #else
  tolua_cclass(tolua_S,"Fl_PSfile_Device","Fl_PSfile_Device","Fl_Abstract_Printer",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_PSfile_Device");
   tolua_constant(tolua_S,"PORTRAIT",Fl_PSfile_Device::PORTRAIT);
   tolua_constant(tolua_S,"LANDSCAPE",Fl_PSfile_Device::LANDSCAPE);
   tolua_constant(tolua_S,"REVERSED",Fl_PSfile_Device::REVERSED);
   tolua_constant(tolua_S,"ORIENTATION",Fl_PSfile_Device::ORIENTATION);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_PSfile_Device_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_PSfile_Device_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_PSfile_Device_new00_local);
   tolua_function(tolua_S,"end_job",tolua_fltk_fltk_Fl_PSfile_Device_end_job00);
   tolua_function(tolua_S,"end_page",tolua_fltk_fltk_Fl_PSfile_Device_end_page00);
   tolua_function(tolua_S,"file",tolua_fltk_fltk_Fl_PSfile_Device_file00);
   tolua_function(tolua_S,"interpolate",tolua_fltk_fltk_Fl_PSfile_Device_interpolate01);
   tolua_function(tolua_S,"margins",tolua_fltk_fltk_Fl_PSfile_Device_margins00);
   tolua_function(tolua_S,"origin",tolua_fltk_fltk_Fl_PSfile_Device_origin00);
   tolua_function(tolua_S,"page",tolua_fltk_fltk_Fl_PSfile_Device_page01);
   tolua_function(tolua_S,"page_policy",tolua_fltk_fltk_Fl_PSfile_Device_page_policy01);
   tolua_function(tolua_S,"printable_rect",tolua_fltk_fltk_Fl_PSfile_Device_printable_rect00);
   tolua_function(tolua_S,"rotate",tolua_fltk_fltk_Fl_PSfile_Device_rotate00);
   tolua_function(tolua_S,"scale",tolua_fltk_fltk_Fl_PSfile_Device_scale00);
   tolua_function(tolua_S,"start_page",tolua_fltk_fltk_Fl_PSfile_Device_start_page00);
   tolua_function(tolua_S,"translate",tolua_fltk_fltk_Fl_PSfile_Device_translate00);
   tolua_function(tolua_S,"untranslate",tolua_fltk_fltk_Fl_PSfile_Device_untranslate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Pack","Fl_Pack","Fl_Group",tolua_collect_Fl_Pack);
  #else
  tolua_cclass(tolua_S,"Fl_Pack","Fl_Pack","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Pack");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Pack_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Pack_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Pack_new00_local);
   tolua_function(tolua_S,"horizontal",tolua_fltk_fltk_Fl_Pack_horizontal00);
   tolua_function(tolua_S,"spacing",tolua_fltk_fltk_Fl_Pack_spacing01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Positioner","Fl_Positioner","Fl_Widget",tolua_collect_Fl_Positioner);
  #else
  tolua_cclass(tolua_S,"Fl_Positioner","Fl_Positioner","Fl_Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Positioner");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Positioner_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Positioner_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Positioner_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Positioner_handle00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Positioner_value00);
   tolua_function(tolua_S,"xbounds",tolua_fltk_fltk_Fl_Positioner_xbounds00);
   tolua_function(tolua_S,"xmaximum",tolua_fltk_fltk_Fl_Positioner_xmaximum00);
   tolua_function(tolua_S,"xminimum",tolua_fltk_fltk_Fl_Positioner_xminimum00);
   tolua_function(tolua_S,"xstep",tolua_fltk_fltk_Fl_Positioner_xstep00);
   tolua_function(tolua_S,"xvalue",tolua_fltk_fltk_Fl_Positioner_xvalue01);
   tolua_function(tolua_S,"ybounds",tolua_fltk_fltk_Fl_Positioner_ybounds00);
   tolua_function(tolua_S,"ymaximum",tolua_fltk_fltk_Fl_Positioner_ymaximum00);
   tolua_function(tolua_S,"yminimum",tolua_fltk_fltk_Fl_Positioner_yminimum00);
   tolua_function(tolua_S,"ystep",tolua_fltk_fltk_Fl_Positioner_ystep00);
   tolua_function(tolua_S,"yvalue",tolua_fltk_fltk_Fl_Positioner_yvalue00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Positioner","Lua__Fl_Positioner","Fl_Positioner",tolua_collect_Lua__Fl_Positioner);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Positioner","Lua__Fl_Positioner","Fl_Positioner",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Positioner");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Positioner_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Positioner__handle",tolua_fltk_fltk_Lua__Fl_Positioner_Fl_Positioner__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Positioner_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Positioner_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Positioner_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Preferences","Fl_Preferences","",tolua_collect_Fl_Preferences);
  #else
  tolua_cclass(tolua_S,"Fl_Preferences","Fl_Preferences","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Preferences");
   tolua_constant(tolua_S,"SYSTEM",Fl_Preferences::SYSTEM);
   tolua_constant(tolua_S,"USER",Fl_Preferences::USER);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Preferences_new04);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Preferences_new04_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Preferences_new04_local);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Preferences_clear00);
   tolua_function(tolua_S,"copyTo",tolua_fltk_fltk_Fl_Preferences_copyTo00);
   tolua_function(tolua_S,"deleteAllEntries",tolua_fltk_fltk_Fl_Preferences_deleteAllEntries00);
   tolua_function(tolua_S,"deleteAllGroups",tolua_fltk_fltk_Fl_Preferences_deleteAllGroups00);
   tolua_function(tolua_S,"deleteEntry",tolua_fltk_fltk_Fl_Preferences_deleteEntry00);
   tolua_function(tolua_S,"deleteGroup",tolua_fltk_fltk_Fl_Preferences_deleteGroup00);
   tolua_function(tolua_S,"entries",tolua_fltk_fltk_Fl_Preferences_entries00);
   tolua_function(tolua_S,"entry",tolua_fltk_fltk_Fl_Preferences_entry00);
   tolua_function(tolua_S,"entryExists",tolua_fltk_fltk_Fl_Preferences_entryExists00);
   tolua_function(tolua_S,"flush",tolua_fltk_fltk_Fl_Preferences_flush00);
   tolua_function(tolua_S,"get",tolua_fltk_fltk_Fl_Preferences_get03);
   tolua_function(tolua_S,"getUserdataPath",tolua_fltk_fltk_Fl_Preferences_getUserdataPath00);
   tolua_function(tolua_S,"group",tolua_fltk_fltk_Fl_Preferences_group00);
   tolua_function(tolua_S,"groupExists",tolua_fltk_fltk_Fl_Preferences_groupExists00);
   tolua_function(tolua_S,"groups",tolua_fltk_fltk_Fl_Preferences_groups00);
   tolua_function(tolua_S,"name",tolua_fltk_fltk_Fl_Preferences_name00);
   tolua_function(tolua_S,"newUUID",tolua_fltk_fltk_Fl_Preferences_newUUID00);
   tolua_function(tolua_S,"path",tolua_fltk_fltk_Fl_Preferences_path00);
   tolua_function(tolua_S,"set",tolua_fltk_fltk_Fl_Preferences_set03);
   tolua_function(tolua_S,"size",tolua_fltk_fltk_Fl_Preferences_size00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Printer","Fl_Printer","Fl_Abstract_Printer",tolua_collect_Fl_Printer);
  #else
  tolua_cclass(tolua_S,"Fl_Printer","Fl_Printer","Fl_Abstract_Printer",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Printer");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Printer_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Printer_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Printer_new00_local);
   tolua_function(tolua_S,"end_job",tolua_fltk_fltk_Fl_Printer_end_job00);
   tolua_function(tolua_S,"end_page",tolua_fltk_fltk_Fl_Printer_end_page00);
   tolua_function(tolua_S,"margins",tolua_fltk_fltk_Fl_Printer_margins00);
   tolua_function(tolua_S,"origin",tolua_fltk_fltk_Fl_Printer_origin00);
   tolua_function(tolua_S,"printable_rect",tolua_fltk_fltk_Fl_Printer_printable_rect00);
   tolua_function(tolua_S,"rotate",tolua_fltk_fltk_Fl_Printer_rotate00);
   tolua_function(tolua_S,"scale",tolua_fltk_fltk_Fl_Printer_scale00);
   tolua_function(tolua_S,"start_job",tolua_fltk_fltk_Fl_Printer_start_job00);
   tolua_function(tolua_S,"start_page",tolua_fltk_fltk_Fl_Printer_start_page00);
   tolua_function(tolua_S,"translate",tolua_fltk_fltk_Fl_Printer_translate00);
   tolua_function(tolua_S,"untranslate",tolua_fltk_fltk_Fl_Printer_untranslate00);
   tolua_function(tolua_S,"ask_for_printer",tolua_fltk_fltk_Fl_Printer_ask_for_printer00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Progress","Fl_Progress","Fl_Widget",tolua_collect_Fl_Progress);
  #else
  tolua_cclass(tolua_S,"Fl_Progress","Fl_Progress","Fl_Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Progress");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Progress_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Progress_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Progress_new00_local);
   tolua_function(tolua_S,"maximum",tolua_fltk_fltk_Fl_Progress_maximum00);
   tolua_function(tolua_S,"minimum",tolua_fltk_fltk_Fl_Progress_minimum00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Progress_value00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_RGB_Image","Fl_RGB_Image","Fl_Image",tolua_collect_Fl_RGB_Image);
  #else
  tolua_cclass(tolua_S,"Fl_RGB_Image","Fl_RGB_Image","Fl_Image",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_RGB_Image");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_RGB_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_RGB_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_RGB_Image_new00_local);
   tolua_function(tolua_S,"color_average",tolua_fltk_fltk_Fl_RGB_Image_color_average00);
   tolua_function(tolua_S,"copy",tolua_fltk_fltk_Fl_RGB_Image_copy01);
   tolua_function(tolua_S,"desaturate",tolua_fltk_fltk_Fl_RGB_Image_desaturate00);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_RGB_Image_draw01);
   tolua_function(tolua_S,"label",tolua_fltk_fltk_Fl_RGB_Image_label01);
   tolua_function(tolua_S,"uncache",tolua_fltk_fltk_Fl_RGB_Image_uncache00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_RGB_Image","Lua__Fl_RGB_Image","Fl_RGB_Image",tolua_collect_Lua__Fl_RGB_Image);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_RGB_Image","Lua__Fl_RGB_Image","Fl_RGB_Image",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_RGB_Image");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_RGB_Image_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_RGB_Image__color_average",tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__color_average00);
   tolua_function(tolua_S,"Fl_RGB_Image__copy",tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__copy00);
   tolua_function(tolua_S,"Fl_RGB_Image__desaturate",tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__desaturate00);
   tolua_function(tolua_S,"Fl_RGB_Image__draw",tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__draw00);
   tolua_function(tolua_S,"Fl_RGB_Image__label",tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__label01);
   tolua_function(tolua_S,"Fl_RGB_Image__uncache",tolua_fltk_fltk_Lua__Fl_RGB_Image_Fl_RGB_Image__uncache00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_RGB_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_RGB_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_RGB_Image_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_BMP_Image","Fl_BMP_Image","Fl_RGB_Image",tolua_collect_Fl_BMP_Image);
  #else
  tolua_cclass(tolua_S,"Fl_BMP_Image","Fl_BMP_Image","Fl_RGB_Image",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_BMP_Image");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_BMP_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_BMP_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_BMP_Image_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Bitmap","Fl_Bitmap","Fl_Image",tolua_collect_Fl_Bitmap);
  #else
  tolua_cclass(tolua_S,"Fl_Bitmap","Fl_Bitmap","Fl_Image",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Bitmap");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Bitmap_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Bitmap_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Bitmap_new01_local);
   tolua_function(tolua_S,"copy",tolua_fltk_fltk_Fl_Bitmap_copy01);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_Bitmap_draw01);
   tolua_function(tolua_S,"label",tolua_fltk_fltk_Fl_Bitmap_label01);
   tolua_function(tolua_S,"uncache",tolua_fltk_fltk_Fl_Bitmap_uncache00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Bitmap","Lua__Fl_Bitmap","Fl_Bitmap",tolua_collect_Lua__Fl_Bitmap);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Bitmap","Lua__Fl_Bitmap","Fl_Bitmap",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Bitmap");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Bitmap_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Bitmap__copy",tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__copy00);
   tolua_function(tolua_S,"Fl_Bitmap__draw",tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__draw00);
   tolua_function(tolua_S,"Fl_Bitmap__label",tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__label01);
   tolua_function(tolua_S,"Fl_Bitmap__uncache",tolua_fltk_fltk_Lua__Fl_Bitmap_Fl_Bitmap__uncache00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Bitmap_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Bitmap_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Bitmap_new01_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_JPEG_Image","Fl_JPEG_Image","Fl_RGB_Image",tolua_collect_Fl_JPEG_Image);
  #else
  tolua_cclass(tolua_S,"Fl_JPEG_Image","Fl_JPEG_Image","Fl_RGB_Image",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_JPEG_Image");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_JPEG_Image_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_JPEG_Image_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_JPEG_Image_new01_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Radio_Button","Fl_Radio_Button","Fl_Button",tolua_collect_Fl_Radio_Button);
  #else
  tolua_cclass(tolua_S,"Fl_Radio_Button","Fl_Radio_Button","Fl_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Radio_Button");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Radio_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Radio_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Radio_Button_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Radio_Light_Button","Fl_Radio_Light_Button","Fl_Light_Button",tolua_collect_Fl_Radio_Light_Button);
  #else
  tolua_cclass(tolua_S,"Fl_Radio_Light_Button","Fl_Radio_Light_Button","Fl_Light_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Radio_Light_Button");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Radio_Light_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Radio_Light_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Radio_Light_Button_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Repeat_Button","Fl_Repeat_Button","Fl_Button",tolua_collect_Fl_Repeat_Button);
  #else
  tolua_cclass(tolua_S,"Fl_Repeat_Button","Fl_Repeat_Button","Fl_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Repeat_Button");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Repeat_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Repeat_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Repeat_Button_new00_local);
   tolua_function(tolua_S,"deactivate",tolua_fltk_fltk_Fl_Repeat_Button_deactivate00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Repeat_Button_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Return_Button","Fl_Return_Button","Fl_Button",tolua_collect_Fl_Return_Button);
  #else
  tolua_cclass(tolua_S,"Fl_Return_Button","Fl_Return_Button","Fl_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Return_Button");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Return_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Return_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Return_Button_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Return_Button_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Round_Button","Fl_Round_Button","Fl_Light_Button",tolua_collect_Fl_Round_Button);
  #else
  tolua_cclass(tolua_S,"Fl_Round_Button","Fl_Round_Button","Fl_Light_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Round_Button");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Round_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Round_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Round_Button_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Radio_Round_Button","Fl_Radio_Round_Button","Fl_Round_Button",tolua_collect_Fl_Radio_Round_Button);
  #else
  tolua_cclass(tolua_S,"Fl_Radio_Round_Button","Fl_Radio_Round_Button","Fl_Round_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Radio_Round_Button");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Radio_Round_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Radio_Round_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Radio_Round_Button_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Round_Clock","Fl_Round_Clock","Fl_Clock",tolua_collect_Fl_Round_Clock);
  #else
  tolua_cclass(tolua_S,"Fl_Round_Clock","Fl_Round_Clock","Fl_Clock",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Round_Clock");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Round_Clock_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Round_Clock_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Round_Clock_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Scroll","Fl_Scroll","Fl_Group",tolua_collect_Fl_Scroll);
  #else
  tolua_cclass(tolua_S,"Fl_Scroll","Fl_Scroll","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Scroll");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Scroll_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Scroll_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Scroll_new00_local);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Scroll_clear00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Scroll_handle00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Scroll_resize00);
   tolua_function(tolua_S,"scroll_to",tolua_fltk_fltk_Fl_Scroll_scroll_to00);
   tolua_function(tolua_S,"scrollbar_size",tolua_fltk_fltk_Fl_Scroll_scrollbar_size00);
   tolua_function(tolua_S,"xposition",tolua_fltk_fltk_Fl_Scroll_xposition00);
   tolua_function(tolua_S,"yposition",tolua_fltk_fltk_Fl_Scroll_yposition00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Scroll","Lua__Fl_Scroll","Fl_Scroll",tolua_collect_Lua__Fl_Scroll);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Scroll","Lua__Fl_Scroll","Fl_Scroll",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Scroll");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Scroll_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Scroll__handle",tolua_fltk_fltk_Lua__Fl_Scroll_Fl_Scroll__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Scroll_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Scroll_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Scroll_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Secret_Input","Fl_Secret_Input","Fl_Input",tolua_collect_Fl_Secret_Input);
  #else
  tolua_cclass(tolua_S,"Fl_Secret_Input","Fl_Secret_Input","Fl_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Secret_Input");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Secret_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Secret_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Secret_Input_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Select_Browser","Fl_Select_Browser","Fl_Browser",tolua_collect_Fl_Select_Browser);
  #else
  tolua_cclass(tolua_S,"Fl_Select_Browser","Fl_Select_Browser","Fl_Browser",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Select_Browser");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Select_Browser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Select_Browser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Select_Browser_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Select_Browser_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Select_Browser","Lua__Fl_Select_Browser","Fl_Select_Browser",tolua_collect_Lua__Fl_Select_Browser);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Select_Browser","Lua__Fl_Select_Browser","Fl_Select_Browser",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Select_Browser");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Select_Browser_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Select_Browser__handle",tolua_fltk_fltk_Lua__Fl_Select_Browser_Fl_Select_Browser__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Select_Browser_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Select_Browser_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Select_Browser_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Shared_Image","Fl_Shared_Image","Fl_Image",NULL);
  tolua_beginmodule(tolua_S,"Fl_Shared_Image");
   tolua_function(tolua_S,"add_handler",tolua_fltk_fltk_Fl_Shared_Image_add_handler00);
   tolua_function(tolua_S,"color_average",tolua_fltk_fltk_Fl_Shared_Image_color_average00);
   tolua_function(tolua_S,"copy",tolua_fltk_fltk_Fl_Shared_Image_copy01);
   tolua_function(tolua_S,"desaturate",tolua_fltk_fltk_Fl_Shared_Image_desaturate00);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_Shared_Image_draw01);
   tolua_function(tolua_S,"find",tolua_fltk_fltk_Fl_Shared_Image_find00);
   tolua_function(tolua_S,"get",tolua_fltk_fltk_Fl_Shared_Image_get00);
   tolua_function(tolua_S,"name",tolua_fltk_fltk_Fl_Shared_Image_name00);
   tolua_function(tolua_S,"num_images",tolua_fltk_fltk_Fl_Shared_Image_num_images00);
   tolua_function(tolua_S,"refcount",tolua_fltk_fltk_Fl_Shared_Image_refcount00);
   tolua_function(tolua_S,"release",tolua_fltk_fltk_Fl_Shared_Image_release00);
   tolua_function(tolua_S,"reload",tolua_fltk_fltk_Fl_Shared_Image_reload00);
   tolua_function(tolua_S,"remove_handler",tolua_fltk_fltk_Fl_Shared_Image_remove_handler00);
   tolua_function(tolua_S,"uncache",tolua_fltk_fltk_Fl_Shared_Image_uncache00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Lua__Fl_Shared_Image","Lua__Fl_Shared_Image","Fl_Shared_Image",NULL);
  tolua_beginmodule(tolua_S,"Lua__Fl_Shared_Image");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Shared_Image_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Shared_Image__color_average",tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__color_average00);
   tolua_function(tolua_S,"Fl_Shared_Image__copy",tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__copy00);
   tolua_function(tolua_S,"Fl_Shared_Image__desaturate",tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__desaturate00);
   tolua_function(tolua_S,"Fl_Shared_Image__draw",tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__draw00);
   tolua_function(tolua_S,"Fl_Shared_Image__uncache",tolua_fltk_fltk_Lua__Fl_Shared_Image_Fl_Shared_Image__uncache00);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"fl_register_images",tolua_fltk_fltk_fl_register_images00);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Simple_Counter","Fl_Simple_Counter","Fl_Counter",tolua_collect_Fl_Simple_Counter);
  #else
  tolua_cclass(tolua_S,"Fl_Simple_Counter","Fl_Simple_Counter","Fl_Counter",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Simple_Counter");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Simple_Counter_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Simple_Counter_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Simple_Counter_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Spinner","Fl_Spinner","Fl_Group",tolua_collect_Fl_Spinner);
  #else
  tolua_cclass(tolua_S,"Fl_Spinner","Fl_Spinner","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Spinner");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Spinner_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Spinner_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Spinner_new00_local);
   tolua_function(tolua_S,"format",tolua_fltk_fltk_Fl_Spinner_format00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Spinner_handle00);
   tolua_function(tolua_S,"maximum",tolua_fltk_fltk_Fl_Spinner_maximum00);
   tolua_function(tolua_S,"minimum",tolua_fltk_fltk_Fl_Spinner_minimum00);
   tolua_function(tolua_S,"range",tolua_fltk_fltk_Fl_Spinner_range00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Spinner_resize00);
   tolua_function(tolua_S,"step",tolua_fltk_fltk_Fl_Spinner_step00);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Spinner_textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Spinner_textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Spinner_textsize00);
   tolua_function(tolua_S,"type",tolua_fltk_fltk_Fl_Spinner_type00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Spinner_value00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Spinner","Lua__Fl_Spinner","Fl_Spinner",tolua_collect_Lua__Fl_Spinner);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Spinner","Lua__Fl_Spinner","Fl_Spinner",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Spinner");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Spinner_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Spinner__handle",tolua_fltk_fltk_Lua__Fl_Spinner_Fl_Spinner__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Spinner_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Spinner_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Spinner_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Sys_Menu_Bar","Fl_Sys_Menu_Bar","Fl_Menu_Bar",tolua_collect_Fl_Sys_Menu_Bar);
  #else
  tolua_cclass(tolua_S,"Fl_Sys_Menu_Bar","Fl_Sys_Menu_Bar","Fl_Menu_Bar",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Sys_Menu_Bar");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Sys_Menu_Bar_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Sys_Menu_Bar_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Sys_Menu_Bar_new00_local);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Sys_Menu_Bar_add00);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Sys_Menu_Bar_clear00);
   tolua_function(tolua_S,"clear_submenu",tolua_fltk_fltk_Fl_Sys_Menu_Bar_clear_submenu00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Sys_Menu_Bar_insert00);
   tolua_function(tolua_S,"menu",tolua_fltk_fltk_Fl_Sys_Menu_Bar_menu00);
   tolua_function(tolua_S,"remove",tolua_fltk_fltk_Fl_Sys_Menu_Bar_remove00);
   tolua_function(tolua_S,"replace",tolua_fltk_fltk_Fl_Sys_Menu_Bar_replace00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Table","Fl_Table","Fl_Group",tolua_collect_Fl_Table);
  #else
  tolua_cclass(tolua_S,"Fl_Table","Fl_Table","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Table");
   tolua_constant(tolua_S,"CONTEXT_NONE",Fl_Table::CONTEXT_NONE);
   tolua_constant(tolua_S,"CONTEXT_STARTPAGE",Fl_Table::CONTEXT_STARTPAGE);
   tolua_constant(tolua_S,"CONTEXT_ENDPAGE",Fl_Table::CONTEXT_ENDPAGE);
   tolua_constant(tolua_S,"CONTEXT_ROW_HEADER",Fl_Table::CONTEXT_ROW_HEADER);
   tolua_constant(tolua_S,"CONTEXT_COL_HEADER",Fl_Table::CONTEXT_COL_HEADER);
   tolua_constant(tolua_S,"CONTEXT_CELL",Fl_Table::CONTEXT_CELL);
   tolua_constant(tolua_S,"CONTEXT_TABLE",Fl_Table::CONTEXT_TABLE);
   tolua_constant(tolua_S,"CONTEXT_RC_RESIZE",Fl_Table::CONTEXT_RC_RESIZE);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Table_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Table_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Table_new00_local);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Table_add00);
   tolua_function(tolua_S,"begin",tolua_fltk_fltk_Fl_Table_begin00);
   tolua_function(tolua_S,"callback_col",tolua_fltk_fltk_Fl_Table_callback_col00);
   tolua_function(tolua_S,"callback_context",tolua_fltk_fltk_Fl_Table_callback_context00);
   tolua_function(tolua_S,"callback_row",tolua_fltk_fltk_Fl_Table_callback_row00);
   tolua_function(tolua_S,"child",tolua_fltk_fltk_Fl_Table_child00);
   tolua_function(tolua_S,"children",tolua_fltk_fltk_Fl_Table_children00);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Table_clear00);
   tolua_function(tolua_S,"col_header",tolua_fltk_fltk_Fl_Table_col_header00);
   tolua_function(tolua_S,"col_header_color",tolua_fltk_fltk_Fl_Table_col_header_color00);
   tolua_function(tolua_S,"col_header_height",tolua_fltk_fltk_Fl_Table_col_header_height00);
   tolua_function(tolua_S,"col_position",tolua_fltk_fltk_Fl_Table_col_position00);
   tolua_function(tolua_S,"col_resize",tolua_fltk_fltk_Fl_Table_col_resize00);
   tolua_function(tolua_S,"col_resize_min",tolua_fltk_fltk_Fl_Table_col_resize_min00);
   tolua_function(tolua_S,"col_width",tolua_fltk_fltk_Fl_Table_col_width01);
   tolua_function(tolua_S,"col_width_all",tolua_fltk_fltk_Fl_Table_col_width_all00);
   tolua_function(tolua_S,"cols",tolua_fltk_fltk_Fl_Table_cols01);
   tolua_function(tolua_S,"do_callback",tolua_fltk_fltk_Fl_Table_do_callback00);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_Table_draw00);
   tolua_function(tolua_S,"endd",tolua_fltk_fltk_Fl_Table_endd00);
   tolua_function(tolua_S,"find",tolua_fltk_fltk_Fl_Table_find00);
   tolua_function(tolua_S,"get_selection",tolua_fltk_fltk_Fl_Table_get_selection00);
   tolua_function(tolua_S,"init_sizes",tolua_fltk_fltk_Fl_Table_init_sizes00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Table_insert01);
   tolua_function(tolua_S,"is_interactive_resize",tolua_fltk_fltk_Fl_Table_is_interactive_resize00);
   tolua_function(tolua_S,"is_selected",tolua_fltk_fltk_Fl_Table_is_selected00);
   tolua_function(tolua_S,"move_cursor",tolua_fltk_fltk_Fl_Table_move_cursor00);
   tolua_function(tolua_S,"remove",tolua_fltk_fltk_Fl_Table_remove00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Table_resize00);
   tolua_function(tolua_S,"row_header",tolua_fltk_fltk_Fl_Table_row_header00);
   tolua_function(tolua_S,"row_header_color",tolua_fltk_fltk_Fl_Table_row_header_color00);
   tolua_function(tolua_S,"row_header_width",tolua_fltk_fltk_Fl_Table_row_header_width00);
   tolua_function(tolua_S,"row_height",tolua_fltk_fltk_Fl_Table_row_height01);
   tolua_function(tolua_S,"row_height_all",tolua_fltk_fltk_Fl_Table_row_height_all00);
   tolua_function(tolua_S,"row_position",tolua_fltk_fltk_Fl_Table_row_position00);
   tolua_function(tolua_S,"row_resize",tolua_fltk_fltk_Fl_Table_row_resize00);
   tolua_function(tolua_S,"row_resize_min",tolua_fltk_fltk_Fl_Table_row_resize_min00);
   tolua_function(tolua_S,"rows",tolua_fltk_fltk_Fl_Table_rows01);
   tolua_function(tolua_S,"set_selection",tolua_fltk_fltk_Fl_Table_set_selection00);
   tolua_function(tolua_S,"table_box",tolua_fltk_fltk_Fl_Table_table_box00);
   tolua_function(tolua_S,"top_row",tolua_fltk_fltk_Fl_Table_top_row00);
   tolua_function(tolua_S,"visible_cells",tolua_fltk_fltk_Fl_Table_visible_cells00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Table","Lua__Fl_Table","Fl_Table",tolua_collect_Lua__Fl_Table);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Table","Lua__Fl_Table","Fl_Table",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Table");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Table_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Table__draw_cell",tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__draw_cell00);
   tolua_function(tolua_S,"Fl_Table__clear",tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__clear00);
   tolua_function(tolua_S,"Fl_Table__cols",tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__cols00);
   tolua_function(tolua_S,"Fl_Table__rows",tolua_fltk_fltk_Lua__Fl_Table_Fl_Table__rows00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Table_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Table_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Table_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Table_Row","Fl_Table_Row","Fl_Table",tolua_collect_Fl_Table_Row);
  #else
  tolua_cclass(tolua_S,"Fl_Table_Row","Fl_Table_Row","Fl_Table",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Table_Row");
   tolua_constant(tolua_S,"SELECT_NONE",Fl_Table_Row::SELECT_NONE);
   tolua_constant(tolua_S,"SELECT_SINGLE",Fl_Table_Row::SELECT_SINGLE);
   tolua_constant(tolua_S,"SELECT_MULTI",Fl_Table_Row::SELECT_MULTI);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Table_Row_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Table_Row_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Table_Row_new00_local);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Table_Row_clear00);
   tolua_function(tolua_S,"row_selected",tolua_fltk_fltk_Fl_Table_Row_row_selected00);
   tolua_function(tolua_S,"rows",tolua_fltk_fltk_Fl_Table_Row_rows00);
   tolua_function(tolua_S,"select_all_rows",tolua_fltk_fltk_Fl_Table_Row_select_all_rows00);
   tolua_function(tolua_S,"select_row",tolua_fltk_fltk_Fl_Table_Row_select_row00);
   tolua_function(tolua_S,"type",tolua_fltk_fltk_Fl_Table_Row_type01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Table_Row","Lua__Fl_Table_Row","Fl_Table_Row",tolua_collect_Lua__Fl_Table_Row);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Table_Row","Lua__Fl_Table_Row","Fl_Table_Row",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Table_Row");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Table_Row_tolua__set_instance00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Table_Row_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Table_Row_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Table_Row_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Tabs","Fl_Tabs","Fl_Group",tolua_collect_Fl_Tabs);
  #else
  tolua_cclass(tolua_S,"Fl_Tabs","Fl_Tabs","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Tabs");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Tabs_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Tabs_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Tabs_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Tabs_handle00);
   tolua_function(tolua_S,"push",tolua_fltk_fltk_Fl_Tabs_push01);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Tabs_value01);
   tolua_function(tolua_S,"which",tolua_fltk_fltk_Fl_Tabs_which00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Tabs","Lua__Fl_Tabs","Fl_Tabs",tolua_collect_Lua__Fl_Tabs);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Tabs","Lua__Fl_Tabs","Fl_Tabs",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Tabs");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Tabs_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Tabs__handle",tolua_fltk_fltk_Lua__Fl_Tabs_Fl_Tabs__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Tabs_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Tabs_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Tabs_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Text_Buffer","Fl_Text_Buffer","",tolua_collect_Fl_Text_Buffer);
  #else
  tolua_cclass(tolua_S,"Fl_Text_Buffer","Fl_Text_Buffer","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Text_Buffer");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Text_Buffer_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Text_Buffer_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Text_Buffer_new00_local);
   tolua_function(tolua_S,"add_modify_callback",tolua_fltk_fltk_Fl_Text_Buffer_add_modify_callback00);
   tolua_function(tolua_S,"add_predelete_callback",tolua_fltk_fltk_Fl_Text_Buffer_add_predelete_callback00);
   tolua_function(tolua_S,"address",tolua_fltk_fltk_Fl_Text_Buffer_address00);
   tolua_function(tolua_S,"append",tolua_fltk_fltk_Fl_Text_Buffer_append00);
   tolua_function(tolua_S,"appendfile",tolua_fltk_fltk_Fl_Text_Buffer_appendfile00);
   tolua_function(tolua_S,"call_modify_callbacks",tolua_fltk_fltk_Fl_Text_Buffer_call_modify_callbacks00);
   tolua_function(tolua_S,"call_predelete_callbacks",tolua_fltk_fltk_Fl_Text_Buffer_call_predelete_callbacks00);
   tolua_function(tolua_S,"canUndo",tolua_fltk_fltk_Fl_Text_Buffer_canUndo00);
   tolua_function(tolua_S,"character",tolua_fltk_fltk_Fl_Text_Buffer_character00);
   tolua_function(tolua_S,"character_width",tolua_fltk_fltk_Fl_Text_Buffer_character_width01);
   tolua_function(tolua_S,"clear_rectangular",tolua_fltk_fltk_Fl_Text_Buffer_clear_rectangular00);
   tolua_function(tolua_S,"copy",tolua_fltk_fltk_Fl_Text_Buffer_copy00);
   tolua_function(tolua_S,"count_displayed_characters",tolua_fltk_fltk_Fl_Text_Buffer_count_displayed_characters00);
   tolua_function(tolua_S,"count_lines",tolua_fltk_fltk_Fl_Text_Buffer_count_lines00);
   tolua_function(tolua_S,"expand_character",tolua_fltk_fltk_Fl_Text_Buffer_expand_character01);
   tolua_function(tolua_S,"findchar_backward",tolua_fltk_fltk_Fl_Text_Buffer_findchar_backward00);
   tolua_function(tolua_S,"findchar_forward",tolua_fltk_fltk_Fl_Text_Buffer_findchar_forward00);
   tolua_function(tolua_S,"findchars_backward",tolua_fltk_fltk_Fl_Text_Buffer_findchars_backward00);
   tolua_function(tolua_S,"findchars_forward",tolua_fltk_fltk_Fl_Text_Buffer_findchars_forward00);
   tolua_function(tolua_S,"highlight",tolua_fltk_fltk_Fl_Text_Buffer_highlight01);
   tolua_function(tolua_S,"highlight_position",tolua_fltk_fltk_Fl_Text_Buffer_highlight_position01);
   tolua_function(tolua_S,"highlight_rectangular",tolua_fltk_fltk_Fl_Text_Buffer_highlight_rectangular00);
   tolua_function(tolua_S,"highlight_selection",tolua_fltk_fltk_Fl_Text_Buffer_highlight_selection00);
   tolua_function(tolua_S,"highlight_text",tolua_fltk_fltk_Fl_Text_Buffer_highlight_text00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Text_Buffer_insert00);
   tolua_function(tolua_S,"insert_column",tolua_fltk_fltk_Fl_Text_Buffer_insert_column00);
   tolua_function(tolua_S,"insertfile",tolua_fltk_fltk_Fl_Text_Buffer_insertfile00);
   tolua_function(tolua_S,"length",tolua_fltk_fltk_Fl_Text_Buffer_length00);
   tolua_function(tolua_S,"line_end",tolua_fltk_fltk_Fl_Text_Buffer_line_end00);
   tolua_function(tolua_S,"line_start",tolua_fltk_fltk_Fl_Text_Buffer_line_start00);
   tolua_function(tolua_S,"line_text",tolua_fltk_fltk_Fl_Text_Buffer_line_text00);
   tolua_function(tolua_S,"loadfile",tolua_fltk_fltk_Fl_Text_Buffer_loadfile00);
   tolua_function(tolua_S,"outputfile",tolua_fltk_fltk_Fl_Text_Buffer_outputfile00);
   tolua_function(tolua_S,"overlay_rectangular",tolua_fltk_fltk_Fl_Text_Buffer_overlay_rectangular00);
   tolua_function(tolua_S,"primary_selection",tolua_fltk_fltk_Fl_Text_Buffer_primary_selection00);
   tolua_function(tolua_S,"remove",tolua_fltk_fltk_Fl_Text_Buffer_remove00);
   tolua_function(tolua_S,"remove_modify_callback",tolua_fltk_fltk_Fl_Text_Buffer_remove_modify_callback00);
   tolua_function(tolua_S,"remove_predelete_callback",tolua_fltk_fltk_Fl_Text_Buffer_remove_predelete_callback00);
   tolua_function(tolua_S,"remove_rectangular",tolua_fltk_fltk_Fl_Text_Buffer_remove_rectangular00);
   tolua_function(tolua_S,"remove_secondary_selection",tolua_fltk_fltk_Fl_Text_Buffer_remove_secondary_selection00);
   tolua_function(tolua_S,"remove_selection",tolua_fltk_fltk_Fl_Text_Buffer_remove_selection00);
   tolua_function(tolua_S,"replace",tolua_fltk_fltk_Fl_Text_Buffer_replace00);
   tolua_function(tolua_S,"replace_rectangular",tolua_fltk_fltk_Fl_Text_Buffer_replace_rectangular00);
   tolua_function(tolua_S,"replace_secondary_selection",tolua_fltk_fltk_Fl_Text_Buffer_replace_secondary_selection00);
   tolua_function(tolua_S,"replace_selection",tolua_fltk_fltk_Fl_Text_Buffer_replace_selection00);
   tolua_function(tolua_S,"rewind_lines",tolua_fltk_fltk_Fl_Text_Buffer_rewind_lines00);
   tolua_function(tolua_S,"savefile",tolua_fltk_fltk_Fl_Text_Buffer_savefile00);
   tolua_function(tolua_S,"search_backward",tolua_fltk_fltk_Fl_Text_Buffer_search_backward00);
   tolua_function(tolua_S,"search_forward",tolua_fltk_fltk_Fl_Text_Buffer_search_forward00);
   tolua_function(tolua_S,"secondary_select",tolua_fltk_fltk_Fl_Text_Buffer_secondary_select00);
   tolua_function(tolua_S,"secondary_select_rectangular",tolua_fltk_fltk_Fl_Text_Buffer_secondary_select_rectangular00);
   tolua_function(tolua_S,"secondary_selected",tolua_fltk_fltk_Fl_Text_Buffer_secondary_selected00);
   tolua_function(tolua_S,"secondary_selection",tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection00);
   tolua_function(tolua_S,"secondary_selection_position",tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection_position01);
   tolua_function(tolua_S,"secondary_selection_text",tolua_fltk_fltk_Fl_Text_Buffer_secondary_selection_text00);
   tolua_function(tolua_S,"secondary_unselect",tolua_fltk_fltk_Fl_Text_Buffer_secondary_unselect00);
   tolua_function(tolua_S,"select",tolua_fltk_fltk_Fl_Text_Buffer_select00);
   tolua_function(tolua_S,"select_rectangular",tolua_fltk_fltk_Fl_Text_Buffer_select_rectangular00);
   tolua_function(tolua_S,"selected",tolua_fltk_fltk_Fl_Text_Buffer_selected00);
   tolua_function(tolua_S,"selection_position",tolua_fltk_fltk_Fl_Text_Buffer_selection_position01);
   tolua_function(tolua_S,"selection_text",tolua_fltk_fltk_Fl_Text_Buffer_selection_text00);
   tolua_function(tolua_S,"skip_displayed_characters",tolua_fltk_fltk_Fl_Text_Buffer_skip_displayed_characters00);
   tolua_function(tolua_S,"skip_lines",tolua_fltk_fltk_Fl_Text_Buffer_skip_lines00);
   tolua_function(tolua_S,"tab_distance",tolua_fltk_fltk_Fl_Text_Buffer_tab_distance00);
   tolua_function(tolua_S,"text",tolua_fltk_fltk_Fl_Text_Buffer_text00);
   tolua_function(tolua_S,"text_in_rectangle",tolua_fltk_fltk_Fl_Text_Buffer_text_in_rectangle00);
   tolua_function(tolua_S,"text_range",tolua_fltk_fltk_Fl_Text_Buffer_text_range00);
   tolua_function(tolua_S,"undo",tolua_fltk_fltk_Fl_Text_Buffer_undo00);
   tolua_function(tolua_S,"unhighlight",tolua_fltk_fltk_Fl_Text_Buffer_unhighlight00);
   tolua_function(tolua_S,"unselect",tolua_fltk_fltk_Fl_Text_Buffer_unselect00);
   tolua_function(tolua_S,"word_end",tolua_fltk_fltk_Fl_Text_Buffer_word_end00);
   tolua_function(tolua_S,"word_start",tolua_fltk_fltk_Fl_Text_Buffer_word_start00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Text_Display","Fl_Text_Display","Fl_Group",tolua_collect_Fl_Text_Display);
  #else
  tolua_cclass(tolua_S,"Fl_Text_Display","Fl_Text_Display","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Text_Display");
   tolua_constant(tolua_S,"ATTR_NONE",Fl_Text_Display::ATTR_NONE);
   tolua_constant(tolua_S,"ATTR_UNDERLINE",Fl_Text_Display::ATTR_UNDERLINE);
   tolua_constant(tolua_S,"ATTR_HIDDEN",Fl_Text_Display::ATTR_HIDDEN);
   tolua_cclass(tolua_S,"Style_Table_Entry","Fl_Text_Display::Style_Table_Entry","",NULL);
   tolua_beginmodule(tolua_S,"Style_Table_Entry");
    tolua_variable(tolua_S,"color",tolua_get_Fl_Text_Display__Style_Table_Entry_unsigned_color,tolua_set_Fl_Text_Display__Style_Table_Entry_unsigned_color);
    tolua_variable(tolua_S,"font",tolua_get_Fl_Text_Display__Style_Table_Entry_font,tolua_set_Fl_Text_Display__Style_Table_Entry_font);
    tolua_variable(tolua_S,"size",tolua_get_Fl_Text_Display__Style_Table_Entry_size,tolua_set_Fl_Text_Display__Style_Table_Entry_size);
    tolua_variable(tolua_S,"attr",tolua_get_Fl_Text_Display__Style_Table_Entry_attr,tolua_set_Fl_Text_Display__Style_Table_Entry_attr);
   tolua_endmodule(tolua_S);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Text_Display_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Text_Display_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Text_Display_new00_local);
   tolua_function(tolua_S,"buffer",tolua_fltk_fltk_Fl_Text_Display_buffer00);
   tolua_function(tolua_S,"count_lines",tolua_fltk_fltk_Fl_Text_Display_count_lines00);
   tolua_function(tolua_S,"cursor_color",tolua_fltk_fltk_Fl_Text_Display_cursor_color00);
   tolua_function(tolua_S,"cursor_style",tolua_fltk_fltk_Fl_Text_Display_cursor_style00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Text_Display_handle00);
   tolua_function(tolua_S,"hide_cursor",tolua_fltk_fltk_Fl_Text_Display_hide_cursor00);
   tolua_function(tolua_S,"in_selection",tolua_fltk_fltk_Fl_Text_Display_in_selection00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Text_Display_insert00);
   tolua_function(tolua_S,"insert_position",tolua_fltk_fltk_Fl_Text_Display_insert_position01);
   tolua_function(tolua_S,"line_end",tolua_fltk_fltk_Fl_Text_Display_line_end00);
   tolua_function(tolua_S,"line_start",tolua_fltk_fltk_Fl_Text_Display_line_start00);
   tolua_function(tolua_S,"move_down",tolua_fltk_fltk_Fl_Text_Display_move_down00);
   tolua_function(tolua_S,"move_left",tolua_fltk_fltk_Fl_Text_Display_move_left00);
   tolua_function(tolua_S,"move_right",tolua_fltk_fltk_Fl_Text_Display_move_right00);
   tolua_function(tolua_S,"move_up",tolua_fltk_fltk_Fl_Text_Display_move_up00);
   tolua_function(tolua_S,"next_word",tolua_fltk_fltk_Fl_Text_Display_next_word00);
   tolua_function(tolua_S,"overstrike",tolua_fltk_fltk_Fl_Text_Display_overstrike00);
   tolua_function(tolua_S,"position_style",tolua_fltk_fltk_Fl_Text_Display_position_style00);
   tolua_function(tolua_S,"previous_word",tolua_fltk_fltk_Fl_Text_Display_previous_word00);
   tolua_function(tolua_S,"redisplay_range",tolua_fltk_fltk_Fl_Text_Display_redisplay_range00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Text_Display_resize00);
   tolua_function(tolua_S,"rewind_lines",tolua_fltk_fltk_Fl_Text_Display_rewind_lines00);
   tolua_function(tolua_S,"scroll",tolua_fltk_fltk_Fl_Text_Display_scroll00);
   tolua_function(tolua_S,"scrollbar_align",tolua_fltk_fltk_Fl_Text_Display_scrollbar_align00);
   tolua_function(tolua_S,"scrollbar_width",tolua_fltk_fltk_Fl_Text_Display_scrollbar_width00);
   tolua_function(tolua_S,"shortcut",tolua_fltk_fltk_Fl_Text_Display_shortcut00);
   tolua_function(tolua_S,"show_cursor",tolua_fltk_fltk_Fl_Text_Display_show_cursor00);
   tolua_function(tolua_S,"show_insert_position",tolua_fltk_fltk_Fl_Text_Display_show_insert_position00);
   tolua_function(tolua_S,"skip_lines",tolua_fltk_fltk_Fl_Text_Display_skip_lines00);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Text_Display_textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Text_Display_textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Text_Display_textsize00);
   tolua_function(tolua_S,"word_end",tolua_fltk_fltk_Fl_Text_Display_word_end00);
   tolua_function(tolua_S,"word_start",tolua_fltk_fltk_Fl_Text_Display_word_start00);
   tolua_function(tolua_S,"wrap_mode",tolua_fltk_fltk_Fl_Text_Display_wrap_mode00);
   tolua_function(tolua_S,"wrapped_column",tolua_fltk_fltk_Fl_Text_Display_wrapped_column00);
   tolua_function(tolua_S,"wrapped_row",tolua_fltk_fltk_Fl_Text_Display_wrapped_row00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Text_Display","Lua__Fl_Text_Display","Fl_Text_Display",tolua_collect_Lua__Fl_Text_Display);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Text_Display","Lua__Fl_Text_Display","Fl_Text_Display",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Text_Display");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Text_Display_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Text_Display__handle",tolua_fltk_fltk_Lua__Fl_Text_Display_Fl_Text_Display__handle00);
   tolua_function(tolua_S,"Fl_Text_Display__resize",tolua_fltk_fltk_Lua__Fl_Text_Display_Fl_Text_Display__resize00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Text_Display_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Text_Display_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Text_Display_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Text_Editor","Fl_Text_Editor","Fl_Text_Display",tolua_collect_Fl_Text_Editor);
  #else
  tolua_cclass(tolua_S,"Fl_Text_Editor","Fl_Text_Editor","Fl_Text_Display",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Text_Editor");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Text_Editor_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Text_Editor_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Text_Editor_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Text_Editor_handle00);
   tolua_function(tolua_S,"insert_mode",tolua_fltk_fltk_Fl_Text_Editor_insert_mode01);
   tolua_function(tolua_S,"kf_backspace",tolua_fltk_fltk_Fl_Text_Editor_kf_backspace00);
   tolua_function(tolua_S,"kf_c_s_move",tolua_fltk_fltk_Fl_Text_Editor_kf_c_s_move00);
   tolua_function(tolua_S,"kf_copy",tolua_fltk_fltk_Fl_Text_Editor_kf_copy00);
   tolua_function(tolua_S,"kf_ctrl_move",tolua_fltk_fltk_Fl_Text_Editor_kf_ctrl_move00);
   tolua_function(tolua_S,"kf_cut",tolua_fltk_fltk_Fl_Text_Editor_kf_cut00);
   tolua_function(tolua_S,"kf_default",tolua_fltk_fltk_Fl_Text_Editor_kf_default00);
   tolua_function(tolua_S,"kf_delete",tolua_fltk_fltk_Fl_Text_Editor_kf_delete00);
   tolua_function(tolua_S,"kf_down",tolua_fltk_fltk_Fl_Text_Editor_kf_down00);
   tolua_function(tolua_S,"kf_end",tolua_fltk_fltk_Fl_Text_Editor_kf_end00);
   tolua_function(tolua_S,"kf_enter",tolua_fltk_fltk_Fl_Text_Editor_kf_enter00);
   tolua_function(tolua_S,"kf_home",tolua_fltk_fltk_Fl_Text_Editor_kf_home00);
   tolua_function(tolua_S,"kf_ignore",tolua_fltk_fltk_Fl_Text_Editor_kf_ignore00);
   tolua_function(tolua_S,"kf_insert",tolua_fltk_fltk_Fl_Text_Editor_kf_insert00);
   tolua_function(tolua_S,"kf_left",tolua_fltk_fltk_Fl_Text_Editor_kf_left00);
   tolua_function(tolua_S,"kf_m_s_move",tolua_fltk_fltk_Fl_Text_Editor_kf_m_s_move00);
   tolua_function(tolua_S,"kf_meta_move",tolua_fltk_fltk_Fl_Text_Editor_kf_meta_move00);
   tolua_function(tolua_S,"kf_move",tolua_fltk_fltk_Fl_Text_Editor_kf_move00);
   tolua_function(tolua_S,"kf_page_down",tolua_fltk_fltk_Fl_Text_Editor_kf_page_down00);
   tolua_function(tolua_S,"kf_page_up",tolua_fltk_fltk_Fl_Text_Editor_kf_page_up00);
   tolua_function(tolua_S,"kf_paste",tolua_fltk_fltk_Fl_Text_Editor_kf_paste00);
   tolua_function(tolua_S,"kf_right",tolua_fltk_fltk_Fl_Text_Editor_kf_right00);
   tolua_function(tolua_S,"kf_select_all",tolua_fltk_fltk_Fl_Text_Editor_kf_select_all00);
   tolua_function(tolua_S,"kf_shift_move",tolua_fltk_fltk_Fl_Text_Editor_kf_shift_move00);
   tolua_function(tolua_S,"kf_undo",tolua_fltk_fltk_Fl_Text_Editor_kf_undo00);
   tolua_function(tolua_S,"kf_up",tolua_fltk_fltk_Fl_Text_Editor_kf_up00);
   tolua_function(tolua_S,"remove_all_key_bindings",tolua_fltk_fltk_Fl_Text_Editor_remove_all_key_bindings00);
   tolua_function(tolua_S,"remove_key_binding",tolua_fltk_fltk_Fl_Text_Editor_remove_key_binding00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Text_Editor","Lua__Fl_Text_Editor","Fl_Text_Editor",tolua_collect_Lua__Fl_Text_Editor);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Text_Editor","Lua__Fl_Text_Editor","Fl_Text_Editor",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Text_Editor");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Text_Editor_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Text_Editor__handle",tolua_fltk_fltk_Lua__Fl_Text_Editor_Fl_Text_Editor__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Text_Editor_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Text_Editor_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Text_Editor_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Text_Selection","Fl_Text_Selection","",NULL);
  tolua_beginmodule(tolua_S,"Fl_Text_Selection");
   tolua_function(tolua_S,"endd",tolua_fltk_fltk_Fl_Text_Selection_endd00);
   tolua_function(tolua_S,"includes",tolua_fltk_fltk_Fl_Text_Selection_includes00);
   tolua_function(tolua_S,"position",tolua_fltk_fltk_Fl_Text_Selection_position01);
   tolua_function(tolua_S,"rect_end",tolua_fltk_fltk_Fl_Text_Selection_rect_end00);
   tolua_function(tolua_S,"rect_start",tolua_fltk_fltk_Fl_Text_Selection_rect_start00);
   tolua_function(tolua_S,"rectangular",tolua_fltk_fltk_Fl_Text_Selection_rectangular00);
   tolua_function(tolua_S,"selected",tolua_fltk_fltk_Fl_Text_Selection_selected00);
   tolua_function(tolua_S,"set",tolua_fltk_fltk_Fl_Text_Selection_set00);
   tolua_function(tolua_S,"set_rectangular",tolua_fltk_fltk_Fl_Text_Selection_set_rectangular00);
   tolua_function(tolua_S,"start",tolua_fltk_fltk_Fl_Text_Selection_start00);
   tolua_function(tolua_S,"update",tolua_fltk_fltk_Fl_Text_Selection_update00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Tile","Fl_Tile","Fl_Group",tolua_collect_Fl_Tile);
  #else
  tolua_cclass(tolua_S,"Fl_Tile","Fl_Tile","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Tile");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Tile_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Tile_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Tile_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Tile_handle00);
   tolua_function(tolua_S,"position",tolua_fltk_fltk_Fl_Tile_position00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Tile_resize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Tile","Lua__Fl_Tile","Fl_Tile",tolua_collect_Lua__Fl_Tile);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Tile","Lua__Fl_Tile","Fl_Tile",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Tile");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Tile_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Tile__handle",tolua_fltk_fltk_Lua__Fl_Tile_Fl_Tile__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Tile_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Tile_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Tile_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Tiled_Image","Fl_Tiled_Image","Fl_Image",tolua_collect_Fl_Tiled_Image);
  #else
  tolua_cclass(tolua_S,"Fl_Tiled_Image","Fl_Tiled_Image","Fl_Image",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Tiled_Image");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Tiled_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Tiled_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Tiled_Image_new00_local);
   tolua_function(tolua_S,"color_average",tolua_fltk_fltk_Fl_Tiled_Image_color_average00);
   tolua_function(tolua_S,"copy",tolua_fltk_fltk_Fl_Tiled_Image_copy01);
   tolua_function(tolua_S,"desaturate",tolua_fltk_fltk_Fl_Tiled_Image_desaturate00);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_Tiled_Image_draw01);
   tolua_function(tolua_S,"image",tolua_fltk_fltk_Fl_Tiled_Image_image00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Tiled_Image","Lua__Fl_Tiled_Image","Fl_Tiled_Image",tolua_collect_Lua__Fl_Tiled_Image);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Tiled_Image","Lua__Fl_Tiled_Image","Fl_Tiled_Image",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Tiled_Image");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Tiled_Image_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Tiled_Image__color_average",tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__color_average00);
   tolua_function(tolua_S,"Fl_Tiled_Image__copy",tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__copy00);
   tolua_function(tolua_S,"Fl_Tiled_Image__desaturate",tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__desaturate00);
   tolua_function(tolua_S,"Fl_Tiled_Image__draw",tolua_fltk_fltk_Lua__Fl_Tiled_Image_Fl_Tiled_Image__draw00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Tiled_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Tiled_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Tiled_Image_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Toggle_Button","Fl_Toggle_Button","Fl_Button",tolua_collect_Fl_Toggle_Button);
  #else
  tolua_cclass(tolua_S,"Fl_Toggle_Button","Fl_Toggle_Button","Fl_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Toggle_Button");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Toggle_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Toggle_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Toggle_Button_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Tooltip","Fl_Tooltip","",NULL);
  tolua_beginmodule(tolua_S,"Fl_Tooltip");
   tolua_function(tolua_S,"color",tolua_fltk_fltk_Fl_Tooltip_color00);
   tolua_function(tolua_S,"current",tolua_fltk_fltk_Fl_Tooltip_current00);
   tolua_function(tolua_S,"delay",tolua_fltk_fltk_Fl_Tooltip_delay00);
   tolua_function(tolua_S,"disable",tolua_fltk_fltk_Fl_Tooltip_disable00);
   tolua_function(tolua_S,"enable",tolua_fltk_fltk_Fl_Tooltip_enable00);
   tolua_function(tolua_S,"enabled",tolua_fltk_fltk_Fl_Tooltip_enabled00);
   tolua_function(tolua_S,"enter_area",tolua_fltk_fltk_Fl_Tooltip_enter_area00);
   tolua_function(tolua_S,"font",tolua_fltk_fltk_Fl_Tooltip_font00);
   tolua_function(tolua_S,"hoverdelay",tolua_fltk_fltk_Fl_Tooltip_hoverdelay00);
   tolua_function(tolua_S,"size",tolua_fltk_fltk_Fl_Tooltip_size00);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Tooltip_textcolor00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Tree","Fl_Tree","Fl_Group",tolua_collect_Fl_Tree);
  #else
  tolua_cclass(tolua_S,"Fl_Tree","Fl_Tree","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Tree");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Tree_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Tree_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Tree_new00_local);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Tree_add00);
   tolua_function(tolua_S,"add2",tolua_fltk_fltk_Fl_Tree_add200);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Tree_clear00);
   tolua_function(tolua_S,"clear_children",tolua_fltk_fltk_Fl_Tree_clear_children00);
   tolua_function(tolua_S,"close",tolua_fltk_fltk_Fl_Tree_close01);
   tolua_function(tolua_S,"closeicon",tolua_fltk_fltk_Fl_Tree_closeicon00);
   tolua_function(tolua_S,"connectorstyle",tolua_fltk_fltk_Fl_Tree_connectorstyle00);
   tolua_function(tolua_S,"connectorwidth",tolua_fltk_fltk_Fl_Tree_connectorwidth00);
   tolua_function(tolua_S,"deselect",tolua_fltk_fltk_Fl_Tree_deselect01);
   tolua_function(tolua_S,"deselect_all",tolua_fltk_fltk_Fl_Tree_deselect_all00);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_Tree_draw00);
   tolua_function(tolua_S,"find_clicked",tolua_fltk_fltk_Fl_Tree_find_clicked00);
   tolua_function(tolua_S,"find_item",tolua_fltk_fltk_Fl_Tree_find_item00);
   tolua_function(tolua_S,"first",tolua_fltk_fltk_Fl_Tree_first00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Tree_handle00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Tree_insert00);
   tolua_function(tolua_S,"insert_above",tolua_fltk_fltk_Fl_Tree_insert_above00);
   tolua_function(tolua_S,"is_close",tolua_fltk_fltk_Fl_Tree_is_close01);
   tolua_function(tolua_S,"is_open",tolua_fltk_fltk_Fl_Tree_is_open01);
   tolua_function(tolua_S,"is_selected",tolua_fltk_fltk_Fl_Tree_is_selected01);
   tolua_function(tolua_S,"item_clicked",tolua_fltk_fltk_Fl_Tree_item_clicked00);
   tolua_function(tolua_S,"labelfont",tolua_fltk_fltk_Fl_Tree_labelfont00);
   tolua_function(tolua_S,"labelsize",tolua_fltk_fltk_Fl_Tree_labelsize00);
   tolua_function(tolua_S,"last",tolua_fltk_fltk_Fl_Tree_last00);
   tolua_function(tolua_S,"marginleft",tolua_fltk_fltk_Fl_Tree_marginleft00);
   tolua_function(tolua_S,"margintop",tolua_fltk_fltk_Fl_Tree_margintop00);
   tolua_function(tolua_S,"open",tolua_fltk_fltk_Fl_Tree_open01);
   tolua_function(tolua_S,"openchild_marginbottom",tolua_fltk_fltk_Fl_Tree_openchild_marginbottom00);
   tolua_function(tolua_S,"openicon",tolua_fltk_fltk_Fl_Tree_openicon00);
   tolua_function(tolua_S,"parent",tolua_fltk_fltk_Fl_Tree_parent00);
   tolua_function(tolua_S,"remove",tolua_fltk_fltk_Fl_Tree_remove00);
   tolua_function(tolua_S,"root",tolua_fltk_fltk_Fl_Tree_root00);
   tolua_function(tolua_S,"root_label",tolua_fltk_fltk_Fl_Tree_root_label00);
   tolua_function(tolua_S,"select",tolua_fltk_fltk_Fl_Tree_select01);
   tolua_function(tolua_S,"select_all",tolua_fltk_fltk_Fl_Tree_select_all00);
   tolua_function(tolua_S,"select_only",tolua_fltk_fltk_Fl_Tree_select_only00);
   tolua_function(tolua_S,"select_toggle",tolua_fltk_fltk_Fl_Tree_select_toggle00);
   tolua_function(tolua_S,"selectbox",tolua_fltk_fltk_Fl_Tree_selectbox00);
   tolua_function(tolua_S,"selectmode",tolua_fltk_fltk_Fl_Tree_selectmode00);
   tolua_function(tolua_S,"show_self",tolua_fltk_fltk_Fl_Tree_show_self00);
   tolua_function(tolua_S,"showcollapse",tolua_fltk_fltk_Fl_Tree_showcollapse00);
   tolua_function(tolua_S,"showroot",tolua_fltk_fltk_Fl_Tree_showroot00);
   tolua_function(tolua_S,"sortorder",tolua_fltk_fltk_Fl_Tree_sortorder00);
   tolua_function(tolua_S,"usericon",tolua_fltk_fltk_Fl_Tree_usericon00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Tree","Lua__Fl_Tree","Fl_Tree",tolua_collect_Lua__Fl_Tree);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Tree","Lua__Fl_Tree","Fl_Tree",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Tree");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Tree_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Tree__handle",tolua_fltk_fltk_Lua__Fl_Tree_Fl_Tree__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Tree_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Tree_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Tree_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Tree_Item","Fl_Tree_Item","",tolua_collect_Fl_Tree_Item);
  #else
  tolua_cclass(tolua_S,"Fl_Tree_Item","Fl_Tree_Item","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Tree_Item");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Tree_Item_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Tree_Item_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Tree_Item_new01_local);
   tolua_function(tolua_S,"activate",tolua_fltk_fltk_Fl_Tree_Item_activate00);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Tree_Item_add01);
   tolua_function(tolua_S,"child",tolua_fltk_fltk_Fl_Tree_Item_child00);
   tolua_function(tolua_S,"children",tolua_fltk_fltk_Fl_Tree_Item_children00);
   tolua_function(tolua_S,"clear_children",tolua_fltk_fltk_Fl_Tree_Item_clear_children00);
   tolua_function(tolua_S,"close",tolua_fltk_fltk_Fl_Tree_Item_close00);
   tolua_function(tolua_S,"deactivate",tolua_fltk_fltk_Fl_Tree_Item_deactivate00);
   tolua_function(tolua_S,"depth",tolua_fltk_fltk_Fl_Tree_Item_depth00);
   tolua_function(tolua_S,"deselect",tolua_fltk_fltk_Fl_Tree_Item_deselect00);
   tolua_function(tolua_S,"deselect_all",tolua_fltk_fltk_Fl_Tree_Item_deselect_all00);
   tolua_function(tolua_S,"draw",tolua_fltk_fltk_Fl_Tree_Item_draw00);
   tolua_function(tolua_S,"event_on_collapse_icon",tolua_fltk_fltk_Fl_Tree_Item_event_on_collapse_icon00);
   tolua_function(tolua_S,"event_on_label",tolua_fltk_fltk_Fl_Tree_Item_event_on_label00);
   tolua_function(tolua_S,"find_child",tolua_fltk_fltk_Fl_Tree_Item_find_child01);
   tolua_function(tolua_S,"find_clicked",tolua_fltk_fltk_Fl_Tree_Item_find_clicked00);
   tolua_function(tolua_S,"find_item",tolua_fltk_fltk_Fl_Tree_Item_find_item00);
   tolua_function(tolua_S,"has_children",tolua_fltk_fltk_Fl_Tree_Item_has_children00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Tree_Item_insert00);
   tolua_function(tolua_S,"insert_above",tolua_fltk_fltk_Fl_Tree_Item_insert_above00);
   tolua_function(tolua_S,"is_activated",tolua_fltk_fltk_Fl_Tree_Item_is_activated00);
   tolua_function(tolua_S,"is_active",tolua_fltk_fltk_Fl_Tree_Item_is_active00);
   tolua_function(tolua_S,"is_close",tolua_fltk_fltk_Fl_Tree_Item_is_close00);
   tolua_function(tolua_S,"is_open",tolua_fltk_fltk_Fl_Tree_Item_is_open00);
   tolua_function(tolua_S,"is_root",tolua_fltk_fltk_Fl_Tree_Item_is_root00);
   tolua_function(tolua_S,"is_selected",tolua_fltk_fltk_Fl_Tree_Item_is_selected00);
   tolua_function(tolua_S,"label",tolua_fltk_fltk_Fl_Tree_Item_label00);
   tolua_function(tolua_S,"labelbgcolor",tolua_fltk_fltk_Fl_Tree_Item_labelbgcolor00);
   tolua_function(tolua_S,"labelcolor",tolua_fltk_fltk_Fl_Tree_Item_labelcolor00);
   tolua_function(tolua_S,"labelfgcolor",tolua_fltk_fltk_Fl_Tree_Item_labelfgcolor00);
   tolua_function(tolua_S,"labelfont",tolua_fltk_fltk_Fl_Tree_Item_labelfont00);
   tolua_function(tolua_S,"labelsize",tolua_fltk_fltk_Fl_Tree_Item_labelsize00);
   tolua_function(tolua_S,"next",tolua_fltk_fltk_Fl_Tree_Item_next00);
   tolua_function(tolua_S,"open",tolua_fltk_fltk_Fl_Tree_Item_open00);
   tolua_function(tolua_S,"open_toggle",tolua_fltk_fltk_Fl_Tree_Item_open_toggle00);
   tolua_function(tolua_S,"parent",tolua_fltk_fltk_Fl_Tree_Item_parent00);
   tolua_function(tolua_S,"prev",tolua_fltk_fltk_Fl_Tree_Item_prev00);
   tolua_function(tolua_S,"remove_child",tolua_fltk_fltk_Fl_Tree_Item_remove_child01);
   tolua_function(tolua_S,"select",tolua_fltk_fltk_Fl_Tree_Item_select00);
   tolua_function(tolua_S,"select_all",tolua_fltk_fltk_Fl_Tree_Item_select_all00);
   tolua_function(tolua_S,"select_toggle",tolua_fltk_fltk_Fl_Tree_Item_select_toggle00);
   tolua_function(tolua_S,"show_self",tolua_fltk_fltk_Fl_Tree_Item_show_self00);
   tolua_function(tolua_S,"swap_children",tolua_fltk_fltk_Fl_Tree_Item_swap_children01);
   tolua_function(tolua_S,"user_data",tolua_fltk_fltk_Fl_Tree_Item_user_data00);
   tolua_function(tolua_S,"usericon",tolua_fltk_fltk_Fl_Tree_Item_usericon00);
   tolua_function(tolua_S,"widget",tolua_fltk_fltk_Fl_Tree_Item_widget00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Tree_Item_Array","Fl_Tree_Item_Array","",tolua_collect_Fl_Tree_Item_Array);
  #else
  tolua_cclass(tolua_S,"Fl_Tree_Item_Array","Fl_Tree_Item_Array","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Tree_Item_Array");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Tree_Item_Array_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Tree_Item_Array_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Tree_Item_Array_new01_local);
   tolua_function(tolua_S,"add",tolua_fltk_fltk_Fl_Tree_Item_Array_add00);
   tolua_function(tolua_S,"clear",tolua_fltk_fltk_Fl_Tree_Item_Array_clear00);
   tolua_function(tolua_S,"insert",tolua_fltk_fltk_Fl_Tree_Item_Array_insert00);
   tolua_function(tolua_S,"remove",tolua_fltk_fltk_Fl_Tree_Item_Array_remove01);
   tolua_function(tolua_S,"swap",tolua_fltk_fltk_Fl_Tree_Item_Array_swap00);
   tolua_function(tolua_S,"total",tolua_fltk_fltk_Fl_Tree_Item_Array_total00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"FL_TREE_SORT_NONE",FL_TREE_SORT_NONE);
  tolua_constant(tolua_S,"FL_TREE_SORT_ASCENDING",FL_TREE_SORT_ASCENDING);
  tolua_constant(tolua_S,"FL_TREE_SORT_DESCENDING",FL_TREE_SORT_DESCENDING);
  tolua_constant(tolua_S,"FL_TREE_CONNECTOR_NONE",FL_TREE_CONNECTOR_NONE);
  tolua_constant(tolua_S,"FL_TREE_CONNECTOR_DOTTED",FL_TREE_CONNECTOR_DOTTED);
  tolua_constant(tolua_S,"FL_TREE_CONNECTOR_SOLID",FL_TREE_CONNECTOR_SOLID);
  tolua_constant(tolua_S,"FL_TREE_SELECT_NONE",FL_TREE_SELECT_NONE);
  tolua_constant(tolua_S,"FL_TREE_SELECT_SINGLE",FL_TREE_SELECT_SINGLE);
  tolua_constant(tolua_S,"FL_TREE_SELECT_MULTI",FL_TREE_SELECT_MULTI);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Tree_Prefs","Fl_Tree_Prefs","",tolua_collect_Fl_Tree_Prefs);
  #else
  tolua_cclass(tolua_S,"Fl_Tree_Prefs","Fl_Tree_Prefs","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Tree_Prefs");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Tree_Prefs_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Tree_Prefs_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Tree_Prefs_new00_local);
   tolua_function(tolua_S,"bgcolor",tolua_fltk_fltk_Fl_Tree_Prefs_bgcolor00);
   tolua_function(tolua_S,"closeicon",tolua_fltk_fltk_Fl_Tree_Prefs_closeicon01);
   tolua_function(tolua_S,"connectorcolor",tolua_fltk_fltk_Fl_Tree_Prefs_connectorcolor00);
   tolua_function(tolua_S,"connectorstyle",tolua_fltk_fltk_Fl_Tree_Prefs_connectorstyle00);
   tolua_function(tolua_S,"connectorwidth",tolua_fltk_fltk_Fl_Tree_Prefs_connectorwidth00);
   tolua_function(tolua_S,"fgcolor",tolua_fltk_fltk_Fl_Tree_Prefs_fgcolor00);
   tolua_function(tolua_S,"inactivecolor",tolua_fltk_fltk_Fl_Tree_Prefs_inactivecolor00);
   tolua_function(tolua_S,"labelfont",tolua_fltk_fltk_Fl_Tree_Prefs_labelfont00);
   tolua_function(tolua_S,"labelmarginleft",tolua_fltk_fltk_Fl_Tree_Prefs_labelmarginleft00);
   tolua_function(tolua_S,"labelsize",tolua_fltk_fltk_Fl_Tree_Prefs_labelsize00);
   tolua_function(tolua_S,"linespacing",tolua_fltk_fltk_Fl_Tree_Prefs_linespacing00);
   tolua_function(tolua_S,"marginleft",tolua_fltk_fltk_Fl_Tree_Prefs_marginleft00);
   tolua_function(tolua_S,"margintop",tolua_fltk_fltk_Fl_Tree_Prefs_margintop00);
   tolua_function(tolua_S,"openchild_marginbottom",tolua_fltk_fltk_Fl_Tree_Prefs_openchild_marginbottom00);
   tolua_function(tolua_S,"openicon",tolua_fltk_fltk_Fl_Tree_Prefs_openicon00);
   tolua_function(tolua_S,"selectbox",tolua_fltk_fltk_Fl_Tree_Prefs_selectbox00);
   tolua_function(tolua_S,"selectcolor",tolua_fltk_fltk_Fl_Tree_Prefs_selectcolor00);
   tolua_function(tolua_S,"selectmode",tolua_fltk_fltk_Fl_Tree_Prefs_selectmode00);
   tolua_function(tolua_S,"showcollapse",tolua_fltk_fltk_Fl_Tree_Prefs_showcollapse00);
   tolua_function(tolua_S,"showroot",tolua_fltk_fltk_Fl_Tree_Prefs_showroot00);
   tolua_function(tolua_S,"sortorder",tolua_fltk_fltk_Fl_Tree_Prefs_sortorder00);
   tolua_function(tolua_S,"usericon",tolua_fltk_fltk_Fl_Tree_Prefs_usericon00);
   tolua_function(tolua_S,"usericonmarginleft",tolua_fltk_fltk_Fl_Tree_Prefs_usericonmarginleft00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Valuator","Fl_Valuator","Fl_Widget",NULL);
  tolua_beginmodule(tolua_S,"Fl_Valuator");
   tolua_function(tolua_S,"bounds",tolua_fltk_fltk_Fl_Valuator_bounds00);
   tolua_function(tolua_S,"clamp",tolua_fltk_fltk_Fl_Valuator_clamp00);
   tolua_function(tolua_S,"format",tolua_fltk_fltk_Fl_Valuator_format00);
   tolua_function(tolua_S,"increment",tolua_fltk_fltk_Fl_Valuator_increment00);
   tolua_function(tolua_S,"maximum",tolua_fltk_fltk_Fl_Valuator_maximum00);
   tolua_function(tolua_S,"minimum",tolua_fltk_fltk_Fl_Valuator_minimum00);
   tolua_function(tolua_S,"precision",tolua_fltk_fltk_Fl_Valuator_precision00);
   tolua_function(tolua_S,"range",tolua_fltk_fltk_Fl_Valuator_range00);
   tolua_function(tolua_S,"round",tolua_fltk_fltk_Fl_Valuator_round00);
   tolua_function(tolua_S,"step_int",tolua_fltk_fltk_Fl_Valuator_step_int00);
   tolua_function(tolua_S,"step",tolua_fltk_fltk_Fl_Valuator_step00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Valuator_value00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Lua__Fl_Valuator","Lua__Fl_Valuator","Fl_Valuator",NULL);
  tolua_beginmodule(tolua_S,"Lua__Fl_Valuator");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Valuator_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Valuator__format",tolua_fltk_fltk_Lua__Fl_Valuator_Fl_Valuator__format00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Adjuster","Fl_Adjuster","Fl_Valuator",tolua_collect_Fl_Adjuster);
  #else
  tolua_cclass(tolua_S,"Fl_Adjuster","Fl_Adjuster","Fl_Valuator",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Adjuster");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Adjuster_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Adjuster_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Adjuster_new00_local);
   tolua_function(tolua_S,"soft",tolua_fltk_fltk_Fl_Adjuster_soft01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Counter","Fl_Counter","Fl_Valuator",tolua_collect_Fl_Counter);
  #else
  tolua_cclass(tolua_S,"Fl_Counter","Fl_Counter","Fl_Valuator",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Counter");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Counter_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Counter_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Counter_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Counter_handle00);
   tolua_function(tolua_S,"lstep",tolua_fltk_fltk_Fl_Counter_lstep00);
   tolua_function(tolua_S,"step",tolua_fltk_fltk_Fl_Counter_step02);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Counter_textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Counter_textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Counter_textsize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Counter","Lua__Fl_Counter","Fl_Counter",tolua_collect_Lua__Fl_Counter);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Counter","Lua__Fl_Counter","Fl_Counter",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Counter");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Counter_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Counter__handle",tolua_fltk_fltk_Lua__Fl_Counter_Fl_Counter__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Counter_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Counter_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Counter_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Dial","Fl_Dial","Fl_Valuator",tolua_collect_Fl_Dial);
  #else
  tolua_cclass(tolua_S,"Fl_Dial","Fl_Dial","Fl_Valuator",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Dial");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Dial_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Dial_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Dial_new00_local);
   tolua_function(tolua_S,"angle1",tolua_fltk_fltk_Fl_Dial_angle100);
   tolua_function(tolua_S,"angle2",tolua_fltk_fltk_Fl_Dial_angle200);
   tolua_function(tolua_S,"angles",tolua_fltk_fltk_Fl_Dial_angles00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Dial_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Dial","Lua__Fl_Dial","Fl_Dial",tolua_collect_Lua__Fl_Dial);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Dial","Lua__Fl_Dial","Fl_Dial",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Dial");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Dial_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Dial__handle",tolua_fltk_fltk_Lua__Fl_Dial_Fl_Dial__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Dial_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Dial_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Dial_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Value_Input","Fl_Value_Input","Fl_Valuator",tolua_collect_Fl_Value_Input);
  #else
  tolua_cclass(tolua_S,"Fl_Value_Input","Fl_Value_Input","Fl_Valuator",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Value_Input");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Value_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Value_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Value_Input_new00_local);
   tolua_function(tolua_S,"cursor_color",tolua_fltk_fltk_Fl_Value_Input_cursor_color01);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Value_Input_handle00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Value_Input_resize00);
   tolua_function(tolua_S,"shortcut",tolua_fltk_fltk_Fl_Value_Input_shortcut00);
   tolua_function(tolua_S,"soft",tolua_fltk_fltk_Fl_Value_Input_soft00);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Value_Input_textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Value_Input_textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Value_Input_textsize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Value_Input","Lua__Fl_Value_Input","Fl_Value_Input",tolua_collect_Lua__Fl_Value_Input);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Value_Input","Lua__Fl_Value_Input","Fl_Value_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Value_Input");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Value_Input_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Value_Input__handle",tolua_fltk_fltk_Lua__Fl_Value_Input_Fl_Value_Input__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Value_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Value_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Value_Input_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Value_Output","Fl_Value_Output","Fl_Valuator",tolua_collect_Fl_Value_Output);
  #else
  tolua_cclass(tolua_S,"Fl_Value_Output","Fl_Value_Output","Fl_Valuator",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Value_Output");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Value_Output_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Value_Output_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Value_Output_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Value_Output_handle00);
   tolua_function(tolua_S,"soft",tolua_fltk_fltk_Fl_Value_Output_soft00);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Value_Output_textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Value_Output_textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Value_Output_textsize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Window","Fl_Window","Fl_Group",tolua_collect_Fl_Window);
  #else
  tolua_cclass(tolua_S,"Fl_Window","Fl_Window","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Window");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Window_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Window_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Window_new01_local);
   tolua_function(tolua_S,"as_window",tolua_fltk_fltk_Fl_Window_as_window00);
   tolua_function(tolua_S,"border",tolua_fltk_fltk_Fl_Window_border00);
   tolua_function(tolua_S,"clear_border",tolua_fltk_fltk_Fl_Window_clear_border00);
   tolua_function(tolua_S,"copy_label",tolua_fltk_fltk_Fl_Window_copy_label00);
   tolua_function(tolua_S,"current",tolua_fltk_fltk_Fl_Window_current00);
   tolua_function(tolua_S,"cursor",tolua_fltk_fltk_Fl_Window_cursor00);
   tolua_function(tolua_S,"default_callback",tolua_fltk_fltk_Fl_Window_default_callback00);
   tolua_function(tolua_S,"default_cursor",tolua_fltk_fltk_Fl_Window_default_cursor00);
   tolua_function(tolua_S,"free_position",tolua_fltk_fltk_Fl_Window_free_position00);
   tolua_function(tolua_S,"fullscreen",tolua_fltk_fltk_Fl_Window_fullscreen00);
   tolua_function(tolua_S,"fullscreen_off",tolua_fltk_fltk_Fl_Window_fullscreen_off00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Window_handle00);
   tolua_function(tolua_S,"hide",tolua_fltk_fltk_Fl_Window_hide00);
   tolua_function(tolua_S,"hotspot",tolua_fltk_fltk_Fl_Window_hotspot01);
   tolua_function(tolua_S,"icon",tolua_fltk_fltk_Fl_Window_icon00);
   tolua_function(tolua_S,"load_icon",tolua_fltk_fltk_Fl_Window_load_icon00);
   tolua_function(tolua_S,"iconize",tolua_fltk_fltk_Fl_Window_iconize00);
   tolua_function(tolua_S,"iconlabel",tolua_fltk_fltk_Fl_Window_iconlabel00);
   tolua_function(tolua_S,"label",tolua_fltk_fltk_Fl_Window_label00);
   tolua_function(tolua_S,"make_current",tolua_fltk_fltk_Fl_Window_make_current00);
   tolua_function(tolua_S,"menu_window",tolua_fltk_fltk_Fl_Window_menu_window00);
   tolua_function(tolua_S,"modal",tolua_fltk_fltk_Fl_Window_modal00);
   tolua_function(tolua_S,"non_modal",tolua_fltk_fltk_Fl_Window_non_modal00);
   tolua_function(tolua_S,"override",tolua_fltk_fltk_Fl_Window_override00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Window_resize00);
   tolua_function(tolua_S,"set_menu_window",tolua_fltk_fltk_Fl_Window_set_menu_window00);
   tolua_function(tolua_S,"set_modal",tolua_fltk_fltk_Fl_Window_set_modal00);
   tolua_function(tolua_S,"set_non_modal",tolua_fltk_fltk_Fl_Window_set_non_modal00);
   tolua_function(tolua_S,"set_override",tolua_fltk_fltk_Fl_Window_set_override00);
   tolua_function(tolua_S,"set_tooltip_window",tolua_fltk_fltk_Fl_Window_set_tooltip_window00);
   tolua_function(tolua_S,"show",tolua_fltk_fltk_Fl_Window_show00);
   tolua_function(tolua_S,"show_main",tolua_fltk_fltk_Fl_Window_show_main00);
   tolua_function(tolua_S,"shown",tolua_fltk_fltk_Fl_Window_shown00);
   tolua_function(tolua_S,"size_range",tolua_fltk_fltk_Fl_Window_size_range00);
   tolua_function(tolua_S,"tooltip_window",tolua_fltk_fltk_Fl_Window_tooltip_window00);
   tolua_function(tolua_S,"x_root",tolua_fltk_fltk_Fl_Window_x_root00);
   tolua_function(tolua_S,"xclass",tolua_fltk_fltk_Fl_Window_xclass00);
   tolua_function(tolua_S,"y_root",tolua_fltk_fltk_Fl_Window_y_root00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Window","Lua__Fl_Window","Fl_Window",tolua_collect_Lua__Fl_Window);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Window","Lua__Fl_Window","Fl_Window",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Window");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Window_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Window__as_window",tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__as_window00);
   tolua_function(tolua_S,"Fl_Window__handle",tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__handle00);
   tolua_function(tolua_S,"Fl_Window__hide",tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__hide00);
   tolua_function(tolua_S,"Fl_Window__resize",tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__resize00);
   tolua_function(tolua_S,"Fl_Window__show",tolua_fltk_fltk_Lua__Fl_Window_Fl_Window__show00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Window_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Window_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Window_new01_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Wizard","Fl_Wizard","Fl_Group",tolua_collect_Fl_Wizard);
  #else
  tolua_cclass(tolua_S,"Fl_Wizard","Fl_Wizard","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Wizard");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Wizard_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Wizard_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Wizard_new00_local);
   tolua_function(tolua_S,"next",tolua_fltk_fltk_Fl_Wizard_next00);
   tolua_function(tolua_S,"prev",tolua_fltk_fltk_Fl_Wizard_prev00);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Wizard_value00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_XBM_Image","Fl_XBM_Image","Fl_Bitmap",tolua_collect_Fl_XBM_Image);
  #else
  tolua_cclass(tolua_S,"Fl_XBM_Image","Fl_XBM_Image","Fl_Bitmap",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_XBM_Image");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_XBM_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_XBM_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_XBM_Image_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_XPM_Image","Fl_XPM_Image","Fl_Pixmap",tolua_collect_Fl_XPM_Image);
  #else
  tolua_cclass(tolua_S,"Fl_XPM_Image","Fl_XPM_Image","Fl_Pixmap",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_XPM_Image");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_XPM_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_XPM_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_XPM_Image_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Flcc_HueBox","Flcc_HueBox","Fl_Widget",tolua_collect_Flcc_HueBox);
  #else
  tolua_cclass(tolua_S,"Flcc_HueBox","Flcc_HueBox","Fl_Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Flcc_HueBox");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Flcc_HueBox_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Flcc_HueBox_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Flcc_HueBox_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Flcc_HueBox_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Flcc_ValueBox","Flcc_ValueBox","Fl_Widget",tolua_collect_Flcc_ValueBox);
  #else
  tolua_cclass(tolua_S,"Flcc_ValueBox","Flcc_ValueBox","Fl_Widget",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Flcc_ValueBox");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Flcc_ValueBox_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Flcc_ValueBox_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Flcc_ValueBox_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Flcc_ValueBox_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Flcc_Value_Input","Flcc_Value_Input","Fl_Value_Input",tolua_collect_Flcc_Value_Input);
  #else
  tolua_cclass(tolua_S,"Flcc_Value_Input","Flcc_Value_Input","Fl_Value_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Flcc_Value_Input");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Flcc_Value_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Flcc_Value_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Flcc_Value_Input_new00_local);
   tolua_function(tolua_S,"format",tolua_fltk_fltk_Flcc_Value_Input_format00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl","Fl","",NULL);
  tolua_beginmodule(tolua_S,"Fl");
   tolua_variable(tolua_S,"e_number",tolua_get_Fl_e_number,tolua_set_Fl_e_number);
   tolua_variable(tolua_S,"e_x",tolua_get_Fl_e_x,tolua_set_Fl_e_x);
   tolua_variable(tolua_S,"e_y",tolua_get_Fl_e_y,tolua_set_Fl_e_y);
   tolua_variable(tolua_S,"e_x_root",tolua_get_Fl_e_x_root,tolua_set_Fl_e_x_root);
   tolua_variable(tolua_S,"e_y_root",tolua_get_Fl_e_y_root,tolua_set_Fl_e_y_root);
   tolua_variable(tolua_S,"e_dx",tolua_get_Fl_e_dx,tolua_set_Fl_e_dx);
   tolua_variable(tolua_S,"e_dy",tolua_get_Fl_e_dy,tolua_set_Fl_e_dy);
   tolua_variable(tolua_S,"e_state",tolua_get_Fl_e_state,tolua_set_Fl_e_state);
   tolua_variable(tolua_S,"e_clicks",tolua_get_Fl_e_clicks,tolua_set_Fl_e_clicks);
   tolua_variable(tolua_S,"e_is_click",tolua_get_Fl_e_is_click,tolua_set_Fl_e_is_click);
   tolua_variable(tolua_S,"e_keysym",tolua_get_Fl_e_keysym,tolua_set_Fl_e_keysym);
   tolua_variable(tolua_S,"e_text",tolua_get_Fl_e_text,tolua_set_Fl_e_text);
   tolua_variable(tolua_S,"e_length",tolua_get_Fl_e_length,tolua_set_Fl_e_length);
   tolua_variable(tolua_S,"belowmouse_",tolua_get_Fl_belowmouse__ptr,tolua_set_Fl_belowmouse__ptr);
   tolua_variable(tolua_S,"pushed_",tolua_get_Fl_pushed__ptr,tolua_set_Fl_pushed__ptr);
   tolua_variable(tolua_S,"focus_",tolua_get_Fl_focus__ptr,tolua_set_Fl_focus__ptr);
   tolua_variable(tolua_S,"damage_",tolua_get_Fl_damage_,tolua_set_Fl_damage_);
   tolua_variable(tolua_S,"selection_owner_",tolua_get_Fl_selection_owner__ptr,tolua_set_Fl_selection_owner__ptr);
   tolua_variable(tolua_S,"modal_",tolua_get_Fl_modal__ptr,tolua_set_Fl_modal__ptr);
   tolua_variable(tolua_S,"grab_",tolua_get_Fl_grab__ptr,tolua_set_Fl_grab__ptr);
   tolua_variable(tolua_S,"compose_state",tolua_get_Fl_compose_state,tolua_set_Fl_compose_state);
   tolua_variable(tolua_S,"visible_focus_",tolua_get_Fl_visible_focus_,tolua_set_Fl_visible_focus_);
   tolua_variable(tolua_S,"dnd_text_ops_",tolua_get_Fl_dnd_text_ops_,tolua_set_Fl_dnd_text_ops_);
   tolua_function(tolua_S,"add_awake_handler_",tolua_fltk_fltk_Fl_add_awake_handler_00);
   tolua_function(tolua_S,"add_check",tolua_fltk_fltk_Fl_add_check00);
   tolua_function(tolua_S,"add_fd",tolua_fltk_fltk_Fl_add_fd01);
   tolua_function(tolua_S,"add_handler",tolua_fltk_fltk_Fl_add_handler00);
   tolua_function(tolua_S,"remove_handler",tolua_fltk_fltk_Fl_remove_handler00);
   tolua_function(tolua_S,"add_idle",tolua_fltk_fltk_Fl_add_idle00);
   tolua_function(tolua_S,"remove_idle",tolua_fltk_fltk_Fl_remove_idle00);
   tolua_function(tolua_S,"add_timeout",tolua_fltk_fltk_Fl_add_timeout00);
   tolua_function(tolua_S,"remove_timeout",tolua_fltk_fltk_Fl_remove_timeout00);
   tolua_function(tolua_S,"repeat_timeout",tolua_fltk_fltk_Fl_repeat_timeout00);
   tolua_function(tolua_S,"arg",tolua_fltk_fltk_Fl_arg00);
   tolua_function(tolua_S,"awake",tolua_fltk_fltk_Fl_awake01);
   tolua_function(tolua_S,"background",tolua_fltk_fltk_Fl_background00);
   tolua_function(tolua_S,"background2",tolua_fltk_fltk_Fl_background200);
   tolua_function(tolua_S,"belowmouse",tolua_fltk_fltk_Fl_belowmouse00);
   tolua_function(tolua_S,"box_dh",tolua_fltk_fltk_Fl_box_dh00);
   tolua_function(tolua_S,"box_dw",tolua_fltk_fltk_Fl_box_dw00);
   tolua_function(tolua_S,"box_dx",tolua_fltk_fltk_Fl_box_dx00);
   tolua_function(tolua_S,"box_dy",tolua_fltk_fltk_Fl_box_dy00);
   tolua_function(tolua_S,"check",tolua_fltk_fltk_Fl_check00);
   tolua_function(tolua_S,"clear_widget_pointer",tolua_fltk_fltk_Fl_clear_widget_pointer00);
   tolua_function(tolua_S,"compose",tolua_fltk_fltk_Fl_compose00);
   tolua_function(tolua_S,"compose_reset",tolua_fltk_fltk_Fl_compose_reset00);
   tolua_function(tolua_S,"copy",tolua_fltk_fltk_Fl_copy00);
   tolua_function(tolua_S,"damage",tolua_fltk_fltk_Fl_damage00);
   tolua_function(tolua_S,"default_atclose",tolua_fltk_fltk_Fl_default_atclose00);
   tolua_function(tolua_S,"delete_widget",tolua_fltk_fltk_Fl_delete_widget00);
   tolua_function(tolua_S,"display",tolua_fltk_fltk_Fl_display00);
   tolua_function(tolua_S,"dnd",tolua_fltk_fltk_Fl_dnd00);
   tolua_function(tolua_S,"dnd_text_ops",tolua_fltk_fltk_Fl_dnd_text_ops00);
   tolua_function(tolua_S,"do_widget_deletion",tolua_fltk_fltk_Fl_do_widget_deletion00);
   tolua_function(tolua_S,"draw_box_active",tolua_fltk_fltk_Fl_draw_box_active00);
   tolua_function(tolua_S,"event",tolua_fltk_fltk_Fl_event00);
   tolua_function(tolua_S,"event_alt",tolua_fltk_fltk_Fl_event_alt00);
   tolua_function(tolua_S,"event_button",tolua_fltk_fltk_Fl_event_button00);
   tolua_function(tolua_S,"event_button1",tolua_fltk_fltk_Fl_event_button100);
   tolua_function(tolua_S,"event_button2",tolua_fltk_fltk_Fl_event_button200);
   tolua_function(tolua_S,"event_button3",tolua_fltk_fltk_Fl_event_button300);
   tolua_function(tolua_S,"event_buttons",tolua_fltk_fltk_Fl_event_buttons00);
   tolua_function(tolua_S,"event_clicks",tolua_fltk_fltk_Fl_event_clicks00);
   tolua_function(tolua_S,"event_command",tolua_fltk_fltk_Fl_event_command00);
   tolua_function(tolua_S,"event_ctrl",tolua_fltk_fltk_Fl_event_ctrl00);
   tolua_function(tolua_S,"event_dx",tolua_fltk_fltk_Fl_event_dx00);
   tolua_function(tolua_S,"event_dy",tolua_fltk_fltk_Fl_event_dy00);
   tolua_function(tolua_S,"event_inside",tolua_fltk_fltk_Fl_event_inside01);
   tolua_function(tolua_S,"event_is_click",tolua_fltk_fltk_Fl_event_is_click00);
   tolua_function(tolua_S,"event_key",tolua_fltk_fltk_Fl_event_key00);
   tolua_function(tolua_S,"event_length",tolua_fltk_fltk_Fl_event_length00);
   tolua_function(tolua_S,"event_original_key",tolua_fltk_fltk_Fl_event_original_key00);
   tolua_function(tolua_S,"event_shift",tolua_fltk_fltk_Fl_event_shift00);
   tolua_function(tolua_S,"event_state",tolua_fltk_fltk_Fl_event_state00);
   tolua_function(tolua_S,"event_text",tolua_fltk_fltk_Fl_event_text00);
   tolua_function(tolua_S,"event_x",tolua_fltk_fltk_Fl_event_x00);
   tolua_function(tolua_S,"event_x_root",tolua_fltk_fltk_Fl_event_x_root00);
   tolua_function(tolua_S,"event_y",tolua_fltk_fltk_Fl_event_y00);
   tolua_function(tolua_S,"event_y_root",tolua_fltk_fltk_Fl_event_y_root00);
   tolua_function(tolua_S,"first_window",tolua_fltk_fltk_Fl_first_window00);
   tolua_function(tolua_S,"flush",tolua_fltk_fltk_Fl_flush00);
   tolua_function(tolua_S,"focus",tolua_fltk_fltk_Fl_focus00);
   tolua_function(tolua_S,"add_focus_changing_handler",tolua_fltk_fltk_Fl_add_focus_changing_handler00);
   tolua_function(tolua_S,"has_focus_changing_handler",tolua_fltk_fltk_Fl_has_focus_changing_handler00);
   tolua_function(tolua_S,"remove_focus_changing_handler",tolua_fltk_fltk_Fl_remove_focus_changing_handler00);
   tolua_function(tolua_S,"foreground",tolua_fltk_fltk_Fl_foreground00);
   tolua_function(tolua_S,"free_color",tolua_fltk_fltk_Fl_free_color00);
   tolua_function(tolua_S,"get_awake_handler_",tolua_fltk_fltk_Fl_get_awake_handler_00);
   tolua_function(tolua_S,"get_boxtype",tolua_fltk_fltk_Fl_get_boxtype00);
   tolua_function(tolua_S,"get_color",tolua_fltk_fltk_Fl_get_color00);
   tolua_function(tolua_S,"get_color_rgb",tolua_fltk_fltk_Fl_get_color_rgb00);
   tolua_function(tolua_S,"get_font",tolua_fltk_fltk_Fl_get_font00);
   tolua_function(tolua_S,"get_font_name",tolua_fltk_fltk_Fl_get_font_name00);
   tolua_function(tolua_S,"get_key",tolua_fltk_fltk_Fl_get_key00);
   tolua_function(tolua_S,"get_mouse",tolua_fltk_fltk_Fl_get_mouse00);
   tolua_function(tolua_S,"get_system_colors",tolua_fltk_fltk_Fl_get_system_colors00);
   tolua_function(tolua_S,"grab",tolua_fltk_fltk_Fl_grab00);
   tolua_function(tolua_S,"h",tolua_fltk_fltk_Fl_h00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_handle00);
   tolua_function(tolua_S,"has_check",tolua_fltk_fltk_Fl_has_check00);
   tolua_function(tolua_S,"has_idle",tolua_fltk_fltk_Fl_has_idle00);
   tolua_function(tolua_S,"has_timeout",tolua_fltk_fltk_Fl_has_timeout00);
   tolua_function(tolua_S,"lock",tolua_fltk_fltk_Fl_lock00);
   tolua_function(tolua_S,"modal",tolua_fltk_fltk_Fl_modal00);
   tolua_function(tolua_S,"next_window",tolua_fltk_fltk_Fl_next_window00);
   tolua_function(tolua_S,"own_colormap",tolua_fltk_fltk_Fl_own_colormap00);
   tolua_function(tolua_S,"paste",tolua_fltk_fltk_Fl_paste01);
   tolua_function(tolua_S,"pushed",tolua_fltk_fltk_Fl_pushed00);
   tolua_function(tolua_S,"readqueue",tolua_fltk_fltk_Fl_readqueue00);
   tolua_function(tolua_S,"ready",tolua_fltk_fltk_Fl_ready00);
   tolua_function(tolua_S,"redraw",tolua_fltk_fltk_Fl_redraw00);
   tolua_function(tolua_S,"release",tolua_fltk_fltk_Fl_release00);
   tolua_function(tolua_S,"release_widget_pointer",tolua_fltk_fltk_Fl_release_widget_pointer00);
   tolua_function(tolua_S,"reload_scheme",tolua_fltk_fltk_Fl_reload_scheme00);
   tolua_function(tolua_S,"remove_check",tolua_fltk_fltk_Fl_remove_check00);
   tolua_function(tolua_S,"remove_fd",tolua_fltk_fltk_Fl_remove_fd01);
   tolua_function(tolua_S,"run",tolua_fltk_fltk_Fl_run00);
   tolua_function(tolua_S,"scheme",tolua_fltk_fltk_Fl_scheme00);
   tolua_function(tolua_S,"screen_count",tolua_fltk_fltk_Fl_screen_count00);
   tolua_function(tolua_S,"screen_xywh",tolua_fltk_fltk_Fl_screen_xywh02);
   tolua_function(tolua_S,"scrollbar_size",tolua_fltk_fltk_Fl_scrollbar_size00);
   tolua_function(tolua_S,"selection",tolua_fltk_fltk_Fl_selection00);
   tolua_function(tolua_S,"selection_owner",tolua_fltk_fltk_Fl_selection_owner00);
   tolua_function(tolua_S,"set_abort",tolua_fltk_fltk_Fl_set_abort00);
   tolua_function(tolua_S,"set_atclose",tolua_fltk_fltk_Fl_set_atclose00);
   tolua_function(tolua_S,"set_boxtype",tolua_fltk_fltk_Fl_set_boxtype01);
   tolua_function(tolua_S,"set_color",tolua_fltk_fltk_Fl_set_color01);
   tolua_function(tolua_S,"set_font",tolua_fltk_fltk_Fl_set_font01);
   tolua_function(tolua_S,"set_fonts",tolua_fltk_fltk_Fl_set_fonts00);
   tolua_function(tolua_S,"set_idle",tolua_fltk_fltk_Fl_set_idle00);
   tolua_function(tolua_S,"test_shortcut",tolua_fltk_fltk_Fl_test_shortcut00);
   tolua_function(tolua_S,"thread_message",tolua_fltk_fltk_Fl_thread_message00);
   tolua_function(tolua_S,"unlock",tolua_fltk_fltk_Fl_unlock00);
   tolua_function(tolua_S,"version",tolua_fltk_fltk_Fl_version00);
   tolua_function(tolua_S,"visible_focus",tolua_fltk_fltk_Fl_visible_focus00);
   tolua_function(tolua_S,"visual",tolua_fltk_fltk_Fl_visual00);
   tolua_function(tolua_S,"w",tolua_fltk_fltk_Fl_w00);
   tolua_function(tolua_S,"wait",tolua_fltk_fltk_Fl_wait00);
   tolua_function(tolua_S,"watch_widget_pointer",tolua_fltk_fltk_Fl_watch_widget_pointer00);
   tolua_function(tolua_S,"x",tolua_fltk_fltk_Fl_x00);
   tolua_function(tolua_S,"y",tolua_fltk_fltk_Fl_y00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Widget_Tracker","Fl_Widget_Tracker","",tolua_collect_Fl_Widget_Tracker);
  #else
  tolua_cclass(tolua_S,"Fl_Widget_Tracker","Fl_Widget_Tracker","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Widget_Tracker");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Widget_Tracker_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Widget_Tracker_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Widget_Tracker_new00_local);
   tolua_function(tolua_S,"deleted",tolua_fltk_fltk_Fl_Widget_Tracker_deleted00);
   tolua_function(tolua_S,"exists",tolua_fltk_fltk_Fl_Widget_Tracker_exists00);
   tolua_function(tolua_S,"widget",tolua_fltk_fltk_Fl_Widget_Tracker_widget00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Double_Window","Fl_Double_Window","Fl_Window",tolua_collect_Fl_Double_Window);
  #else
  tolua_cclass(tolua_S,"Fl_Double_Window","Fl_Double_Window","Fl_Window",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Double_Window");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Double_Window_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Double_Window_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Double_Window_new01_local);
   tolua_function(tolua_S,"flush",tolua_fltk_fltk_Fl_Double_Window_flush00);
   tolua_function(tolua_S,"hide",tolua_fltk_fltk_Fl_Double_Window_hide00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Double_Window_resize00);
   tolua_function(tolua_S,"show",tolua_fltk_fltk_Fl_Double_Window_show00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Double_Window_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Double_Window","Lua__Fl_Double_Window","Fl_Double_Window",tolua_collect_Lua__Fl_Double_Window);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Double_Window","Lua__Fl_Double_Window","Fl_Double_Window",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Double_Window");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Double_Window_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Double_Window__handle",tolua_fltk_fltk_Lua__Fl_Double_Window_Fl_Double_Window__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Double_Window_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Double_Window_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Double_Window_new01_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Line_Dial","Fl_Line_Dial","Fl_Dial",tolua_collect_Fl_Line_Dial);
  #else
  tolua_cclass(tolua_S,"Fl_Line_Dial","Fl_Line_Dial","Fl_Dial",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Line_Dial");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Line_Dial_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Line_Dial_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Line_Dial_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Single_Window","Fl_Single_Window","Fl_Window",tolua_collect_Fl_Single_Window);
  #else
  tolua_cclass(tolua_S,"Fl_Single_Window","Fl_Single_Window","Fl_Window",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Single_Window");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Single_Window_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Single_Window_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Single_Window_new01_local);
   tolua_function(tolua_S,"flush",tolua_fltk_fltk_Fl_Single_Window_flush00);
   tolua_function(tolua_S,"show",tolua_fltk_fltk_Fl_Single_Window_show00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"FL_VERTICAL",FL_VERTICAL);
  tolua_constant(tolua_S,"FL_HORIZONTAL",FL_HORIZONTAL);
  tolua_constant(tolua_S,"FL_VERT_SLIDER",FL_VERT_SLIDER);
  tolua_constant(tolua_S,"FL_HOR_SLIDER",FL_HOR_SLIDER);
  tolua_constant(tolua_S,"FL_VERT_FILL_SLIDER",FL_VERT_FILL_SLIDER);
  tolua_constant(tolua_S,"FL_HOR_FILL_SLIDER",FL_HOR_FILL_SLIDER);
  tolua_constant(tolua_S,"FL_VERT_NICE_SLIDER",FL_VERT_NICE_SLIDER);
  tolua_constant(tolua_S,"FL_HOR_NICE_SLIDER",FL_HOR_NICE_SLIDER);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Slider","Fl_Slider","Fl_Valuator",tolua_collect_Fl_Slider);
  #else
  tolua_cclass(tolua_S,"Fl_Slider","Fl_Slider","Fl_Valuator",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Slider");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Slider_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Slider_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Slider_new01_local);
   tolua_function(tolua_S,"bounds",tolua_fltk_fltk_Fl_Slider_bounds00);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Slider_handle00);
   tolua_function(tolua_S,"scrollvalue",tolua_fltk_fltk_Fl_Slider_scrollvalue00);
   tolua_function(tolua_S,"slider",tolua_fltk_fltk_Fl_Slider_slider01);
   tolua_function(tolua_S,"slider_size",tolua_fltk_fltk_Fl_Slider_slider_size00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Slider","Lua__Fl_Slider","Fl_Slider",tolua_collect_Lua__Fl_Slider);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Slider","Lua__Fl_Slider","Fl_Slider",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Slider");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Slider_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Slider__handle",tolua_fltk_fltk_Lua__Fl_Slider_Fl_Slider__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Slider_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Slider_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Slider_new01_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Value_Slider","Fl_Value_Slider","Fl_Slider",tolua_collect_Fl_Value_Slider);
  #else
  tolua_cclass(tolua_S,"Fl_Value_Slider","Fl_Value_Slider","Fl_Slider",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Value_Slider");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Value_Slider_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Value_Slider_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Value_Slider_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Value_Slider_handle00);
   tolua_function(tolua_S,"textcolor",tolua_fltk_fltk_Fl_Value_Slider_textcolor00);
   tolua_function(tolua_S,"textfont",tolua_fltk_fltk_Fl_Value_Slider_textfont00);
   tolua_function(tolua_S,"textsize",tolua_fltk_fltk_Fl_Value_Slider_textsize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Value_Slider","Lua__Fl_Value_Slider","Fl_Value_Slider",tolua_collect_Lua__Fl_Value_Slider);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Value_Slider","Lua__Fl_Value_Slider","Fl_Value_Slider",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Value_Slider");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Value_Slider_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Value_Slider__handle",tolua_fltk_fltk_Lua__Fl_Value_Slider_Fl_Value_Slider__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Value_Slider_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Value_Slider_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Value_Slider_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Fill_Slider","Fl_Fill_Slider","Fl_Slider",tolua_collect_Fl_Fill_Slider);
  #else
  tolua_cclass(tolua_S,"Fl_Fill_Slider","Fl_Fill_Slider","Fl_Slider",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Fill_Slider");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Fill_Slider_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Fill_Slider_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Fill_Slider_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Hor_Fill_Slider","Fl_Hor_Fill_Slider","Fl_Slider",tolua_collect_Fl_Hor_Fill_Slider);
  #else
  tolua_cclass(tolua_S,"Fl_Hor_Fill_Slider","Fl_Hor_Fill_Slider","Fl_Slider",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Hor_Fill_Slider");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Hor_Fill_Slider_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Hor_Fill_Slider_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Hor_Fill_Slider_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Hor_Slider","Fl_Hor_Slider","Fl_Slider",tolua_collect_Fl_Hor_Slider);
  #else
  tolua_cclass(tolua_S,"Fl_Hor_Slider","Fl_Hor_Slider","Fl_Slider",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Hor_Slider");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Hor_Slider_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Hor_Slider_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Hor_Slider_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Hor_Nice_Slider","Fl_Hor_Nice_Slider","Fl_Slider",tolua_collect_Fl_Hor_Nice_Slider);
  #else
  tolua_cclass(tolua_S,"Fl_Hor_Nice_Slider","Fl_Hor_Nice_Slider","Fl_Slider",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Hor_Nice_Slider");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Hor_Nice_Slider_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Hor_Nice_Slider_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Hor_Nice_Slider_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Hor_Value_Slider","Fl_Hor_Value_Slider","Fl_Value_Slider",tolua_collect_Fl_Hor_Value_Slider);
  #else
  tolua_cclass(tolua_S,"Fl_Hor_Value_Slider","Fl_Hor_Value_Slider","Fl_Value_Slider",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Hor_Value_Slider");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Hor_Value_Slider_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Hor_Value_Slider_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Hor_Value_Slider_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Fill_Dial","Fl_Fill_Dial","Fl_Dial",tolua_collect_Fl_Fill_Dial);
  #else
  tolua_cclass(tolua_S,"Fl_Fill_Dial","Fl_Fill_Dial","Fl_Dial",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Fill_Dial");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Fill_Dial_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Fill_Dial_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Fill_Dial_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Menu_Window","Fl_Menu_Window","Fl_Single_Window",tolua_collect_Fl_Menu_Window);
  #else
  tolua_cclass(tolua_S,"Fl_Menu_Window","Fl_Menu_Window","Fl_Single_Window",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Menu_Window");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Menu_Window_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Menu_Window_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Menu_Window_new01_local);
   tolua_function(tolua_S,"clear_overlay",tolua_fltk_fltk_Fl_Menu_Window_clear_overlay00);
   tolua_function(tolua_S,"erase",tolua_fltk_fltk_Fl_Menu_Window_erase00);
   tolua_function(tolua_S,"flush",tolua_fltk_fltk_Fl_Menu_Window_flush00);
   tolua_function(tolua_S,"hide",tolua_fltk_fltk_Fl_Menu_Window_hide00);
   tolua_function(tolua_S,"overlay",tolua_fltk_fltk_Fl_Menu_Window_overlay00);
   tolua_function(tolua_S,"set_overlay",tolua_fltk_fltk_Fl_Menu_Window_set_overlay00);
   tolua_function(tolua_S,"show",tolua_fltk_fltk_Fl_Menu_Window_show00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Nice_Slider","Fl_Nice_Slider","Fl_Slider",tolua_collect_Fl_Nice_Slider);
  #else
  tolua_cclass(tolua_S,"Fl_Nice_Slider","Fl_Nice_Slider","Fl_Slider",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Nice_Slider");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Nice_Slider_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Nice_Slider_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Nice_Slider_new00_local);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Fl_Overlay_Window","Fl_Overlay_Window","Fl_Double_Window",NULL);
  tolua_beginmodule(tolua_S,"Fl_Overlay_Window");
   tolua_function(tolua_S,"can_do_overlay",tolua_fltk_fltk_Fl_Overlay_Window_can_do_overlay00);
   tolua_function(tolua_S,"flush",tolua_fltk_fltk_Fl_Overlay_Window_flush00);
   tolua_function(tolua_S,"hide",tolua_fltk_fltk_Fl_Overlay_Window_hide00);
   tolua_function(tolua_S,"redraw_overlay",tolua_fltk_fltk_Fl_Overlay_Window_redraw_overlay00);
   tolua_function(tolua_S,"resize",tolua_fltk_fltk_Fl_Overlay_Window_resize00);
   tolua_function(tolua_S,"show",tolua_fltk_fltk_Fl_Overlay_Window_show00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_PNG_Image","Fl_PNG_Image","Fl_RGB_Image",tolua_collect_Fl_PNG_Image);
  #else
  tolua_cclass(tolua_S,"Fl_PNG_Image","Fl_PNG_Image","Fl_RGB_Image",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_PNG_Image");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_PNG_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_PNG_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_PNG_Image_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_PNM_Image","Fl_PNM_Image","Fl_RGB_Image",tolua_collect_Fl_PNM_Image);
  #else
  tolua_cclass(tolua_S,"Fl_PNM_Image","Fl_PNM_Image","Fl_RGB_Image",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_PNM_Image");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_PNM_Image_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_PNM_Image_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_PNM_Image_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Roller","Fl_Roller","Fl_Valuator",tolua_collect_Fl_Roller);
  #else
  tolua_cclass(tolua_S,"Fl_Roller","Fl_Roller","Fl_Valuator",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Roller");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Roller_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Roller_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Roller_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Roller_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Fl_Scrollbar","Fl_Scrollbar","Fl_Slider",tolua_collect_Fl_Scrollbar);
  #else
  tolua_cclass(tolua_S,"Fl_Scrollbar","Fl_Scrollbar","Fl_Slider",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Fl_Scrollbar");
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Fl_Scrollbar_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Fl_Scrollbar_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Fl_Scrollbar_new00_local);
   tolua_function(tolua_S,"handle",tolua_fltk_fltk_Fl_Scrollbar_handle00);
   tolua_function(tolua_S,"linesize",tolua_fltk_fltk_Fl_Scrollbar_linesize01);
   tolua_function(tolua_S,"value",tolua_fltk_fltk_Fl_Scrollbar_value02);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Fl_Scrollbar","Lua__Fl_Scrollbar","Fl_Scrollbar",tolua_collect_Lua__Fl_Scrollbar);
  #else
  tolua_cclass(tolua_S,"Lua__Fl_Scrollbar","Lua__Fl_Scrollbar","Fl_Scrollbar",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Fl_Scrollbar");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_fltk_Lua__Fl_Scrollbar_tolua__set_instance00);
   tolua_function(tolua_S,"Fl_Scrollbar__handle",tolua_fltk_fltk_Lua__Fl_Scrollbar_Fl_Scrollbar__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_fltk_Lua__Fl_Scrollbar_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_fltk_Lua__Fl_Scrollbar_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_fltk_Lua__Fl_Scrollbar_new00_local);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"fl_box",tolua_fltk_fltk_fl_box00);
  tolua_function(tolua_S,"fl_down",tolua_fltk_fltk_fl_down00);
  tolua_function(tolua_S,"fl_frame",tolua_fltk_fltk_fl_frame00);
  tolua_function(tolua_S,"fl_color_average",tolua_fltk_fltk_fl_color_average00);
  tolua_function(tolua_S,"fl_color_cube",tolua_fltk_fltk_fl_color_cube00);
  tolua_function(tolua_S,"fl_contrast",tolua_fltk_fltk_fl_contrast00);
  tolua_function(tolua_S,"fl_darker",tolua_fltk_fltk_fl_darker00);
  tolua_function(tolua_S,"fl_gray_ramp",tolua_fltk_fltk_fl_gray_ramp00);
  tolua_function(tolua_S,"fl_inactive",tolua_fltk_fltk_fl_inactive00);
  tolua_function(tolua_S,"fl_lighter",tolua_fltk_fltk_fl_lighter00);
  tolua_function(tolua_S,"fl_rgb_color",tolua_fltk_fltk_fl_rgb_color01);
  tolua_function(tolua_S,"exit",tolua_fltk_fltk_exit00);
  tolua_function(tolua_S,"fl_message_icon",tolua_fltk_fltk_fl_message_icon00);
  tolua_function(tolua_S,"fl_input",tolua_fltk_fltk_fl_input00);
  tolua_function(tolua_S,"fl_password",tolua_fltk_fltk_fl_password00);
  tolua_function(tolua_S,"fl_ask",tolua_fltk_fltk_fl_ask00);
  tolua_function(tolua_S,"fl_choice",tolua_fltk_fltk_fl_choice00);
  tolua_function(tolua_S,"fl_alert",tolua_fltk_fltk_fl_alert00);
  tolua_function(tolua_S,"fl_beep",tolua_fltk_fltk_fl_beep00);
  tolua_function(tolua_S,"fl_message",tolua_fltk_fltk_fl_message00);
  tolua_function(tolua_S,"fl_message_font",tolua_fltk_fltk_fl_message_font00);
  tolua_function(tolua_S,"fl_input",tolua_fltk_fltk_fl_input01);
  tolua_function(tolua_S,"fl_password",tolua_fltk_fltk_fl_password01);
  tolua_function(tolua_S,"fl_message_font",tolua_fltk_fltk_fl_message_font01);
  tolua_variable(tolua_S,"fl_no",tolua_get_fltk_fl_no,NULL);
  tolua_variable(tolua_S,"fl_yes",tolua_get_fltk_fl_yes,NULL);
  tolua_variable(tolua_S,"fl_ok",tolua_get_fltk_fl_ok,NULL);
  tolua_variable(tolua_S,"fl_cancel",tolua_get_fltk_fl_cancel,NULL);
  tolua_variable(tolua_S,"fl_close",tolua_get_fltk_fl_close,NULL);
  tolua_function(tolua_S,"fl_color",tolua_fltk_fltk_fl_color00);
  tolua_function(tolua_S,"fl_font",tolua_fltk_fltk_fl_font00);
  tolua_function(tolua_S,"fl_size",tolua_fltk_fltk_fl_size00);
  tolua_function(tolua_S,"fl_clip_region",tolua_fltk_fltk_fl_clip_region00);
  tolua_function(tolua_S,"fl_latin1_to_local",tolua_fltk_fltk_fl_latin1_to_local00);
  tolua_function(tolua_S,"fl_local_to_latin1",tolua_fltk_fltk_fl_local_to_latin100);
  tolua_function(tolua_S,"fl_local_to_mac_roman",tolua_fltk_fltk_fl_local_to_mac_roman00);
  tolua_function(tolua_S,"fl_mac_roman_to_local",tolua_fltk_fltk_fl_mac_roman_to_local00);
  tolua_function(tolua_S,"fl_can_do_alpha_blending",tolua_fltk_fltk_fl_can_do_alpha_blending00);
  tolua_function(tolua_S,"fl_expand_text",tolua_fltk_fltk_fl_expand_text00);
  tolua_function(tolua_S,"fl_shortcut_label",tolua_fltk_fltk_fl_shortcut_label01);
  tolua_function(tolua_S,"fl_transform_dx",tolua_fltk_fltk_fl_transform_dx00);
  tolua_function(tolua_S,"fl_transform_dy",tolua_fltk_fltk_fl_transform_dy00);
  tolua_function(tolua_S,"fl_transform_x",tolua_fltk_fltk_fl_transform_x00);
  tolua_function(tolua_S,"fl_transform_y",tolua_fltk_fltk_fl_transform_y00);
  tolua_function(tolua_S,"fl_width",tolua_fltk_fltk_fl_width02);
  tolua_function(tolua_S,"fl_descent",tolua_fltk_fltk_fl_descent00);
  tolua_function(tolua_S,"fl_height",tolua_fltk_fltk_fl_height00);
  tolua_function(tolua_S,"fl_clip_box",tolua_fltk_fltk_fl_clip_box00);
  tolua_function(tolua_S,"fl_draw_pixmap",tolua_fltk_fltk_fl_draw_pixmap01);
  tolua_function(tolua_S,"fl_draw_symbol",tolua_fltk_fltk_fl_draw_symbol00);
  tolua_function(tolua_S,"fl_height",tolua_fltk_fltk_fl_height01);
  tolua_function(tolua_S,"fl_measure_pixmap",tolua_fltk_fltk_fl_measure_pixmap01);
  tolua_function(tolua_S,"fl_not_clipped",tolua_fltk_fltk_fl_not_clipped00);
  tolua_function(tolua_S,"fl_old_shortcut",tolua_fltk_fltk_fl_old_shortcut00);
  tolua_function(tolua_S,"fl_read_image",tolua_fltk_fltk_fl_read_image00);
  tolua_function(tolua_S,"fl_color",tolua_fltk_fltk_fl_color02);
  tolua_function(tolua_S,"fl_arc",tolua_fltk_fltk_fl_arc01);
  tolua_function(tolua_S,"fl_begin_complex_polygon",tolua_fltk_fltk_fl_begin_complex_polygon00);
  tolua_function(tolua_S,"fl_begin_line",tolua_fltk_fltk_fl_begin_line00);
  tolua_function(tolua_S,"fl_begin_loop",tolua_fltk_fltk_fl_begin_loop00);
  tolua_function(tolua_S,"fl_begin_points",tolua_fltk_fltk_fl_begin_points00);
  tolua_function(tolua_S,"fl_begin_polygon",tolua_fltk_fltk_fl_begin_polygon00);
  tolua_function(tolua_S,"fl_circle",tolua_fltk_fltk_fl_circle00);
  tolua_function(tolua_S,"fl_clip_region",tolua_fltk_fltk_fl_clip_region01);
  tolua_function(tolua_S,"fl_color",tolua_fltk_fltk_fl_color03);
  tolua_function(tolua_S,"fl_cursor",tolua_fltk_fltk_fl_cursor00);
  tolua_function(tolua_S,"fl_curve",tolua_fltk_fltk_fl_curve00);
  tolua_function(tolua_S,"fl_draw",tolua_fltk_fltk_fl_draw04);
  tolua_function(tolua_S,"fl_draw_box",tolua_fltk_fltk_fl_draw_box00);
  tolua_function(tolua_S,"fl_draw_image",tolua_fltk_fltk_fl_draw_image01);
  tolua_function(tolua_S,"fl_draw_image_mono",tolua_fltk_fltk_fl_draw_image_mono00);
  tolua_function(tolua_S,"fl_end_complex_polygon",tolua_fltk_fltk_fl_end_complex_polygon00);
  tolua_function(tolua_S,"fl_end_line",tolua_fltk_fltk_fl_end_line00);
  tolua_function(tolua_S,"fl_end_loop",tolua_fltk_fltk_fl_end_loop00);
  tolua_function(tolua_S,"fl_end_points",tolua_fltk_fltk_fl_end_points00);
  tolua_function(tolua_S,"fl_end_polygon",tolua_fltk_fltk_fl_end_polygon00);
  tolua_function(tolua_S,"fl_font",tolua_fltk_fltk_fl_font01);
  tolua_function(tolua_S,"fl_frame",tolua_fltk_fltk_fl_frame01);
  tolua_function(tolua_S,"fl_frame2",tolua_fltk_fltk_fl_frame200);
  tolua_function(tolua_S,"fl_gap",tolua_fltk_fltk_fl_gap00);
  tolua_function(tolua_S,"fl_line",tolua_fltk_fltk_fl_line01);
  tolua_function(tolua_S,"fl_line_style",tolua_fltk_fltk_fl_line_style00);
  tolua_function(tolua_S,"fl_loop",tolua_fltk_fltk_fl_loop01);
  tolua_function(tolua_S,"fl_measure",tolua_fltk_fltk_fl_measure00);
  tolua_function(tolua_S,"fl_mult_matrix",tolua_fltk_fltk_fl_mult_matrix00);
  tolua_function(tolua_S,"fl_overlay_clear",tolua_fltk_fltk_fl_overlay_clear00);
  tolua_function(tolua_S,"fl_overlay_rect",tolua_fltk_fltk_fl_overlay_rect00);
  tolua_function(tolua_S,"fl_pie",tolua_fltk_fltk_fl_pie00);
  tolua_function(tolua_S,"fl_point",tolua_fltk_fltk_fl_point00);
  tolua_function(tolua_S,"fl_polygon",tolua_fltk_fltk_fl_polygon01);
  tolua_function(tolua_S,"fl_pop_clip",tolua_fltk_fltk_fl_pop_clip00);
  tolua_function(tolua_S,"fl_pop_matrix",tolua_fltk_fltk_fl_pop_matrix00);
  tolua_function(tolua_S,"fl_push_clip",tolua_fltk_fltk_fl_push_clip00);
  tolua_function(tolua_S,"fl_push_matrix",tolua_fltk_fltk_fl_push_matrix00);
  tolua_function(tolua_S,"fl_push_no_clip",tolua_fltk_fltk_fl_push_no_clip00);
  tolua_function(tolua_S,"fl_rect",tolua_fltk_fltk_fl_rect01);
  tolua_function(tolua_S,"fl_rectf",tolua_fltk_fltk_fl_rectf02);
  tolua_function(tolua_S,"fl_reset_spot",tolua_fltk_fltk_fl_reset_spot00);
  tolua_function(tolua_S,"fl_restore_clip",tolua_fltk_fltk_fl_restore_clip00);
  tolua_function(tolua_S,"fl_rotate",tolua_fltk_fltk_fl_rotate00);
  tolua_function(tolua_S,"fl_rtl_draw",tolua_fltk_fltk_fl_rtl_draw00);
  tolua_function(tolua_S,"fl_scale",tolua_fltk_fltk_fl_scale01);
  tolua_function(tolua_S,"fl_set_spot",tolua_fltk_fltk_fl_set_spot00);
  tolua_function(tolua_S,"fl_set_status",tolua_fltk_fltk_fl_set_status00);
  tolua_function(tolua_S,"fl_text_extents",tolua_fltk_fltk_fl_text_extents01);
  tolua_function(tolua_S,"fl_transformed_vertex",tolua_fltk_fltk_fl_transformed_vertex00);
  tolua_function(tolua_S,"fl_translate",tolua_fltk_fltk_fl_translate00);
  tolua_function(tolua_S,"fl_vertex",tolua_fltk_fltk_fl_vertex00);
  tolua_function(tolua_S,"fl_xyline",tolua_fltk_fltk_fl_xyline02);
  tolua_function(tolua_S,"fl_yxline",tolua_fltk_fltk_fl_yxline02);
  tolua_function(tolua_S,"fl_show_colormap",tolua_fltk_fltk_fl_show_colormap00);
  tolua_function(tolua_S,"fl_fopen",tolua_fltk_fltk_fl_fopen00);
  tolua_function(tolua_S,"fl_locale_to_utf8",tolua_fltk_fltk_fl_locale_to_utf800);
  tolua_function(tolua_S,"fl_utf8_to_locale",tolua_fltk_fltk_fl_utf8_to_locale00);
  tolua_function(tolua_S,"fl_make_path",tolua_fltk_fltk_fl_make_path00);
  tolua_function(tolua_S,"fl_getcwd",tolua_fltk_fltk_fl_getcwd00);
  tolua_function(tolua_S,"fl_getenv",tolua_fltk_fltk_fl_getenv00);
  tolua_function(tolua_S,"fl_utf2mbcs",tolua_fltk_fltk_fl_utf2mbcs00);
  tolua_function(tolua_S,"fl_utf8back",tolua_fltk_fltk_fl_utf8back00);
  tolua_function(tolua_S,"fl_utf8fwd",tolua_fltk_fltk_fl_utf8fwd00);
  tolua_function(tolua_S,"fl_access",tolua_fltk_fltk_fl_access00);
  tolua_function(tolua_S,"fl_chmod",tolua_fltk_fltk_fl_chmod00);
  tolua_function(tolua_S,"fl_execvp",tolua_fltk_fltk_fl_execvp00);
  tolua_function(tolua_S,"fl_mkdir",tolua_fltk_fltk_fl_mkdir00);
  tolua_function(tolua_S,"fl_nonspacing",tolua_fltk_fltk_fl_nonspacing00);
  tolua_function(tolua_S,"fl_open",tolua_fltk_fltk_fl_open00);
  tolua_function(tolua_S,"fl_rename",tolua_fltk_fltk_fl_rename00);
  tolua_function(tolua_S,"fl_rmdir",tolua_fltk_fltk_fl_rmdir00);
  tolua_function(tolua_S,"fl_stat",tolua_fltk_fltk_fl_stat00);
  tolua_function(tolua_S,"fl_system",tolua_fltk_fltk_fl_system00);
  tolua_function(tolua_S,"fl_tolower",tolua_fltk_fltk_fl_tolower00);
  tolua_function(tolua_S,"fl_toupper",tolua_fltk_fltk_fl_toupper00);
  tolua_function(tolua_S,"fl_unlink",tolua_fltk_fltk_fl_unlink00);
  tolua_function(tolua_S,"fl_utf8bytes",tolua_fltk_fltk_fl_utf8bytes00);
  tolua_function(tolua_S,"fl_utf8encode",tolua_fltk_fltk_fl_utf8encode00);
  tolua_function(tolua_S,"fl_utf8len",tolua_fltk_fltk_fl_utf8len00);
  tolua_function(tolua_S,"fl_utf8locale",tolua_fltk_fltk_fl_utf8locale00);
  tolua_function(tolua_S,"fl_utf8test",tolua_fltk_fltk_fl_utf8test00);
  tolua_function(tolua_S,"fl_utf_nb_char",tolua_fltk_fltk_fl_utf_nb_char00);
  tolua_function(tolua_S,"fl_utf_strcasecmp",tolua_fltk_fltk_fl_utf_strcasecmp00);
  tolua_function(tolua_S,"fl_utf_strncasecmp",tolua_fltk_fltk_fl_utf_strncasecmp00);
  tolua_function(tolua_S,"fl_utf_tolower",tolua_fltk_fltk_fl_utf_tolower00);
  tolua_function(tolua_S,"fl_utf_toupper",tolua_fltk_fltk_fl_utf_toupper00);
  tolua_function(tolua_S,"fl_wcwidth",tolua_fltk_fltk_fl_wcwidth00);
  tolua_function(tolua_S,"fl_wcwidth_",tolua_fltk_fltk_fl_wcwidth_00);
  tolua_function(tolua_S,"fl_utf8decode",tolua_fltk_fltk_fl_utf8decode00);
  tolua_function(tolua_S,"fl_utf8from_mb",tolua_fltk_fltk_fl_utf8from_mb00);
  tolua_function(tolua_S,"fl_utf8froma",tolua_fltk_fltk_fl_utf8froma00);
  tolua_function(tolua_S,"fl_utf8fromwc",tolua_fltk_fltk_fl_utf8fromwc00);
  tolua_function(tolua_S,"fl_utf8toUtf16",tolua_fltk_fltk_fl_utf8toUtf1600);
  tolua_function(tolua_S,"fl_utf8to_mb",tolua_fltk_fltk_fl_utf8to_mb00);
  tolua_function(tolua_S,"fl_utf8toa",tolua_fltk_fltk_fl_utf8toa00);
  tolua_function(tolua_S,"fl_utf8towc",tolua_fltk_fltk_fl_utf8towc00);
  tolua_function(tolua_S,"fl_make_path_for_file",tolua_fltk_fltk_fl_make_path_for_file00);
  tolua_function(tolua_S,"fl_define_FL_SHADOW_LABEL",tolua_fltk_fltk_fl_define_FL_SHADOW_LABEL00);
  tolua_function(tolua_S,"fl_define_FL_ENGRAVED_LABEL",tolua_fltk_fltk_fl_define_FL_ENGRAVED_LABEL00);
  tolua_function(tolua_S,"fl_define_FL_EMBOSSED_LABEL",tolua_fltk_fltk_fl_define_FL_EMBOSSED_LABEL00);
  tolua_function(tolua_S,"fl_define_FL_ROUND_UP_BOX",tolua_fltk_fltk_fl_define_FL_ROUND_UP_BOX00);
  tolua_function(tolua_S,"fl_define_FL_SHADOW_BOX",tolua_fltk_fltk_fl_define_FL_SHADOW_BOX00);
  tolua_function(tolua_S,"fl_define_FL_ROUNDED_BOX",tolua_fltk_fltk_fl_define_FL_ROUNDED_BOX00);
  tolua_function(tolua_S,"fl_define_FL_RFLAT_BOX",tolua_fltk_fltk_fl_define_FL_RFLAT_BOX00);
  tolua_function(tolua_S,"fl_define_FL_RSHADOW_BOX",tolua_fltk_fltk_fl_define_FL_RSHADOW_BOX00);
  tolua_function(tolua_S,"fl_define_FL_DIAMOND_BOX",tolua_fltk_fltk_fl_define_FL_DIAMOND_BOX00);
  tolua_function(tolua_S,"fl_define_FL_OVAL_BOX",tolua_fltk_fltk_fl_define_FL_OVAL_BOX00);
  tolua_function(tolua_S,"fl_define_FL_PLASTIC_UP_BOX",tolua_fltk_fltk_fl_define_FL_PLASTIC_UP_BOX00);
  tolua_function(tolua_S,"fl_define_FL_GTK_UP_BOX",tolua_fltk_fltk_fl_define_FL_GTK_UP_BOX00);
 tolua_endmodule(tolua_S);
 tolua_module(tolua_S,"flvw",0);
 tolua_beginmodule(tolua_S,"flvw");
  tolua_constant(tolua_S,"FLV_ROW_HEADER",FLV_ROW_HEADER);
  tolua_constant(tolua_S,"FLV_ROW_FOOTER",FLV_ROW_FOOTER);
  tolua_constant(tolua_S,"FLV_TITLE",FLV_TITLE);
  tolua_constant(tolua_S,"FLVE_ROW_CHANGED",FLVE_ROW_CHANGED);
  tolua_constant(tolua_S,"FLVE_ROWS_CHANGED",FLVE_ROWS_CHANGED);
  tolua_constant(tolua_S,"FLVE_SELECTION_CHANGED",FLVE_SELECTION_CHANGED);
  tolua_constant(tolua_S,"FLVE_COL_CHANGED",FLVE_COL_CHANGED);
  tolua_constant(tolua_S,"FLVE_COLS_CHANGED",FLVE_COLS_CHANGED);
  tolua_constant(tolua_S,"FLVE_FEATURE_CHANGED",FLVE_FEATURE_CHANGED);
  tolua_constant(tolua_S,"FLVE_CLICKED",FLVE_CLICKED);
  tolua_constant(tolua_S,"FLVE_ENTER_PRESSED",FLVE_ENTER_PRESSED);
  tolua_constant(tolua_S,"FLVE_ROW_HEADER_CLICKED",FLVE_ROW_HEADER_CLICKED);
  tolua_constant(tolua_S,"FLVE_ROW_FOOTER_CLICKED",FLVE_ROW_FOOTER_CLICKED);
  tolua_constant(tolua_S,"FLVE_COL_HEADER_CLICKED",FLVE_COL_HEADER_CLICKED);
  tolua_constant(tolua_S,"FLVE_COL_FOOTER_CLICKED",FLVE_COL_FOOTER_CLICKED);
  tolua_constant(tolua_S,"FLVE_LABEL_CLICKED",FLVE_LABEL_CLICKED);
  tolua_constant(tolua_S,"FLVE_TITLE_CLICKED",FLVE_TITLE_CLICKED);
  tolua_constant(tolua_S,"FLVE_ALL_CLICKED",FLVE_ALL_CLICKED);
  tolua_constant(tolua_S,"FLVEcb_ROW_CHANGED",FLVEcb_ROW_CHANGED);
  tolua_constant(tolua_S,"FLVEcb_ROWS_CHANGED",FLVEcb_ROWS_CHANGED);
  tolua_constant(tolua_S,"FLVEcb_SELECTION_CHANGED",FLVEcb_SELECTION_CHANGED);
  tolua_constant(tolua_S,"FLVEcb_COL_CHANGED",FLVEcb_COL_CHANGED);
  tolua_constant(tolua_S,"FLVEcb_COLS_CHANGED",FLVEcb_COLS_CHANGED);
  tolua_constant(tolua_S,"FLVEcb_FEATURE_CHANGED",FLVEcb_FEATURE_CHANGED);
  tolua_constant(tolua_S,"FLVEcb_CLICKED",FLVEcb_CLICKED);
  tolua_constant(tolua_S,"FLVEcb_ENTER_PRESSED",FLVEcb_ENTER_PRESSED);
  tolua_constant(tolua_S,"FLVEcb_ROW_HEADER_CLICKED",FLVEcb_ROW_HEADER_CLICKED);
  tolua_constant(tolua_S,"FLVEcb_ROW_FOOTER_CLICKED",FLVEcb_ROW_FOOTER_CLICKED);
  tolua_constant(tolua_S,"FLVEcb_COL_HEADER_CLICKED",FLVEcb_COL_HEADER_CLICKED);
  tolua_constant(tolua_S,"FLVEcb_COL_FOOTER_CLICKED",FLVEcb_COL_FOOTER_CLICKED);
  tolua_constant(tolua_S,"FLVEcb_LABEL_CLICKED",FLVEcb_LABEL_CLICKED);
  tolua_constant(tolua_S,"FLVEcb_TITLE_CLICKED",FLVEcb_TITLE_CLICKED);
  tolua_constant(tolua_S,"FLVEcb_ALL_CLICKED",FLVEcb_ALL_CLICKED);
  tolua_constant(tolua_S,"FLVF_NONE",FLVF_NONE);
  tolua_constant(tolua_S,"FLVF_ROW_HEADER",FLVF_ROW_HEADER);
  tolua_constant(tolua_S,"FLVF_ROW_FOOTER",FLVF_ROW_FOOTER);
  tolua_constant(tolua_S,"FLVF_ROW_DIVIDER",FLVF_ROW_DIVIDER);
  tolua_constant(tolua_S,"FLVF_COL_HEADER",FLVF_COL_HEADER);
  tolua_constant(tolua_S,"FLVF_COL_FOOTER",FLVF_COL_FOOTER);
  tolua_constant(tolua_S,"FLVF_COL_DIVIDER",FLVF_COL_DIVIDER);
  tolua_constant(tolua_S,"FLVF_MULTI_SELECT",FLVF_MULTI_SELECT);
  tolua_constant(tolua_S,"FLVF_ROW_SELECT",FLVF_ROW_SELECT);
  tolua_constant(tolua_S,"FLVF_PERSIST_SELECT",FLVF_PERSIST_SELECT);
  tolua_constant(tolua_S,"FLVF_FULL_RESIZE",FLVF_FULL_RESIZE);
  tolua_constant(tolua_S,"FLVF_DIVIDERS",FLVF_DIVIDERS);
  tolua_constant(tolua_S,"FLVF_HEADERS",FLVF_HEADERS);
  tolua_constant(tolua_S,"FLVF_FOOTERS",FLVF_FOOTERS);
  tolua_constant(tolua_S,"FLVF_ROW_ENDS",FLVF_ROW_ENDS);
  tolua_constant(tolua_S,"FLVF_COL_ENDS",FLVF_COL_ENDS);
  tolua_constant(tolua_S,"FLVF_ALL_ROW",FLVF_ALL_ROW);
  tolua_constant(tolua_S,"FLVF_ALL_COL",FLVF_ALL_COL);
  tolua_constant(tolua_S,"FLVS_NONE",FLVS_NONE);
  tolua_constant(tolua_S,"FLVS_HORIZONTAL",FLVS_HORIZONTAL);
  tolua_constant(tolua_S,"FLVS_VERTICAL",FLVS_VERTICAL);
  tolua_constant(tolua_S,"FLVS_BOTH",FLVS_BOTH);
  tolua_constant(tolua_S,"FLVS_AUTOMATIC",FLVS_AUTOMATIC);
  tolua_constant(tolua_S,"FLVS_ALWAYS",FLVS_ALWAYS);
  tolua_constant(tolua_S,"FLVS_HORIZONTAL_ALWAYS",FLVS_HORIZONTAL_ALWAYS);
  tolua_constant(tolua_S,"FLVS_VERTICAL_ALWAYS",FLVS_VERTICAL_ALWAYS);
  tolua_constant(tolua_S,"FLVS_BOTH_ALWAYS",FLVS_BOTH_ALWAYS);
  tolua_constant(tolua_S,"FLV_EDIT_ALWAYS",FLV_EDIT_ALWAYS);
  tolua_constant(tolua_S,"FLV_EDIT_AUTOMATIC",FLV_EDIT_AUTOMATIC);
  tolua_constant(tolua_S,"FLV_EDIT_MANUAL",FLV_EDIT_MANUAL);
  tolua_constant(tolua_S,"FLVB_NONE",FLVB_NONE);
  tolua_constant(tolua_S,"FLVB_LEFT",FLVB_LEFT);
  tolua_constant(tolua_S,"FLVB_TOP",FLVB_TOP);
  tolua_constant(tolua_S,"FLVB_RIGHT",FLVB_RIGHT);
  tolua_constant(tolua_S,"FLVB_BOTTOM",FLVB_BOTTOM);
  tolua_constant(tolua_S,"FLVB_INNER_LEFT",FLVB_INNER_LEFT);
  tolua_constant(tolua_S,"FLVB_INNER_TOP",FLVB_INNER_TOP);
  tolua_constant(tolua_S,"FLVB_INNER_RIGHT",FLVB_INNER_RIGHT);
  tolua_constant(tolua_S,"FLVB_INNER_BOTTOM",FLVB_INNER_BOTTOM);
  tolua_constant(tolua_S,"FLVB_OUTER_VERTICALS",FLVB_OUTER_VERTICALS);
  tolua_constant(tolua_S,"FLVB_OUTER_HORIZONTALS",FLVB_OUTER_HORIZONTALS);
  tolua_constant(tolua_S,"FLVB_OUTER_ALL",FLVB_OUTER_ALL);
  tolua_constant(tolua_S,"FLVB_INNER_VERTICALS",FLVB_INNER_VERTICALS);
  tolua_constant(tolua_S,"FLVB_INNER_HORIZONTALS",FLVB_INNER_HORIZONTALS);
  tolua_constant(tolua_S,"FLVB_INNER_ALL",FLVB_INNER_ALL);
  tolua_constant(tolua_S,"FLVB_VERTICALS",FLVB_VERTICALS);
  tolua_constant(tolua_S,"FLVB_HORIZONTALS",FLVB_HORIZONTALS);
  tolua_constant(tolua_S,"FLVB_ALL",FLVB_ALL);
  tolua_constant(tolua_S,"FLVB_LEFTS",FLVB_LEFTS);
  tolua_constant(tolua_S,"FLVB_TOPS",FLVB_TOPS);
  tolua_constant(tolua_S,"FLVB_RIGHTS",FLVB_RIGHTS);
  tolua_constant(tolua_S,"FLVB_BOTTOMS",FLVB_BOTTOMS);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Flv_Style_List","Flv_Style_List","",tolua_collect_Flv_Style_List);
  #else
  tolua_cclass(tolua_S,"Flv_Style_List","Flv_Style_List","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Flv_Style_List");
   tolua_function(tolua_S,"new",tolua_fltk_flvw_Flv_Style_List_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_flvw_Flv_Style_List_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_flvw_Flv_Style_List_new00_local);
   tolua_function(tolua_S,"clear",tolua_fltk_flvw_Flv_Style_List_clear00);
   tolua_function(tolua_S,"clear_current",tolua_fltk_flvw_Flv_Style_List_clear_current00);
   tolua_function(tolua_S,"compact",tolua_fltk_flvw_Flv_Style_List_compact00);
   tolua_function(tolua_S,"count",tolua_fltk_flvw_Flv_Style_List_count00);
   tolua_function(tolua_S,"current",tolua_fltk_flvw_Flv_Style_List_current00);
   tolua_function(tolua_S,"find",tolua_fltk_flvw_Flv_Style_List_find00);
   tolua_function(tolua_S,"first",tolua_fltk_flvw_Flv_Style_List_first00);
   tolua_function(tolua_S,"insert",tolua_fltk_flvw_Flv_Style_List_insert00);
   tolua_function(tolua_S,"next",tolua_fltk_flvw_Flv_Style_List_next00);
   tolua_function(tolua_S,"prior",tolua_fltk_flvw_Flv_Style_List_prior00);
   tolua_function(tolua_S,"release",tolua_fltk_flvw_Flv_Style_List_release00);
   tolua_function(tolua_S,"release_current",tolua_fltk_flvw_Flv_Style_List_release_current00);
   tolua_function(tolua_S,"skip_to",tolua_fltk_flvw_Flv_Style_List_skip_to00);
   tolua_function(tolua_S,"get",tolua_fltk_flvw_Flv_Style_List_get00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Flv_Style","Flv_Style","",tolua_collect_Flv_Style);
  #else
  tolua_cclass(tolua_S,"Flv_Style","Flv_Style","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Flv_Style");
   tolua_function(tolua_S,"new",tolua_fltk_flvw_Flv_Style_new01);
   tolua_function(tolua_S,"new_local",tolua_fltk_flvw_Flv_Style_new01_local);
   tolua_function(tolua_S,".call",tolua_fltk_flvw_Flv_Style_new01_local);
   tolua_function(tolua_S,"align",tolua_fltk_flvw_Flv_Style_align00);
   tolua_function(tolua_S,"align_defined",tolua_fltk_flvw_Flv_Style_align_defined00);
   tolua_function(tolua_S,"all_clear",tolua_fltk_flvw_Flv_Style_all_clear00);
   tolua_function(tolua_S,"all_defined",tolua_fltk_flvw_Flv_Style_all_defined00);
   tolua_function(tolua_S,"background",tolua_fltk_flvw_Flv_Style_background00);
   tolua_function(tolua_S,"background_defined",tolua_fltk_flvw_Flv_Style_background_defined00);
   tolua_function(tolua_S,"border",tolua_fltk_flvw_Flv_Style_border00);
   tolua_function(tolua_S,"border_color",tolua_fltk_flvw_Flv_Style_border_color00);
   tolua_function(tolua_S,"border_color_defined",tolua_fltk_flvw_Flv_Style_border_color_defined00);
   tolua_function(tolua_S,"border_defined",tolua_fltk_flvw_Flv_Style_border_defined00);
   tolua_function(tolua_S,"border_spacing",tolua_fltk_flvw_Flv_Style_border_spacing00);
   tolua_function(tolua_S,"border_spacing_defined",tolua_fltk_flvw_Flv_Style_border_spacing_defined00);
   tolua_function(tolua_S,"bottom_border",tolua_fltk_flvw_Flv_Style_bottom_border00);
   tolua_function(tolua_S,"clear_align",tolua_fltk_flvw_Flv_Style_clear_align00);
   tolua_function(tolua_S,"clear_all",tolua_fltk_flvw_Flv_Style_clear_all00);
   tolua_function(tolua_S,"clear_background",tolua_fltk_flvw_Flv_Style_clear_background00);
   tolua_function(tolua_S,"clear_border",tolua_fltk_flvw_Flv_Style_clear_border00);
   tolua_function(tolua_S,"clear_border_color",tolua_fltk_flvw_Flv_Style_clear_border_color00);
   tolua_function(tolua_S,"clear_border_spacing",tolua_fltk_flvw_Flv_Style_clear_border_spacing00);
   tolua_function(tolua_S,"clear_editor",tolua_fltk_flvw_Flv_Style_clear_editor00);
   tolua_function(tolua_S,"clear_font",tolua_fltk_flvw_Flv_Style_clear_font00);
   tolua_function(tolua_S,"clear_font_size",tolua_fltk_flvw_Flv_Style_clear_font_size00);
   tolua_function(tolua_S,"clear_foreground",tolua_fltk_flvw_Flv_Style_clear_foreground00);
   tolua_function(tolua_S,"clear_frame",tolua_fltk_flvw_Flv_Style_clear_frame00);
   tolua_function(tolua_S,"clear_height",tolua_fltk_flvw_Flv_Style_clear_height00);
   tolua_function(tolua_S,"clear_locked",tolua_fltk_flvw_Flv_Style_clear_locked00);
   tolua_function(tolua_S,"clear_resizable",tolua_fltk_flvw_Flv_Style_clear_resizable00);
   tolua_function(tolua_S,"clear_width",tolua_fltk_flvw_Flv_Style_clear_width00);
   tolua_function(tolua_S,"clear_x_margin",tolua_fltk_flvw_Flv_Style_clear_x_margin00);
   tolua_function(tolua_S,"clear_y_margin",tolua_fltk_flvw_Flv_Style_clear_y_margin00);
   tolua_function(tolua_S,"editor",tolua_fltk_flvw_Flv_Style_editor00);
   tolua_function(tolua_S,"editor_defined",tolua_fltk_flvw_Flv_Style_editor_defined00);
   tolua_function(tolua_S,"font_defined",tolua_fltk_flvw_Flv_Style_font_defined00);
   tolua_function(tolua_S,"font",tolua_fltk_flvw_Flv_Style_font00);
   tolua_function(tolua_S,"font_size",tolua_fltk_flvw_Flv_Style_font_size00);
   tolua_function(tolua_S,"font_size_defined",tolua_fltk_flvw_Flv_Style_font_size_defined00);
   tolua_function(tolua_S,"foreground",tolua_fltk_flvw_Flv_Style_foreground00);
   tolua_function(tolua_S,"foreground_defined",tolua_fltk_flvw_Flv_Style_foreground_defined00);
   tolua_function(tolua_S,"frame_defined",tolua_fltk_flvw_Flv_Style_frame_defined00);
   tolua_function(tolua_S,"frame",tolua_fltk_flvw_Flv_Style_frame00);
   tolua_function(tolua_S,"height",tolua_fltk_flvw_Flv_Style_height00);
   tolua_function(tolua_S,"height_defined",tolua_fltk_flvw_Flv_Style_height_defined00);
   tolua_function(tolua_S,"inner_bottom_border",tolua_fltk_flvw_Flv_Style_inner_bottom_border00);
   tolua_function(tolua_S,"inner_left_border",tolua_fltk_flvw_Flv_Style_inner_left_border00);
   tolua_function(tolua_S,"inner_right_border",tolua_fltk_flvw_Flv_Style_inner_right_border00);
   tolua_function(tolua_S,"inner_top_border",tolua_fltk_flvw_Flv_Style_inner_top_border00);
   tolua_function(tolua_S,"left_border",tolua_fltk_flvw_Flv_Style_left_border00);
   tolua_function(tolua_S,"locked",tolua_fltk_flvw_Flv_Style_locked00);
   tolua_function(tolua_S,"locked_defined",tolua_fltk_flvw_Flv_Style_locked_defined00);
   tolua_function(tolua_S,"resizable",tolua_fltk_flvw_Flv_Style_resizable00);
   tolua_function(tolua_S,"resizable_defined",tolua_fltk_flvw_Flv_Style_resizable_defined00);
   tolua_function(tolua_S,"right_border",tolua_fltk_flvw_Flv_Style_right_border00);
   tolua_function(tolua_S,"top_border",tolua_fltk_flvw_Flv_Style_top_border00);
   tolua_function(tolua_S,"width",tolua_fltk_flvw_Flv_Style_width00);
   tolua_function(tolua_S,"width_defined",tolua_fltk_flvw_Flv_Style_width_defined00);
   tolua_function(tolua_S,"x_margin",tolua_fltk_flvw_Flv_Style_x_margin00);
   tolua_function(tolua_S,"x_margin_defined",tolua_fltk_flvw_Flv_Style_x_margin_defined00);
   tolua_function(tolua_S,"y_margin",tolua_fltk_flvw_Flv_Style_y_margin00);
   tolua_function(tolua_S,"y_margin_defined",tolua_fltk_flvw_Flv_Style_y_margin_defined00);
   tolua_function(tolua_S,"add",tolua_fltk_flvw_Flv_Style_add00);
   tolua_variable(tolua_S,"cell_style",tolua_get_Flv_Style_cell_style,tolua_set_Flv_Style_cell_style);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Flv_CStyle","Flv_CStyle","Flv_Style",tolua_collect_Flv_CStyle);
  #else
  tolua_cclass(tolua_S,"Flv_CStyle","Flv_CStyle","Flv_Style",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Flv_CStyle");
   tolua_function(tolua_S,"new",tolua_fltk_flvw_Flv_CStyle_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_flvw_Flv_CStyle_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_flvw_Flv_CStyle_new00_local);
   tolua_function(tolua_S,"x",tolua_fltk_flvw_Flv_CStyle_x00);
   tolua_function(tolua_S,"y",tolua_fltk_flvw_Flv_CStyle_y00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Flv_List","Flv_List","Fl_Group",tolua_collect_Flv_List);
  #else
  tolua_cclass(tolua_S,"Flv_List","Flv_List","Fl_Group",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Flv_List");
   tolua_function(tolua_S,"new",tolua_fltk_flvw_Flv_List_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_flvw_Flv_List_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_flvw_Flv_List_new00_local);
   tolua_function(tolua_S,"add_callback_when",tolua_fltk_flvw_Flv_List_add_callback_when00);
   tolua_function(tolua_S,"add_selection_style",tolua_fltk_flvw_Flv_List_add_selection_style00);
   tolua_function(tolua_S,"bottom_row",tolua_fltk_flvw_Flv_List_bottom_row00);
   tolua_function(tolua_S,"callback_on",tolua_fltk_flvw_Flv_List_callback_on00);
   tolua_function(tolua_S,"callback_when",tolua_fltk_flvw_Flv_List_callback_when00);
   tolua_function(tolua_S,"cancel_edit",tolua_fltk_flvw_Flv_List_cancel_edit00);
   tolua_function(tolua_S,"clear_callback_when",tolua_fltk_flvw_Flv_List_clear_callback_when00);
   tolua_function(tolua_S,"clear_clicks",tolua_fltk_flvw_Flv_List_clear_clicks00);
   tolua_function(tolua_S,"clicks",tolua_fltk_flvw_Flv_List_clicks00);
   tolua_function(tolua_S,"dead_space_color",tolua_fltk_flvw_Flv_List_dead_space_color00);
   tolua_function(tolua_S,"edit_when",tolua_fltk_flvw_Flv_List_edit_when00);
   tolua_function(tolua_S,"editor",tolua_fltk_flvw_Flv_List_editor00);
   tolua_function(tolua_S,"end_edit",tolua_fltk_flvw_Flv_List_end_edit00);
   tolua_function(tolua_S,"feature",tolua_fltk_flvw_Flv_List_feature00);
   tolua_function(tolua_S,"feature_add",tolua_fltk_flvw_Flv_List_feature_add00);
   tolua_function(tolua_S,"feature_remove",tolua_fltk_flvw_Flv_List_feature_remove00);
   tolua_function(tolua_S,"feature_test",tolua_fltk_flvw_Flv_List_feature_test00);
   tolua_function(tolua_S,"full_resize",tolua_fltk_flvw_Flv_List_full_resize00);
   tolua_function(tolua_S,"get_cell_bounds",tolua_fltk_flvw_Flv_List_get_cell_bounds00);
   tolua_function(tolua_S,"get_default_style",tolua_fltk_flvw_Flv_List_get_default_style00);
   tolua_function(tolua_S,"get_row",tolua_fltk_flvw_Flv_List_get_row00);
   tolua_function(tolua_S,"get_style",tolua_fltk_flvw_Flv_List_get_style00);
   tolua_function(tolua_S,"has_scrollbar",tolua_fltk_flvw_Flv_List_has_scrollbar00);
   tolua_function(tolua_S,"load_editor",tolua_fltk_flvw_Flv_List_load_editor00);
   tolua_function(tolua_S,"max_clicks",tolua_fltk_flvw_Flv_List_max_clicks00);
   tolua_function(tolua_S,"move_row",tolua_fltk_flvw_Flv_List_move_row00);
   tolua_function(tolua_S,"multi_select",tolua_fltk_flvw_Flv_List_multi_select00);
   tolua_function(tolua_S,"persist_select",tolua_fltk_flvw_Flv_List_persist_select00);
   tolua_function(tolua_S,"position_editor",tolua_fltk_flvw_Flv_List_position_editor00);
   tolua_function(tolua_S,"row",tolua_fltk_flvw_Flv_List_row00);
   tolua_function(tolua_S,"row_divider",tolua_fltk_flvw_Flv_List_row_divider00);
   tolua_function(tolua_S,"row_footer",tolua_fltk_flvw_Flv_List_row_footer00);
   tolua_function(tolua_S,"row_header",tolua_fltk_flvw_Flv_List_row_header00);
   tolua_function(tolua_S,"row_height",tolua_fltk_flvw_Flv_List_row_height00);
   tolua_function(tolua_S,"set_row_height",tolua_fltk_flvw_Flv_List_set_row_height00);
   tolua_function(tolua_S,"row_offset",tolua_fltk_flvw_Flv_List_row_offset00);
   tolua_function(tolua_S,"row_resizable",tolua_fltk_flvw_Flv_List_row_resizable00);
   tolua_function(tolua_S,"set_row_resizable",tolua_fltk_flvw_Flv_List_set_row_resizable00);
   tolua_function(tolua_S,"row_selected",tolua_fltk_flvw_Flv_List_row_selected00);
   tolua_function(tolua_S,"row_width",tolua_fltk_flvw_Flv_List_row_width00);
   tolua_function(tolua_S,"rows",tolua_fltk_flvw_Flv_List_rows00);
   tolua_function(tolua_S,"rows_per_page",tolua_fltk_flvw_Flv_List_rows_per_page00);
   tolua_function(tolua_S,"save_editor",tolua_fltk_flvw_Flv_List_save_editor00);
   tolua_function(tolua_S,"scrollbar_width",tolua_fltk_flvw_Flv_List_scrollbar_width00);
   tolua_function(tolua_S,"select_locked",tolua_fltk_flvw_Flv_List_select_locked00);
   tolua_function(tolua_S,"select_start_row",tolua_fltk_flvw_Flv_List_select_start_row00);
   tolua_function(tolua_S,"start_edit",tolua_fltk_flvw_Flv_List_start_edit00);
   tolua_function(tolua_S,"top_row",tolua_fltk_flvw_Flv_List_top_row00);
   tolua_function(tolua_S,"why_event",tolua_fltk_flvw_Flv_List_why_event00);
   tolua_variable(tolua_S,"global_style",tolua_get_Flv_List_global_style,tolua_set_Flv_List_global_style);
   tolua_variable(tolua_S,"row_style",tolua_get_Flv_List_row_style,tolua_set_Flv_List_row_style);
   tolua_function(tolua_S,"handle",tolua_fltk_flvw_Flv_List_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Flv_List","Lua__Flv_List","Flv_List",tolua_collect_Lua__Flv_List);
  #else
  tolua_cclass(tolua_S,"Lua__Flv_List","Lua__Flv_List","Flv_List",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Flv_List");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_flvw_Lua__Flv_List_tolua__set_instance00);
   tolua_function(tolua_S,"Flv_List__draw_row",tolua_fltk_flvw_Lua__Flv_List_Flv_List__draw_row00);
   tolua_function(tolua_S,"Flv_List__get_cell_bounds",tolua_fltk_flvw_Lua__Flv_List_Flv_List__get_cell_bounds00);
   tolua_function(tolua_S,"Flv_List__get_style",tolua_fltk_flvw_Lua__Flv_List_Flv_List__get_style00);
   tolua_function(tolua_S,"Flv_List__load_editor",tolua_fltk_flvw_Lua__Flv_List_Flv_List__load_editor00);
   tolua_function(tolua_S,"Flv_List__position_editor",tolua_fltk_flvw_Lua__Flv_List_Flv_List__position_editor00);
   tolua_function(tolua_S,"Flv_List__row_height",tolua_fltk_flvw_Lua__Flv_List_Flv_List__row_height01);
   tolua_function(tolua_S,"Flv_List__save_editor",tolua_fltk_flvw_Lua__Flv_List_Flv_List__save_editor00);
   tolua_function(tolua_S,"Flv_List__handle",tolua_fltk_flvw_Lua__Flv_List_Flv_List__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_flvw_Lua__Flv_List_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_flvw_Lua__Flv_List_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_flvw_Lua__Flv_List_new00_local);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"FLV_COL_HEADER",FLV_COL_HEADER);
  tolua_constant(tolua_S,"FLV_COL_FOOTER",FLV_COL_FOOTER);
  tolua_constant(tolua_S,"FLV_MOVE_ON_ENTER_ROW_COL",FLV_MOVE_ON_ENTER_ROW_COL);
  tolua_constant(tolua_S,"FLV_MOVE_ON_ENTER_COL_ROW",FLV_MOVE_ON_ENTER_COL_ROW);
  tolua_constant(tolua_S,"FLV_MOVE_ON_ENTER_NEVER",FLV_MOVE_ON_ENTER_NEVER);
  tolua_constant(tolua_S,"FLV_BUTTON1",FLV_BUTTON1);
  tolua_constant(tolua_S,"FLV_BUTTON2",FLV_BUTTON2);
  tolua_constant(tolua_S,"FLV_BUTTON3",FLV_BUTTON3);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Flv_Table","Flv_Table","Flv_List",tolua_collect_Flv_Table);
  #else
  tolua_cclass(tolua_S,"Flv_Table","Flv_Table","Flv_List",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Flv_Table");
   tolua_function(tolua_S,"new",tolua_fltk_flvw_Flv_Table_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_flvw_Flv_Table_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_flvw_Flv_Table_new00_local);
   tolua_function(tolua_S,"add_selection_style",tolua_fltk_flvw_Flv_Table_add_selection_style00);
   tolua_function(tolua_S,"buttons",tolua_fltk_flvw_Flv_Table_buttons00);
   tolua_function(tolua_S,"cancel_edit",tolua_fltk_flvw_Flv_Table_cancel_edit00);
   tolua_function(tolua_S,"cell_area",tolua_fltk_flvw_Flv_Table_cell_area00);
   tolua_function(tolua_S,"cell_selected",tolua_fltk_flvw_Flv_Table_cell_selected00);
   tolua_function(tolua_S,"col",tolua_fltk_flvw_Flv_Table_col00);
   tolua_function(tolua_S,"col_divider",tolua_fltk_flvw_Flv_Table_col_divider00);
   tolua_function(tolua_S,"col_footer",tolua_fltk_flvw_Flv_Table_col_footer00);
   tolua_function(tolua_S,"col_header",tolua_fltk_flvw_Flv_Table_col_header00);
   tolua_function(tolua_S,"col_resizable",tolua_fltk_flvw_Flv_Table_col_resizable00);
   tolua_function(tolua_S,"set_col_resizable",tolua_fltk_flvw_Flv_Table_set_col_resizable00);
   tolua_function(tolua_S,"col_selected",tolua_fltk_flvw_Flv_Table_col_selected00);
   tolua_function(tolua_S,"col_width",tolua_fltk_flvw_Flv_Table_col_width00);
   tolua_function(tolua_S,"set_col_width",tolua_fltk_flvw_Flv_Table_set_col_width00);
   tolua_function(tolua_S,"cols",tolua_fltk_flvw_Flv_Table_cols00);
   tolua_function(tolua_S,"edit_when",tolua_fltk_flvw_Flv_Table_edit_when00);
   tolua_function(tolua_S,"end_edit",tolua_fltk_flvw_Flv_Table_end_edit00);
   tolua_function(tolua_S,"get_cell_bounds",tolua_fltk_flvw_Flv_Table_get_cell_bounds00);
   tolua_function(tolua_S,"get_col",tolua_fltk_flvw_Flv_Table_get_col00);
   tolua_function(tolua_S,"get_style",tolua_fltk_flvw_Flv_Table_get_style00);
   tolua_function(tolua_S,"move_col",tolua_fltk_flvw_Flv_Table_move_col00);
   tolua_function(tolua_S,"move_on_enter",tolua_fltk_flvw_Flv_Table_move_on_enter00);
   tolua_function(tolua_S,"move_row",tolua_fltk_flvw_Flv_Table_move_row00);
   tolua_function(tolua_S,"row",tolua_fltk_flvw_Flv_Table_row00);
   tolua_function(tolua_S,"select_row",tolua_fltk_flvw_Flv_Table_select_row00);
   tolua_function(tolua_S,"select_start_col",tolua_fltk_flvw_Flv_Table_select_start_col00);
   tolua_function(tolua_S,"start_edit",tolua_fltk_flvw_Flv_Table_start_edit00);
   tolua_variable(tolua_S,"col_style",tolua_get_Flv_Table_col_style,tolua_set_Flv_Table_col_style);
   tolua_function(tolua_S,"resize",tolua_fltk_flvw_Flv_Table_resize00);
   tolua_function(tolua_S,"handle",tolua_fltk_flvw_Flv_Table_handle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Lua__Flv_Table","Lua__Flv_Table","Flv_Table",tolua_collect_Lua__Flv_Table);
  #else
  tolua_cclass(tolua_S,"Lua__Flv_Table","Lua__Flv_Table","Flv_Table",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Lua__Flv_Table");
   tolua_function(tolua_S,"tolua__set_instance",tolua_fltk_flvw_Lua__Flv_Table_tolua__set_instance00);
   tolua_function(tolua_S,"Flv_Table__draw_cell",tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__draw_cell00);
   tolua_function(tolua_S,"Flv_Table__col_width",tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__col_width01);
   tolua_function(tolua_S,"Flv_Table__get_style",tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__get_style00);
   tolua_function(tolua_S,"Flv_Table__resize",tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__resize00);
   tolua_function(tolua_S,"Flv_Table__handle",tolua_fltk_flvw_Lua__Flv_Table_Flv_Table__handle00);
   tolua_function(tolua_S,"new",tolua_fltk_flvw_Lua__Flv_Table_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_flvw_Lua__Flv_Table_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_flvw_Lua__Flv_Table_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Flve_Check_Button","Flve_Check_Button","Fl_Check_Button",tolua_collect_Flve_Check_Button);
  #else
  tolua_cclass(tolua_S,"Flve_Check_Button","Flve_Check_Button","Fl_Check_Button",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Flve_Check_Button");
   tolua_function(tolua_S,"new",tolua_fltk_flvw_Flve_Check_Button_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_flvw_Flve_Check_Button_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_flvw_Flve_Check_Button_new00_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Flve_Input","Flve_Input","Fl_Input",tolua_collect_Flve_Input);
  #else
  tolua_cclass(tolua_S,"Flve_Input","Flve_Input","Fl_Input",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Flve_Input");
   tolua_function(tolua_S,"new",tolua_fltk_flvw_Flve_Input_new00);
   tolua_function(tolua_S,"new_local",tolua_fltk_flvw_Flve_Input_new00_local);
   tolua_function(tolua_S,".call",tolua_fltk_flvw_Flve_Input_new00_local);
  tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 Fl::user_data = (void*)tolua_S;
 return 1;
}


#ifdef __cplusplus
 extern "C" {
#endif

#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 TOLUA_API int luaopen_fltk (lua_State* tolua_S) {
 return tolua_fltk_open(tolua_S);
};
#endif

#ifdef __cplusplus
}
#endif

